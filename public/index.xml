<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TruestMe&#39;s Blog</title>
    <link>http://localhost:1313/algolia.json</link>
    <description>Recent content on TruestMe&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 03 Mar 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>计算机系统基础</title>
      <link>http://localhost:1313/post/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Mon, 03 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80/</guid>
      <description>&lt;h1 id=&#34;参考链接&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%8f%82%e8%80%83%e9%93%be%e6%8e%a5&#34;&gt;&lt;/a&gt;&#xA;参考链接&#xA;&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://www.icourse163.org/course/NJU-1001625001&#34;&gt;计算机系统基础(一)：程序的表示、转换与链接_南京大学_中国大学MOOC(慕课)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;概述&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%a6%82%e8%bf%b0&#34;&gt;&lt;/a&gt;&#xA;概述&#xA;&lt;/h1&gt;&lt;h2 id=&#34;计算机基本工作原理&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e8%ae%a1%e7%ae%97%e6%9c%ba%e5%9f%ba%e6%9c%ac%e5%b7%a5%e4%bd%9c%e5%8e%9f%e7%90%86&#34;&gt;&lt;/a&gt;&#xA;计算机基本工作原理&#xA;&lt;/h2&gt;&lt;h3 id=&#34;冯诺依曼结构&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%86%af%e8%af%ba%e4%be%9d%e6%9b%bc%e7%bb%93%e6%9e%84&#34;&gt;&lt;/a&gt;&#xA;冯诺依曼结构&#xA;&lt;/h3&gt;&lt;p&gt;硬件模型基本结构&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/08/6_11_15_6_202408061115430.png&#34; alt=&#34;冯诺依曼结构&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;模型中包含&lt;code&gt;以下四个部分&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;用来存放指令和数据的主存储器，简称==主存或内存==；&lt;/li&gt;&#xA;&lt;li&gt;用来进行算术逻辑运算的部件，即算术逻辑部件(Arithmetic Logic Unit,简称==ALU==),在ALU操作控制&#xA;信号ALUop的控制下，ALU可以对输人端A和B进行不同的运算，得到结果F;&lt;/li&gt;&#xA;&lt;li&gt;用于自动逐条取出指令并进行译码的部件，即控制部件(Control Unit,简称CU),也称==控制器==；&lt;/li&gt;&#xA;&lt;li&gt;用来和用户交互的==输入设备和输出设备==。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;em&gt;CPU内部&lt;code&gt;不同的组件&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;为了临时存放从主存取来的数据或运算的结果，还需要若干通用寄存器(General Purpose Register)组成通用寄存器组(==GPRs==)，ALU两个输入端A和B的数据来自通用寄存器；&lt;/li&gt;&#xA;&lt;li&gt;ALU运算的结果会产生标志信息，例如，结果是否为0（零标志ZF)、是否为负数（符号标志SF)等，这些标志信息需要记录在专门的==标志寄存器==中；&lt;/li&gt;&#xA;&lt;li&gt;从主存取来的指令需要临时保存在指令寄存器(Instruction Register,简称==IR==)中；&lt;/li&gt;&#xA;&lt;li&gt;CPU为了自动按序读取主存中的指令，还需要有一个程序计数器(Program Counter,简称==PC==),在执行当前指令过程中，自动&#xA;计算出下一条指令的地址并送到PC中保存。&lt;/li&gt;&#xA;&lt;li&gt;通常把控制部件、运算部件和各类寄存器互连组成的电路称为中央处理器(Central Processing Unit,简称CPU),简称处理器。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;em&gt;CPU读取数据&lt;code&gt;过程&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;CPU需要从通用寄存器中取数据到ALU运算，或把ALU运算的结果保存到通用寄存器中，因此，需要给每个通用寄存器编号；&lt;/p&gt;&#xA;&lt;p&gt;同样，主存中每个单元也需要编号，称为主存单元地址，简称主存地址。&lt;/p&gt;&#xA;&lt;p&gt;通用寄存器和主存都属于存储部件，通常，计算机中的存储部件从0开始编号，例如，4个通用寄存器编号分别为0 ~ 3；16个主存单元编号分别为0 ~ 15。&lt;/p&gt;&#xA;&lt;p&gt;CPU为了从主存取指令和存取数据，需要通过传输介质与主存相连，通常把连接不同部件进行信息传输的介质称为==总线==，其中，包含了用于传输地址信息、数据信息和控制信息的地址线、数据线和控制线。&lt;/p&gt;&#xA;&lt;p&gt;CPU访问主存时，需先将主存地址、读/写命令分别送到总线的地址线、控制线，然后通过数据线发送或接收数据。CPU送到地址线的主存地址应先存放在主存地址寄存器(Memory Address Register,简称==MAR==)中，发送到或从数据线取来的信息存放在主存数据寄存器(Memory Data Register,简称==MDR==)中。&lt;/p&gt;&#xA;&lt;h3 id=&#34;程序和指令的执行过程&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%a8%8b%e5%ba%8f%e5%92%8c%e6%8c%87%e4%bb%a4%e7%9a%84%e6%89%a7%e8%a1%8c%e8%bf%87%e7%a8%8b&#34;&gt;&lt;/a&gt;&#xA;程序和指令的执行过程&#xA;&lt;/h3&gt;&lt;p&gt;指令(instruction)是用0和1表示的一串0/1序列，用来指示CPU完成一个特定的原子操作。例如，&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;取数指令(load)从主存单元中取出数据存放到通用寄存器中；&lt;/li&gt;&#xA;&lt;li&gt;存数指令（store)将通用寄存器的内容写入主存单元；&lt;/li&gt;&#xA;&lt;li&gt;加法指令(add)将两个通用寄存器内容相加后送入结果寄存器；&lt;/li&gt;&#xA;&lt;li&gt;传送指令(mov)将一个通用寄存器的内容送到另一个通用寄存器；&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;指令通常被划分为若干个字段，有操作码、地址码等字段。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;操作码字段指出指令的操作类型，如取数、存数、加、减、传送、跳转等；&lt;/li&gt;&#xA;&lt;li&gt;地址码字段指出指令所处理的操作数的地址，如寄存器编号、主存单元编号等。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;指令格式如下&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2025/03/3_10_1_19_202503031001336.png&#34; alt=&#34;指令格式&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;实现一个程序的过程&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/08/6_11_41_21_202408061141156.png&#34; alt=&#34;实现程序的过程&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;“存储程序”工作方式规定，程序执行前，需将程序包含的指令和数据先送入主存，一旦启动程序执行，则计算机必须能够在不需操作人员干预下自动完成逐条指令取出和执行的任务。&lt;/p&gt;&#xA;&lt;p&gt;一个程序的执行就是周而复始地执行一条一条指令的过程。每条指令的执行过程包括：从主存取指令、对指令进行译码、PC增量（图中的PC+“1”表示PC的内容加上当前这一条指令的长度)、取操作数并执行、将结果送主存或寄存器保存。&#xA;程序执行前，首先将程序的起始地址存放在PC中，取指令时，将PC的内容作为地址访问主存。每条指令执行过程中，都需要计算下条将执行指令的主存地址，并送到PC中。若当前指令为顺序型指令，则下条指令地址为PC的内容加上当前指令的长度；若当前指令为跳转型指令，则下条指令地址为指令中指定的目标地址。当前指令执行完后，根据PC的值到主存中取到的是下条将要执行的指令，因而计算机能够周而复始地自动取出并执行一条一条指令。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/08/6_11_43_9_202408061143902.png&#34; alt=&#34;程序执行过程&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;程序的开发与运行&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%a8%8b%e5%ba%8f%e7%9a%84%e5%bc%80%e5%8f%91%e4%b8%8e%e8%bf%90%e8%a1%8c&#34;&gt;&lt;/a&gt;&#xA;程序的开发与运行&#xA;&lt;/h2&gt;&lt;h3 id=&#34;程序设计语言和翻译程序&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%a8%8b%e5%ba%8f%e8%ae%be%e8%ae%a1%e8%af%ad%e8%a8%80%e5%92%8c%e7%bf%bb%e8%af%91%e7%a8%8b%e5%ba%8f&#34;&gt;&lt;/a&gt;&#xA;程序设计语言和翻译程序&#xA;&lt;/h3&gt;&lt;p&gt;从抽象层次上来分，可以分成高级语言和低级语言两类。&lt;/p&gt;</description>
    </item>
    <item>
      <title>算法</title>
      <link>http://localhost:1313/post/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95/</link>
      <pubDate>Sat, 01 Mar 2025 11:00:00 -0700</pubDate>
      <guid>http://localhost:1313/post/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95/</guid>
      <description>&lt;h1 id=&#34;参考链接&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%8f%82%e8%80%83%e9%93%be%e6%8e%a5&#34;&gt;&lt;/a&gt;&#xA;参考链接&#xA;&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://www.hello-algo.com/&#34;&gt;Hello 算法 (hello-algo.com)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;复杂度分析&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%a4%8d%e6%9d%82%e5%ba%a6%e5%88%86%e6%9e%90&#34;&gt;&lt;/a&gt;&#xA;复杂度分析&#xA;&lt;/h1&gt;&lt;h2 id=&#34;迭代&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e8%bf%ad%e4%bb%a3&#34;&gt;&lt;/a&gt;&#xA;迭代&#xA;&lt;/h2&gt;&lt;p&gt;迭代（iteration）是一种重复执行某个任务的控制结构。在迭代中，程序会在满足一定的条件下重复执行某段代码，直到这个条件不再满足。&lt;/p&gt;&#xA;&lt;h3 id=&#34;for循环&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#for%e5%be%aa%e7%8e%af&#34;&gt;&lt;/a&gt;&#xA;for循环&#xA;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;for&lt;/code&gt; 循环是最常见的迭代形式之一，&lt;strong&gt;适合在预先知道迭代次数时使用&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;p&gt;以下函数基于 &lt;code&gt;for&lt;/code&gt; 循环实现了求和 1+2+⋯+𝑛 ，求和结果使用变量 &lt;code&gt;res&lt;/code&gt; 记录。需要注意的是，Python 中 &lt;code&gt;range(a, b)&lt;/code&gt; 对应的区间是“左闭右开”的，对应的遍历范围为 𝑎,𝑎+1,…,𝑏−1 ：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/* for 循环 */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;forLoop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 循环求和 1, 2, ..., n-1, n&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/11/18_8_16_26_202411180816252.png&#34; alt=&#34;求和流程图&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;此求和函数的操作数量与输入数据大小 𝑛 成正比，或者说成“线性关系”。实际上，&lt;strong&gt;时间复杂度描述的就是这个“线性关系”&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;h3 id=&#34;while循环&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#while%e5%be%aa%e7%8e%af&#34;&gt;&lt;/a&gt;&#xA;while循环&#xA;&lt;/h3&gt;&lt;p&gt;与 &lt;code&gt;for&lt;/code&gt; 循环类似，&lt;code&gt;while&lt;/code&gt; 循环也是一种实现迭代的方法。在 &lt;code&gt;while&lt;/code&gt; 循环中，程序每轮都会先检查条件，如果条件为真，则继续执行，否则就结束循环。&lt;/p&gt;&#xA;&lt;p&gt;下面我们用 &lt;code&gt;while&lt;/code&gt; 循环来实现求和 1+2+⋯+𝑛 ：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/* while 循环 */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;whileLoop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 初始化条件变量&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// 循环求和 1, 2, ..., n-1, n&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 更新条件变量&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;while&lt;/code&gt; 循环比 &lt;code&gt;for&lt;/code&gt; 循环的自由度更高&lt;/strong&gt;。在 &lt;code&gt;while&lt;/code&gt; 循环中，我们可以自由地设计条件变量的初始化和更新步骤。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ADC</title>
      <link>http://localhost:1313/post/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E5%A4%96%E8%AE%BE%E7%BB%84%E4%BB%B6/adc/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E5%A4%96%E8%AE%BE%E7%BB%84%E4%BB%B6/adc/</guid>
      <description>&lt;h1 id=&#34;adc简介&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#adc%e7%ae%80%e4%bb%8b&#34;&gt;&lt;/a&gt;&#xA;ADC简介&#xA;&lt;/h1&gt;&lt;h2 id=&#34;介绍&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e4%bb%8b%e7%bb%8d&#34;&gt;&lt;/a&gt;&#xA;介绍&#xA;&lt;/h2&gt;&lt;p&gt;•ADC（Analog-Digital Converter）模拟-数字转换器&lt;/p&gt;&#xA;&lt;p&gt;•ADC可以将引脚上连续变化的模拟电压转换为内存中存储的数字变量，建立模拟电路到数字电路的桥梁&lt;/p&gt;&#xA;&lt;p&gt;•12位逐次逼近型ADC，1us转换时间&lt;/p&gt;&#xA;&lt;p&gt;•输入电压范围：0&lt;del&gt;3.3V，转换结果范围：0&lt;/del&gt;4095&lt;/p&gt;&#xA;&lt;p&gt;•18个输入通道，可测量16个外部和2个内部信号源&lt;/p&gt;&#xA;&lt;p&gt;•规则组和注入组两个转换单元&lt;/p&gt;&#xA;&lt;p&gt;•模拟看门狗自动监测输入电压范围&lt;/p&gt;&#xA;&lt;p&gt;•STM32F103C8T6 ADC资源：ADC1、ADC2，10个外部输入通道&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/07/9_9_7_4_202407090907138.png&#34; alt=&#34;image-20240709090704068&#34;&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;原理&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%8e%9f%e7%90%86&#34;&gt;&lt;/a&gt;&#xA;原理&#xA;&lt;/h1&gt;&lt;h2 id=&#34;常见adc类型&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%b8%b8%e8%a7%81adc%e7%b1%bb%e5%9e%8b&#34;&gt;&lt;/a&gt;&#xA;常见ADC类型&#xA;&lt;/h2&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;strong&gt;ADC电路类型&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;优点&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;缺点&lt;/strong&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;并联比较型&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;转换速度最快&lt;/td&gt;&#xA;          &lt;td&gt;成本高、功耗高，分辨率低&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;逐次逼近型&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;结构简单，功耗低&lt;/td&gt;&#xA;          &lt;td&gt;转换速度较慢&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;并联比较型&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%b9%b6%e8%81%94%e6%af%94%e8%be%83%e5%9e%8b&#34;&gt;&lt;/a&gt;&#xA;并联比较型&#xA;&lt;/h2&gt;&lt;p&gt;将输入的参考电压和模拟电压输入进行比较，比较器会输出0或1从而获得二进制的数字量&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/07/9_9_8_21_202407090908750.png&#34; alt=&#34;image-20240709090821671&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;逐次逼近型&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e9%80%90%e6%ac%a1%e9%80%bc%e8%bf%91%e5%9e%8b&#34;&gt;&lt;/a&gt;&#xA;逐次逼近型&#xA;&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/07/9_9_8_44_202407090908861.png&#34; alt=&#34;image-20240709090844769&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/07/9_9_8_50_202407090908781.png&#34; alt=&#34;image-20240709090850698&#34;&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;特性&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%89%b9%e6%80%a7&#34;&gt;&lt;/a&gt;&#xA;特性&#xA;&lt;/h1&gt;&lt;h2 id=&#34;特性参数&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%89%b9%e6%80%a7%e5%8f%82%e6%95%b0&#34;&gt;&lt;/a&gt;&#xA;特性参数&#xA;&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/07/9_9_10_13_202407090910385.png&#34; alt=&#34;image-20240709091013333&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;各系列主要特性&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%90%84%e7%b3%bb%e5%88%97%e4%b8%bb%e8%a6%81%e7%89%b9%e6%80%a7&#34;&gt;&lt;/a&gt;&#xA;各系列主要特性&#xA;&lt;/h2&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;strong&gt;主要特性&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;F1&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;F4&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;F7&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;H7&lt;/strong&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;ADC类型&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;逐次逼近型&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;分辨率&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;12位&lt;/td&gt;&#xA;          &lt;td&gt;6/8/10/12位&lt;/td&gt;&#xA;          &lt;td&gt;6/8/10/12位&lt;/td&gt;&#xA;          &lt;td&gt;8/10/12/14/16位&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;ADC时钟频率&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;14MHz（max）&lt;/td&gt;&#xA;          &lt;td&gt;36MHz（max）&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;采样时间&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;采样时间越长, 转换结果相对越准确, 但是转换速度就越慢&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;转换时间&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;与ADC时钟频率、分辨率和采样时间等有关&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;供电电压&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;VSSA ：0V，VDDA ：2.4V~3.6V（全速运行）&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;参考电压&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;VREF– ：0V，VREF+一般为3.3V&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;输入电压&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;VREF–≤VIN≤VREF+&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;整体结构&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%95%b4%e4%bd%93%e7%bb%93%e6%9e%84&#34;&gt;&lt;/a&gt;&#xA;整体结构&#xA;&lt;/h1&gt;&lt;h2 id=&#34;结构框图&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%bb%93%e6%9e%84%e6%a1%86%e5%9b%be&#34;&gt;&lt;/a&gt;&#xA;结构框图&#xA;&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/07/9_9_11_6_202407090911343.png&#34; alt=&#34;image-20240709091106271&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Asm</title>
      <link>http://localhost:1313/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/asm/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/asm/</guid>
      <description>&lt;h1 id=&#34;参考链接&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%8f%82%e8%80%83%e9%93%be%e6%8e%a5&#34;&gt;&lt;/a&gt;&#xA;参考链接&#xA;&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://www.ruanyifeng.com/blog/2018/01/assembly-language-primer.html&#34;&gt;汇编语言入门教程 - 阮一峰的网络日志&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://cankaoshouce.com/assembly/assembly-course.html&#34;&gt;汇编语言 教程 | 参考手册 (cankaoshouce.com)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.cs.virginia.edu/~evans/cs216/guides/x86.html&#34;&gt;Guide to x86 Assembly&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.ibiblio.org/gferg/ldp/GCC-Inline-Assembly-HOWTO.html&#34;&gt;GCC-Inline-Assembly-HOWTO &amp;mdash; GCC-Inline-Assembly-HOWTO&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.jianshu.com/p/10e8a7b4f980&#34;&gt;译：GCC内联汇编入门 - 简书 (jianshu.com)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://developer.arm.com/documentation/ddi0597/2024-09?lang=en&#34;&gt;Arm A-profile A32/T32 Instruction Set Architecture&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;基础知识&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%9f%ba%e7%a1%80%e7%9f%a5%e8%af%86&#34;&gt;&lt;/a&gt;&#xA;基础知识&#xA;&lt;/h1&gt;&lt;h2 id=&#34;引言&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%bc%95%e8%a8%80&#34;&gt;&lt;/a&gt;&#xA;引言&#xA;&lt;/h2&gt;&lt;p&gt;我们知道，CPU 只负责计算，本身不具备智能。你输入一条指令（instruction），它就运行一次，然后停下来，等待下一条指令。&lt;/p&gt;&#xA;&lt;p&gt;这些指令都是二进制的，称为操作码（opcode），比如加法指令就是&lt;code&gt;00000011&lt;/code&gt;。&lt;a href=&#34;https://www.ruanyifeng.com/blog/2014/11/compiler.html&#34;&gt;编译器&lt;/a&gt;的作用，就是将高级语言写好的程序，翻译成一条条操作码。&lt;/p&gt;&#xA;&lt;p&gt;对于人类来说，二进制程序是不可读的，根本看不出来机器干了什么。为了解决可读性的问题，以及偶尔的编辑需求，就诞生了汇编语言。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;汇编语言是二进制指令的文本形式&lt;/strong&gt;，与指令是一一对应的关系。比如，加法指令&lt;code&gt;00000011&lt;/code&gt;写成汇编语言就是 ADD。只要还原成二进制，汇编语言就可以被 CPU 直接执行，所以它是最底层的低级语言。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!important]&lt;/p&gt;&#xA;&lt;p&gt;以下教程开发环境为NAsm，使用Inte格式。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;NASM&lt;/strong&gt; 更适合跨平台、轻量级的汇编开发，语法简洁，灵活性高。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;MASM&lt;/strong&gt; 则更适合 Windows 平台上的专业开发，功能丰富，语法较复杂，集成度高，适合开发大规模的 Windows 应用程序和驱动。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!TIP]&lt;/p&gt;&#xA;&lt;p&gt;汇编语法主要有两大派系：AT&amp;amp;T语法 和 Intel语法。&lt;/p&gt;&#xA;&lt;p&gt;GAS (GNU Assembler) 编译器默认是基于AT&amp;amp;T语法；&lt;a href=&#34;https://so.csdn.net/so/search?q=MASM&amp;amp;spm=1001.2101.3001.7020&#34;&gt;MASM&lt;/a&gt;、NASM等编译器默认基于Intel语法。&lt;/p&gt;&#xA;&lt;p&gt;需要说明的是，GAS汇编器除了支持AT&amp;amp;T语法之外，自己也定义了一些额外的&lt;code&gt;directives&lt;/code&gt;，用于辅助完成汇编操作。关于GAS汇编器及其语法可以参考GAS的官方文档：https://sourceware.org/binutils/docs/as/&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;寄存器&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%af%84%e5%ad%98%e5%99%a8&#34;&gt;&lt;/a&gt;&#xA;寄存器&#xA;&lt;/h2&gt;&lt;p&gt;CPU 本身只负责运算，不负责储存数据。数据一般都储存在内存之中，CPU 要用的时候就去内存读写数据。但是，CPU 的运算速度远高于内存的读写速度，为了避免被拖慢，CPU 都自带一级缓存和二级缓存。基本上，CPU 缓存可以看作是读写速度较快的内存。&lt;/p&gt;&#xA;&lt;p&gt;但是，CPU 缓存还是不够快，另外数据在缓存里面的地址是不固定的，CPU 每次读写都要寻址也会拖慢速度。因此，除了缓存之外，CPU 还自带了寄存器（register），用来储存最常用的数据。也就是说，那些最频繁读写的数据（比如循环变量），都会放在寄存器里面，CPU 优先读写寄存器，再由寄存器跟内存交换数据。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Batch</title>
      <link>http://localhost:1313/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/batch/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/batch/</guid>
      <description>&lt;h1 id=&#34;批处理基础&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%89%b9%e5%a4%84%e7%90%86%e5%9f%ba%e7%a1%80&#34;&gt;&lt;/a&gt;&#xA;批处理基础&#xA;&lt;/h1&gt;&lt;h2 id=&#34;注释&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%b3%a8%e9%87%8a&#34;&gt;&lt;/a&gt;&#xA;注释&#xA;&lt;/h2&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;REM&lt;/code&gt;&lt;/strong&gt; 或 &lt;strong&gt;&lt;code&gt;::&lt;/code&gt;&lt;/strong&gt; 用于添加注释。注释不会被执行。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-batch&#34; data-lang=&#34;batch&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;REM 这是一个注释&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;: 这也是一个注释&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;显示文本&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%98%be%e7%a4%ba%e6%96%87%e6%9c%ac&#34;&gt;&lt;/a&gt;&#xA;显示文本&#xA;&lt;/h2&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;echo&lt;/code&gt;&lt;/strong&gt; 显示文本。&lt;code&gt;@echo off&lt;/code&gt; 可以关闭回显（即关闭命令本身的显示），但保留输出。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-batch&#34; data-lang=&#34;batch&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; Hello, World!&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; off&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; 这行代码只显示输出，不显示命令本身&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;变量&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%8f%98%e9%87%8f&#34;&gt;&lt;/a&gt;&#xA;变量&#xA;&lt;/h2&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;set&lt;/code&gt;&lt;/strong&gt; 用于定义变量，&lt;strong&gt;&lt;code&gt;%variable%&lt;/code&gt;&lt;/strong&gt; 用于访问变量值。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-batch&#34; data-lang=&#34;batch&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;myVar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;Hello&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;%myVar%&lt;/span&gt; World!&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;set /p&lt;/code&gt;&lt;/strong&gt; 从用户输入中获取变量值。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-batch&#34; data-lang=&#34;batch&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;/p&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;userInput&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;Please enter your name: &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; Hello, &lt;span class=&#34;nv&#34;&gt;%userInput%&lt;/span&gt;!&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;条件语句&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%9d%a1%e4%bb%b6%e8%af%ad%e5%8f%a5&#34;&gt;&lt;/a&gt;&#xA;条件语句&#xA;&lt;/h2&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;if&lt;/code&gt;&lt;/strong&gt; 用于执行条件检查，可以用于字符串比较、数值比较和文件存在性检查。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-batch&#34; data-lang=&#34;batch&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%myVar%&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello&amp;#34;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; It is Hello!&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;exist&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;file.txt&amp;#34;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; File exists!&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;/i&lt;/code&gt;：忽略大小写。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;比较操作符：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;字符串比较：&lt;code&gt;==&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;数值比较：&lt;code&gt;equ（equal，等于）&lt;/code&gt;、&lt;code&gt;neq（not equal，不等于）&lt;/code&gt;、&lt;code&gt;lss（less than，小于）&lt;/code&gt;、&lt;code&gt;leq（less than or equal to，小于等于）&lt;/code&gt;、&lt;code&gt;gtr（greater than，大于）&lt;/code&gt;、&lt;code&gt;geq（greater than or equal to)，大于等于&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-batch&#34; data-lang=&#34;batch&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;/a&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;num1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;/a&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;num2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;%num1%&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;leq&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;%num2%&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; num1 is less than or equal to num2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!TIP]&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bluetooth</title>
      <link>http://localhost:1313/post/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/bluetooth/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/bluetooth/</guid>
      <description>&lt;h1 id=&#34;参考链接&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%8f%82%e8%80%83%e9%93%be%e6%8e%a5&#34;&gt;&lt;/a&gt;&#xA;参考链接&#xA;&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/lanhuazui10/article/details/144194112&#34;&gt;深入浅出低功耗蓝牙(BLE)协议栈及蓝牙连接过程_蓝牙芯片的寄存器组为什么需要分为两块-CSDN博客&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/xubin341719/article/details/38145507?spm=1001.2014.3001.5502&#34;&gt;蓝牙核心技术概述（一）:蓝牙概述_蓝牙技术-CSDN博客&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/xubin341719/article/details/38303881?spm=1001.2014.3001.5502&#34;&gt;蓝牙核心技术概述（三）： 蓝牙协议规范（射频、基带链路控制、链路管理）_蓝牙3.0技术规范-CSDN博客&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/xubin341719/article/details/38305331&#34;&gt;蓝牙核心技术概述（四）：蓝牙协议规范（HCI、L2CAP、SDP、RFOCMM）_蓝牙通信帧分类-CSDN博客&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/xubin341719/article/details/38335533&#34;&gt;蓝牙核心技术概述（五）：蓝牙协议规范（irOBEX、BNEP、AVDTP、AVCTP）_蓝牙核心bnep-CSDN博客&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://www.giraffexiu.love/index.php/2024/10/22/ble%E5%8D%8F%E8%AE%AE%E5%AD%A6%E4%B9%A0/&#34;&gt;BLE协议学习 – 学习笔记 (giraffexiu.love)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.bilibili.com/opus/697239519074713670&#34;&gt;ESP32教程第二章讲义 - 哔哩哔哩 (bilibili.com)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://rfc.nop.hu/bluetooth/AssignedNumbersGenericAccessProfile.pdf&#34;&gt;Bluetooth.org - Generic Access Profile (nop.hu)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.bluetooth.com/specifications/specs/core-specification-6-0/&#34;&gt;Core Specification | Bluetooth® Technology Website&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.bluetooth.com/specifications/assigned-numbers/&#34;&gt;Assigned Numbers | Bluetooth® Technology Website&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/zzfenglin/article/details/51303211&#34;&gt;低功耗蓝牙BLE之连接建立_低功耗蓝牙的连接过程-CSDN博客&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/zzfenglin/article/details/51304084&#34;&gt;低功耗蓝牙BLE之连接事件、连接参数和更新方法_蓝牙设备为什么拼命发包-CSDN博客&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/yxyy3604/article/details/112857135&#34;&gt;蓝牙配对安全机制解析：防止中间人与被动监听攻击-CSDN博客&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/lim11/p/11158153.html&#34;&gt;深入理解低功耗蓝牙的配对过程- Part 1 Pairing Feature Exchange - SZ_LM - 博客园&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/lim11/p/11168601.html&#34;&gt;深入理解低功耗蓝牙的配对过程- Part 2 Key Generation Methods - SZ_LM - 博客园&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/iini/p/12801242.html&#34;&gt;低功耗蓝牙配对绑定解读和实践 - iini - 博客园&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/qwe5959798/article/details/134310315&#34;&gt;蓝牙安全管理(SM:Security Manager)规范详解_蓝牙csrk-CSDN博客&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/guoqx/article/details/132841376&#34;&gt;蓝牙 - 什么是Man-in-the-middle protection_蓝牙中间人攻击-CSDN博客&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/strtoul/article/details/138186417&#34;&gt;了解低功耗蓝牙中的安全密钥_irk ltk-CSDN博客&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>BootLoader</title>
      <link>http://localhost:1313/post/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/bootloader/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/bootloader/</guid>
      <description>&lt;h1 id=&#34;参考链接&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%8f%82%e8%80%83%e9%93%be%e6%8e%a5&#34;&gt;&lt;/a&gt;&#xA;参考链接&#xA;&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/u012406840/article/details/108180654&#34;&gt;基于UDS的BootLoader设计——架构设计及规范_nxp s32k144 bootloader 基于uds-CSDN博客&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/isAndyWu/p/9524089.html&#34;&gt;Bootloader升级方式一————擦、写flash在RAM中运行 - isAndyWu - 博客园 (cnblogs.com)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;基础介绍&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%9f%ba%e7%a1%80%e4%bb%8b%e7%bb%8d&#34;&gt;&lt;/a&gt;&#xA;基础介绍&#xA;&lt;/h1&gt;&lt;h2 id=&#34;bootloader的作用&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#bootloader%e7%9a%84%e4%bd%9c%e7%94%a8&#34;&gt;&lt;/a&gt;&#xA;BootLoader的作用&#xA;&lt;/h2&gt;&lt;p&gt;Boot Loader又称为引导加载程序，引导加载程序是系统上电后运行的第一段软件代码，常被用来加载系统或者更新系统等。因此，大部分的Boot Loader存在两种不同的操作模式：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;==启动模式==：启动加载（BootLoading）模式也称为自主模（Autonmous）式，即BootLoader从目标机上某个固态存储设备上将操作系统加载至RAM中运行，整个过程中并没有用户的介入。&lt;/li&gt;&#xA;&lt;li&gt;==下载模式==：在下载（DownLoading）模式下，目标机上的Boot Loader将通过串口连接或者网络连接等通信手段下载文件，如下载内核映像和根文件系统映像等。通常文件会保存在RAM中，然后将其写入目标地址完后系统的更新等。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;==Bootloader=Boot + loader==&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Boot的目的：&#xA;最终目的：跳到C语言中；为了C语言运行程序会进行一系列的初始化，系统一上电后如何通过一系列的设置让软件程序员进入C语言/更高级语言环境的开发，这个过程就是boot的主要目的。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Loader的目的：&#xA;主要目的是开始执行应用逻辑，比如点灯：需要灯的接口开发；串口输入输出：需要串口编程；加载linux的内核：flash的编程、网卡的编程、内核启动前的初始化部分。根据不同的应用会有不同的变化。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;==一个开发板要想执行loader，要先看boot做了什么事。==&lt;/p&gt;&#xA;&lt;h2 id=&#34;bootloader的基本需求&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#bootloader%e7%9a%84%e5%9f%ba%e6%9c%ac%e9%9c%80%e6%b1%82&#34;&gt;&lt;/a&gt;&#xA;BootLoader的基本需求&#xA;&lt;/h2&gt;&lt;p&gt;两个SWC（Software Component）：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;启动管理——控制器的启动管理等&lt;/li&gt;&#xA;&lt;li&gt;应用程序——ECU软件下载升级及标定数据再编程等&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;四个服务模块：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;内存管理——软件更新主要是将Flash中的Application及标定数据重编程，内存擦除与重写驱动必不可少的模块；&lt;/li&gt;&#xA;&lt;li&gt;CAN协议栈——软件更新媒介&lt;/li&gt;&#xA;&lt;li&gt;看门狗模块——软件运行保护&lt;/li&gt;&#xA;&lt;li&gt;安全模块——软件数据保护，下载数据校验等&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/10/11_8_56_5_202410110856024.png&#34; alt=&#34;基本需求&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;boot设计流程&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#boot%e8%ae%be%e8%ae%a1%e6%b5%81%e7%a8%8b&#34;&gt;&lt;/a&gt;&#xA;BOOT设计流程&#xA;&lt;/h2&gt;&lt;p&gt;流程：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;关闭看门狗、中断、MMU、CACHE，通过汇编语言对相应的寄存器进行置位即可实现。&lt;/li&gt;&#xA;&lt;li&gt;配置系统工作时钟，通过代码对相应寄存器进行相关配置即可实现。&lt;/li&gt;&#xA;&lt;li&gt;配置SDRAM的控制器。首选空间为SDRAM，SDRAM不是系统一上电就好，所以在做（1）、（2）之前要配置SDRAM的控制器，使SDRAM可以正常工作。&lt;/li&gt;&#xA;&lt;li&gt;让SP指向可读可写的设备空间中（SP为指令指针）&lt;/li&gt;&#xA;&lt;li&gt;满足递减栈的规则—SP想办法放在内存的高段地址&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;对流程1的说明&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%af%b9%e6%b5%81%e7%a8%8b1%e7%9a%84%e8%af%b4%e6%98%8e&#34;&gt;&lt;/a&gt;&#xA;对流程1的说明&#xA;&lt;/h3&gt;&lt;p&gt;配置系统时钟之前还有一个问题，不是配了就马上工作正常，还要经过一段时间，在这期间还要引入看门狗。看门狗就是一个定时器，在一段时间之内，如果不对定时器进行重新的喂狗，一旦减到0就会触发一个中断/复位，CPU就相当于重启了。所以要保证有足够的长的时间来执行前提条件（1）、（2）、（3）、（4），所以在配置时钟之前为了安全起见还要把看门狗给关了。同时中断也要关了，因为我们还没进入到C或者说还没进到系统处理，即使中断来了，我们还不知道该怎么处理，因为我们的函数还没注册进去，这时最好把中断也关了，在调用main函数时再将中断打开。除此之外还可以关闭MMU、CACHE，MMU一般指的是有操作系统情况下才用，裸机程序上一般情况下为了简单一点可以不要管它，对于CACHE，指令CACHE无所谓可开可关，但是数据CACHE一般情况下在这时最好关了，虽然说速度可以提高，但是由于涉及到数据完整性的问题，有可能CACHE打开后数据的完整性就会有影响，这样给后期的调试带来很大麻烦，所以先关了它。&lt;/p&gt;&#xA;&lt;p&gt;BOOT阶段总结&lt;/p&gt;&#xA;&lt;p&gt;==Boot最终目的是跳到C语言==&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在跳到C语言之前要考虑栈指针的初始化，因为C语言编译器要自动的利用SP指针来作为我们的栈空间，这样我们就必须要把SP指向一个可读可写的设备，具体赋什么值要根据规则来决定&lt;/li&gt;&#xA;&lt;li&gt;然后再放到SDRAM上，紧接着SDRAM要想工作，在擦之前还要配置SDRAM，这个工作量比较大，包括：行地址数、列地址数、多少块、周期性充电问题&lt;/li&gt;&#xA;&lt;li&gt;在配置SDRAM之前还要计算多久充一次电，所以还要配置系统时钟&lt;/li&gt;&#xA;&lt;li&gt;而系统时钟工作还要一些前导，即关闭看门狗、中断、MMU、CACHE。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;所以具体的来说，不管什么系统，要想设计一款Bootloader中的Boot阶段基本是要完成上述前提工作。最后根据每个系统的条件不同，还涉及到一个概念就是代码搬移。&lt;/p&gt;&#xA;&lt;p&gt;为什么要==代码搬移==？一个芯片，系统启动时它会规定只能处理多少量的代码，如果代码量超过了规定的可处理的量，多余的代码就处理不了了，这时就要程序员自己把代码搬到一个更大的空间上去运行，要程序员自己对控制器进行控制，所以在main函数执行前也还要对相应存储器的控制器进行初始化，在代码搬移前还要初始化对应控制器，这样做软件工程师的工作量大一些，因为首先要看硬件公司用哪一个存储器启动，比如SD卡就要写SD卡的驱动，如果是NAND启动，就要写NAND的驱动，然后考虑怎么把代码快读搬到内存上，跳到内存上执行，一般来说代码搬移到RAM上，所以都要在SDRAM工作正常的基础上。其次是执行速度问题，如果代码本身之前工作在flash上，flash的执行速度比RAM慢得多，所以要把程序从存储器（nor-flash）搬移到快速的内存上运行。这就是我们说的代码搬移。&lt;/p&gt;&#xA;&lt;p&gt;以上就是完成Bootloader中的Boot工作所要进行的一些事。&lt;/p&gt;&#xA;&lt;h3 id=&#34;对流程2的说明&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%af%b9%e6%b5%81%e7%a8%8b2%e7%9a%84%e8%af%b4%e6%98%8e&#34;&gt;&lt;/a&gt;&#xA;对流程2的说明&#xA;&lt;/h3&gt;&lt;p&gt;在嵌入式开发过程中这一步是最耗时的，因为后期Linux内核最终还是运行在RAM，包括很多程序都是在RAM上运行，而RAM中，如果我们给它的频率不符合这款芯片本身的物理特性，那么很容易出现程序跑飞，在PC中就可能出现程序在运行时突然蓝屏，蓝屏的原因有很多，但是大部分都是由于内存的问题，有些时候买的内存的芯片的物理结构/质量不好，响应时间会很慢。&lt;/p&gt;&#xA;&lt;p&gt;举例：现在CPU要发出序列1101，现在芯片要想办法以一定的速度将这4bit发到数据总线上，或者说给到这片SDRAM上，假设CPU工作在1GHZ（这频率很快了），基本上1GHZ分之一再乘以4，这个时间就可以把4个比特发完了。SDRAM价格便宜，根本就不能同步响应1GHZ的CPU给的信息，那么内存工作就有问题，出现蓝屏。&lt;/p&gt;&#xA;&lt;h3 id=&#34;对流程3的说明&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%af%b9%e6%b5%81%e7%a8%8b3%e7%9a%84%e8%af%b4%e6%98%8e&#34;&gt;&lt;/a&gt;&#xA;对流程3的说明&#xA;&lt;/h3&gt;&lt;p&gt;​       &lt;img src=&#34;https://i-blog.csdnimg.cn/blog_migrate/5e5666aa1b3917ef8211fc16137c277d.png&#34; alt=&#34;在这里插入图片描述&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;CPU直接发出地址后现在要访问SDRAM，让CPU把想做的事情告诉给控制器，控制器根据我的配置（行地址数、列地址数、多少块、周期性充电问题、计算多久让它充一次电）&lt;/p&gt;</description>
    </item>
    <item>
      <title>C</title>
      <link>http://localhost:1313/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/c/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/c/</guid>
      <description>&lt;h1 id=&#34;宏&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%ae%8f&#34;&gt;&lt;/a&gt;&#xA;宏&#xA;&lt;/h1&gt;&lt;h2 id=&#34;宏-1&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%ae%8f-1&#34;&gt;&lt;/a&gt;&#xA;宏&#xA;&lt;/h2&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;[!important]&lt;/p&gt;&#xA;&lt;p&gt;宏是一个纯粹的文本替换&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#define 宏名 宏体&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当宏体包含运算符时，需要增加括号来==限制==宏体和外部的计算优先级&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#define 宏名 (带有运算的的宏体)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;条件编译&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%9d%a1%e4%bb%b6%e7%bc%96%e8%af%91&#34;&gt;&lt;/a&gt;&#xA;条件编译&#xA;&lt;/h2&gt;&lt;p&gt;条件编译语句：编译中的分支语句&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#ifdef your_macro&#x9;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//条件编译语句&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#else&#x9;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//条件编译语句&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#endif&#x9;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//条件编译语句&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#if your_macro == constant&#x9;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//条件编译语句 &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#endif&#x9;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//条件编译语句&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;提示编译语句&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#ifdef your_macro&#x9;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#else&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#error &amp;#34;error information durnning in the compile&amp;#34;&#x9;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//在编译过程中会显示的错误信息&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#warning &amp;#34;warning information durnning in the compile&amp;#34;&#x9;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//在编译过程中会显示的警告信息&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#endif&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;宏函数&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%ae%8f%e5%87%bd%e6%95%b0&#34;&gt;&lt;/a&gt;&#xA;宏函数&#xA;&lt;/h2&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;[!important]&lt;/p&gt;&#xA;&lt;p&gt;宏函数可以减少内存开销&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;简单使用&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#define FUNC(a,b) a*b&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//上面说了，带有运算的宏体需要添加括号，所以想要实现功能需要修改为如下代码&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define FUNC(a,b) ((a)*(b))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用&lt;code&gt;\&lt;/code&gt;可以实现宏函数的多行显示&lt;/p&gt;</description>
    </item>
    <item>
      <title>C&#43;&#43;</title>
      <link>http://localhost:1313/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/c&#43;&#43;/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/c&#43;&#43;/</guid>
      <description>&lt;h1 id=&#34;数据类型&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%95%b0%e6%8d%ae%e7%b1%bb%e5%9e%8b&#34;&gt;&lt;/a&gt;&#xA;数据类型&#xA;&lt;/h1&gt;&lt;h2 id=&#34;vector&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#vector&#34;&gt;&lt;/a&gt;&#xA;vector&#xA;&lt;/h2&gt;&lt;h3 id=&#34;增加数据&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%a2%9e%e5%8a%a0%e6%95%b0%e6%8d%ae&#34;&gt;&lt;/a&gt;&#xA;增加数据&#xA;&lt;/h3&gt;&lt;p&gt;在C++中，可以使用&lt;code&gt;std::vector&lt;/code&gt;来动态管理数据。要向&lt;code&gt;std::vector&lt;/code&gt;中增加数据，有几种常用的方法：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;使用&lt;code&gt;push_back&lt;/code&gt;方法&lt;/strong&gt;：向&lt;code&gt;vector&lt;/code&gt;的末尾添加一个元素。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;myVector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push_back&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;使用&lt;code&gt;emplace_back&lt;/code&gt;方法&lt;/strong&gt;：在&lt;code&gt;vector&lt;/code&gt;的末尾原地构造一个元素。这通常比&lt;code&gt;push_back&lt;/code&gt;更高效，尤其是在处理复杂对象时。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;myVector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;emplace_back&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;使用&lt;code&gt;insert&lt;/code&gt;方法&lt;/strong&gt;：在&lt;code&gt;vector&lt;/code&gt;的指定位置插入一个或多个元素。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;myVector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;insert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;myVector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;使用&lt;code&gt;resize&lt;/code&gt;方法&lt;/strong&gt;：调整&lt;code&gt;vector&lt;/code&gt;的大小，并对新增加的元素进行初始化。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;c1&#34;&gt;// 将vector大小调整为5，并用0初始化新增的元素&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;myVector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;resize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;使用&lt;code&gt;assign&lt;/code&gt;方法&lt;/strong&gt;：给&lt;code&gt;vector&lt;/code&gt;分配新的内容，替换其当前内容。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;myVector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;assign&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;hash-map&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#hash-map&#34;&gt;&lt;/a&gt;&#xA;hash map&#xA;&lt;/h2&gt;&lt;h3 id=&#34;引入头文件&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%bc%95%e5%85%a5%e5%a4%b4%e6%96%87%e4%bb%b6&#34;&gt;&lt;/a&gt;&#xA;引入头文件&#xA;&lt;/h3&gt;&lt;p&gt;首先需要包含 &lt;code&gt;unordered_map&lt;/code&gt; 头文件：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;unordered_map&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;基本用法&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%9f%ba%e6%9c%ac%e7%94%a8%e6%b3%95&#34;&gt;&lt;/a&gt;&#xA;基本用法&#xA;&lt;/h3&gt;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;定义一个 &lt;code&gt;unordered_map&lt;/code&gt;：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unordered_map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;myMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里定义了一个 &lt;code&gt;unordered_map&lt;/code&gt;，键是 &lt;code&gt;int&lt;/code&gt; 类型，值是 &lt;code&gt;std::string&lt;/code&gt; 类型。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;插入元素：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;可以通过 &lt;code&gt;[]&lt;/code&gt; 运算符或 &lt;code&gt;insert&lt;/code&gt; 函数来插入元素。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;myMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Hello&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;myMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;World&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 使用 insert 函数&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;myMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;insert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;C++&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;访问元素：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;可以使用键访问元素，如果键不存在则会插入一个默认值。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;myMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// &amp;#34;Hello&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果不确定键是否存在，可以使用 &lt;code&gt;at&lt;/code&gt; 方法，这样在键不存在时会抛出 &lt;code&gt;std::out_of_range&lt;/code&gt; 异常。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;myMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;at&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 会抛出异常&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;out_of_range&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Key not found&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;查找元素：&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>CAN</title>
      <link>http://localhost:1313/post/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/can/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/can/</guid>
      <description>&lt;h1 id=&#34;can简介&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#can%e7%ae%80%e4%bb%8b&#34;&gt;&lt;/a&gt;&#xA;CAN简介&#xA;&lt;/h1&gt;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;CAN总线（Controller Area Network Bus）控制器局域网总线&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;CAN总线是由BOSCH公司开发的一种简洁易用、传输速度快、易扩展、可靠性高的串行通信总线，广泛应用于汽车、嵌入式、工业控制等领域&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;CAN总线特征：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;两根通信线（CAN_H、CAN_L），线路少，无需共地&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;差分信号通信，抗干扰能力强&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;高速CAN（ISO11898）：125k~1Mbps, &amp;lt;40m&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;低速CAN（ISO11519）：10k~125kbps, &amp;lt;1km&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;异步，无需时钟线，通信速率由设备各自约定&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;半双工，可挂载多设备，多设备同时发送数据时通过仲裁判断先后顺序&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;11位/29位报文ID，用于区分消息功能，同时决定优先级&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;可配置1~8字节的有效载荷&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;可实现广播式和请求式两种传输方式&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;应答、CRC校验、位填充、位同步、错误处理等特性&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h1 id=&#34;主流通信协议对比&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e4%b8%bb%e6%b5%81%e9%80%9a%e4%bf%a1%e5%8d%8f%e8%ae%ae%e5%af%b9%e6%af%94&#34;&gt;&lt;/a&gt;&#xA;主流通信协议对比&#xA;&lt;/h1&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;strong&gt;名称&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;引脚&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;双工&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;时钟&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;电平&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;设备&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;应用场景&lt;/strong&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;UART&lt;/td&gt;&#xA;          &lt;td&gt;TX、RX&lt;/td&gt;&#xA;          &lt;td&gt;全双工&lt;/td&gt;&#xA;          &lt;td&gt;异步&lt;/td&gt;&#xA;          &lt;td&gt;单端&lt;/td&gt;&#xA;          &lt;td&gt;点对点&lt;/td&gt;&#xA;          &lt;td&gt;两个设备互相通信&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;I2C&lt;/td&gt;&#xA;          &lt;td&gt;SCL、SDA&lt;/td&gt;&#xA;          &lt;td&gt;半双工&lt;/td&gt;&#xA;          &lt;td&gt;同步&lt;/td&gt;&#xA;          &lt;td&gt;单端&lt;/td&gt;&#xA;          &lt;td&gt;多设备&lt;/td&gt;&#xA;          &lt;td&gt;一个主控外挂多个模块&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;SPI&lt;/td&gt;&#xA;          &lt;td&gt;SCK、MOSI、MISO、SS&lt;/td&gt;&#xA;          &lt;td&gt;全双工&lt;/td&gt;&#xA;          &lt;td&gt;同步&lt;/td&gt;&#xA;          &lt;td&gt;单端&lt;/td&gt;&#xA;          &lt;td&gt;多设备&lt;/td&gt;&#xA;          &lt;td&gt;一个主控外挂多个模块（高速）&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;CAN&lt;/td&gt;&#xA;          &lt;td&gt;CAN_H、CAN_L&lt;/td&gt;&#xA;          &lt;td&gt;半双工&lt;/td&gt;&#xA;          &lt;td&gt;异步&lt;/td&gt;&#xA;          &lt;td&gt;差分&lt;/td&gt;&#xA;          &lt;td&gt;多设备&lt;/td&gt;&#xA;          &lt;td&gt;多个主控互相通信&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2025/01/15_9_50_55_202501150950487.png&#34; alt=&#34;不同协议的对比&#34;&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;can硬件电路&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#can%e7%a1%ac%e4%bb%b6%e7%94%b5%e8%b7%af&#34;&gt;&lt;/a&gt;&#xA;CAN硬件电路&#xA;&lt;/h1&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;每个设备通过CAN收发器挂载在CAN总线网络上&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;CAN控制器引出的TX和RX与CAN收发器相连，CAN收发器引出的CAN_H和CAN_L分别与总线的CAN_H和CAN_L相连&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;高速CAN使用闭环网络，CAN_H和CAN_L两端添加120Ω的终端电阻，增加电阻的作用有两个，一是防止回波反射，二是在没有设备进行操作的时候，将两根差分线的电压收紧，使其电压一致&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;低速CAN使用开环网络，CAN_H和CAN_L其中一端添加2.2kΩ的终端电阻&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2025/01/15_9_52_5_202501150952445.png&#34; alt=&#34;CAN硬件电路&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;can的电平标准&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#can%e7%9a%84%e7%94%b5%e5%b9%b3%e6%a0%87%e5%87%86&#34;&gt;&lt;/a&gt;&#xA;CAN的电平标准&#xA;&lt;/h1&gt;&lt;ul&gt;&#xA;&lt;li&gt;CAN总线采用差分信号，即两线电压差（VCAN_H-VCAN_L）传输数据位&lt;/li&gt;&#xA;&lt;li&gt;高速CAN规定：&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;​&#x9;电压差为0V时表示逻辑1（隐性电平，总线收紧状态）&lt;/p&gt;</description>
    </item>
    <item>
      <title>CANoe</title>
      <link>http://localhost:1313/post/%E8%BD%AF%E4%BB%B6%E5%8F%8A%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/canoe/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E8%BD%AF%E4%BB%B6%E5%8F%8A%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/canoe/</guid>
      <description>&lt;h1 id=&#34;软件简介&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e8%bd%af%e4%bb%b6%e7%ae%80%e4%bb%8b&#34;&gt;&lt;/a&gt;&#xA;软件简介&#xA;&lt;/h1&gt;&lt;p&gt;CANoe 是一款由 Vector Informatik 提供的专业软件工具，用于开发、测试和分析基于 CAN（Controller Area Network）总线和其他汽车网络协议（如 LIN、FlexRay、Ethernet、MOST）的嵌入式系统。CANoe 是一款功能强大且广泛应用于汽车电子系统开发和测试的工具。&lt;/p&gt;&#xA;&lt;h2 id=&#34;canoe-的主要功能&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#canoe-%e7%9a%84%e4%b8%bb%e8%a6%81%e5%8a%9f%e8%83%bd&#34;&gt;&lt;/a&gt;&#xA;CANoe 的主要功能&#xA;&lt;/h2&gt;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;总线仿真和分析&lt;/strong&gt;：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;支持 CAN、LIN、FlexRay、MOST、Ethernet 等多种总线协议。&lt;/li&gt;&#xA;&lt;li&gt;提供实时总线仿真和消息分析功能，可以捕获和记录总线数据。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;节点仿真&lt;/strong&gt;：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;可以仿真汽车电子系统中的多个节点，支持仿真真实硬件环境下的行为。&lt;/li&gt;&#xA;&lt;li&gt;支持通过 CAPL（CAN Access Programming Language）脚本编写复杂的仿真逻辑。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;网络管理&lt;/strong&gt;：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;提供网络管理功能，支持 CAN、LIN 和 FlexRay 等网络协议的管理。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;诊断功能&lt;/strong&gt;：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;支持 UDS（Unified Diagnostic Services）等诊断协议，能够执行故障诊断和错误处理。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;集成开发环境&lt;/strong&gt;：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;提供图形化的用户界面和脚本编写环境，方便用户进行配置和测试。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;使用场景&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e4%bd%bf%e7%94%a8%e5%9c%ba%e6%99%af&#34;&gt;&lt;/a&gt;&#xA;使用场景&#xA;&lt;/h2&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;汽车电子系统开发&lt;/strong&gt;：CANoe 常用于汽车电子控制单元（ECU）的开发和测试，可以仿真和测试不同的汽车总线网络。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;功能验证和测试&lt;/strong&gt;：在汽车开发过程中，用于功能验证、系统集成测试和回归测试。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;故障诊断和分析&lt;/strong&gt;：用于捕获和分析总线数据，帮助工程师进行故障诊断和问题定位。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;主要组件&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e4%b8%bb%e8%a6%81%e7%bb%84%e4%bb%b6&#34;&gt;&lt;/a&gt;&#xA;主要组件&#xA;&lt;/h2&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Measurement Setup&lt;/strong&gt;：配置和管理测试环境，包括总线配置、节点配置和信号监控。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;CAPL Browser&lt;/strong&gt;：用于编写和调试 CAPL 脚本，实现复杂的仿真和测试逻辑。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Trace Window&lt;/strong&gt;：实时显示和记录总线上的消息和事件，方便进行分析和调试。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Panel Designer&lt;/strong&gt;：设计用户界面面板，用于控制和监控仿真环境中的节点和信号。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;canoe在ecu项目开发中的作用&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#canoe%e5%9c%a8ecu%e9%a1%b9%e7%9b%ae%e5%bc%80%e5%8f%91%e4%b8%ad%e7%9a%84%e4%bd%9c%e7%94%a8&#34;&gt;&lt;/a&gt;&#xA;CANoe在ECU项目开发中的作用&#xA;&lt;/h1&gt;&lt;h2 id=&#34;第一阶段全仿真网络系统&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%ac%ac%e4%b8%80%e9%98%b6%e6%ae%b5%e5%85%a8%e4%bb%bf%e7%9c%9f%e7%bd%91%e7%bb%9c%e7%b3%bb%e7%bb%9f&#34;&gt;&lt;/a&gt;&#xA;第一阶段：全仿真网络系统&#xA;&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;也就是所有的节点都是虚拟的&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/07/5_11_7_25_202407051107514.png&#34; alt=&#34;image-20240705110725435&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;第二阶段真实节点和部分仿真节点共存&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%ac%ac%e4%ba%8c%e9%98%b6%e6%ae%b5%e7%9c%9f%e5%ae%9e%e8%8a%82%e7%82%b9%e5%92%8c%e9%83%a8%e5%88%86%e4%bb%bf%e7%9c%9f%e8%8a%82%e7%82%b9%e5%85%b1%e5%ad%98&#34;&gt;&lt;/a&gt;&#xA;第二阶段：真实节点和部分仿真节点共存&#xA;&lt;/h2&gt;&lt;p&gt;可以使用部分真实的ECU代替虚拟节点，形成半虚拟半真实的网络&lt;/p&gt;</description>
    </item>
    <item>
      <title>CAPL</title>
      <link>http://localhost:1313/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/capl/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/capl/</guid>
      <description>&lt;h1 id=&#34;1-概述&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#1-%e6%a6%82%e8%bf%b0&#34;&gt;&lt;/a&gt;&#xA;1 概述&#xA;&lt;/h1&gt;&lt;p&gt;CAPL全称为Communication Access Programming Language，即通信访问编程语言。它是Vector公司专门为CANoe开发环境设计的编程语言，在语法和概念上与C语言类似。借助CAPL，用户可以编写程序并应用到网络的各个节点上，也可以利用CAPL编程加强测量分析功能，以及搭建高效的自动化测试模块。&lt;/p&gt;&#xA;&lt;h1 id=&#34;2-capl开发环境&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#2-capl%e5%bc%80%e5%8f%91%e7%8e%af%e5%a2%83&#34;&gt;&lt;/a&gt;&#xA;2 CAPL开发环境&#xA;&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/07/8_15_35_34_202407081535638.png&#34; alt=&#34;image-20240708153534486&#34;&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;3-数据类型&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#3-%e6%95%b0%e6%8d%ae%e7%b1%bb%e5%9e%8b&#34;&gt;&lt;/a&gt;&#xA;3 数据类型&#xA;&lt;/h1&gt;&lt;h2 id=&#34;31-全局变量和局部变量&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#31-%e5%85%a8%e5%b1%80%e5%8f%98%e9%87%8f%e5%92%8c%e5%b1%80%e9%83%a8%e5%8f%98%e9%87%8f&#34;&gt;&lt;/a&gt;&#xA;3.1 全局变量和局部变量&#xA;&lt;/h2&gt;&lt;p&gt;在CAPL中，全局变量需要被声明在variables部分，同时可以使用直接赋值方法进行初始化。如果没有初始化，编译器会执行自动初始化，默认值为0。全局变量的作用域包括整个CAPL文件以及与此文件有链接的其他CAPL文件。&lt;/p&gt;&#xA;&lt;p&gt;与C语言不同，局部变量在CAPL中总是被静态地创建。这意味着初始化只在程序体启动时执行，当再次进入程序时，局部变量被假定是上一次跳出程序时的值。局部变量的作用域，仅限于当前函数体范围内，即该函数的大括号范围内。&lt;/p&gt;&#xA;&lt;h2 id=&#34;32-简单变量&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#32-%e7%ae%80%e5%8d%95%e5%8f%98%e9%87%8f&#34;&gt;&lt;/a&gt;&#xA;3.2 简单变量&#xA;&lt;/h2&gt;&lt;h3 id=&#34;321-整型&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#321-%e6%95%b4%e5%9e%8b&#34;&gt;&lt;/a&gt;&#xA;3.2.1 整型&#xA;&lt;/h3&gt;&lt;p&gt;整数就是没有小数部分的数字，如3、201、-3412和0。根据数值的大小不同，CAPL提供了以下几种整型。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/07/8_15_47_6_202407081547911.png&#34; alt=&#34;image-20240708154706863&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;322-字符&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#322-%e5%ad%97%e7%ac%a6&#34;&gt;&lt;/a&gt;&#xA;3.2.2 字符&#xA;&lt;/h3&gt;&lt;p&gt;区别于C语言，CAPL未将char类型（长度1B）归类至整型中，这是因为在CANoe中提供了byte类型。如果数据是具体数值则应使用byte，而对于字符，则应用char（字符串使用char数组）。char类型和byte类型之间可以直接转换。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;byte&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ch1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;d&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ch1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x62&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;data1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;s&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;323-浮点型&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#323-%e6%b5%ae%e7%82%b9%e5%9e%8b&#34;&gt;&lt;/a&gt;&#xA;3.2.3 浮点型&#xA;&lt;/h3&gt;&lt;p&gt;CAPL提供两种浮点型变量：float和double。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/07/8_15_50_19_202407081550984.png&#34; alt=&#34;image-20240708155019947&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;33-复合类型&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#33-%e5%a4%8d%e5%90%88%e7%b1%bb%e5%9e%8b&#34;&gt;&lt;/a&gt;&#xA;3.3 复合类型&#xA;&lt;/h2&gt;&lt;h3 id=&#34;331-结构体&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#331-%e7%bb%93%e6%9e%84%e4%bd%93&#34;&gt;&lt;/a&gt;&#xA;3.3.1 结构体&#xA;&lt;/h3&gt;&lt;p&gt;CAPL中可以简单地按照C语言的方法来声明结构（struct），但结构名在程序中必须是唯一的。简单类型、枚举类型或者其他的结构都可以作为结构的成员。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;enum&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;clolrs&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;结构b中包含：一个结构成员a，变量名为a1；一个枚举成员colors，变量名为c1；一个整型变量p；最后还有一个长整型变量l。&#xA;用户可以在类型定义时直接声明结构类型的变量，在这种情况下，类型的名称可以省略，也可以直接使用结构的名字来引用类型。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cost&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mycost&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;chinese&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;english&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scores&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;关于结构初始化，可以在变量声明期间直接初始化结构成员，不需要单独命名单个成员，编译器将按照结构定义的顺序默认初始化它们。例如：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Scores&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;myScores&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;Chinese&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;79&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;Math&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;99&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;English&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;88&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Scores&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;myScores&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;79&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;99&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;88&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使 用 “.” 操 作 符 可 以 访 问 结 构 中 的 成 员 ， 例 如 ， myScores.Chinese ＝ 100。另外，结构体可以作为参数传给函数，但不能作为函数的返回值。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Configuration Wizard</title>
      <link>http://localhost:1313/post/%E8%BD%AF%E4%BB%B6%E5%8F%8A%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/configuration-wizard/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E8%BD%AF%E4%BB%B6%E5%8F%8A%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/configuration-wizard/</guid>
      <description>&lt;h1 id=&#34;参考链接&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%8f%82%e8%80%83%e9%93%be%e6%8e%a5&#34;&gt;&lt;/a&gt;&#xA;参考链接&#xA;&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/u010632165/article/details/124162184&#34;&gt;可视化的Keil工程配置模板，一招提高单片机开发效率-CSDN博客&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/zxy18791750520/article/details/140120610&#34;&gt;Keil5 Configuration Wizard配置向导的使用方法_keil configuration wizard-CSDN博客&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;实现&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%ae%9e%e7%8e%b0&#34;&gt;&lt;/a&gt;&#xA;实现&#xA;&lt;/h1&gt;&lt;p&gt;Configuration Wizard可以实现可视化配置宏定义文件。&lt;/p&gt;&#xA;&lt;p&gt;首先在官方文档（&lt;a href=&#34;https://www.keil.com/support/man/&#34;&gt;Keil Product Manuals&lt;/a&gt;）中搜索Configuration Wizard（&lt;a href=&#34;https://developer.arm.com/documentation/101407/0541/Utilities/Configuration-Wizard?lang=en&#34;&gt;µVision User&amp;rsquo;s Guide (arm.com)&lt;/a&gt;）&lt;/p&gt;&#xA;&lt;p&gt;网页中的文档描述得非常详细，也提供了一个配置模板，我们只需要照着文档描述写好相应的格式即可生成一个图形化的配置界面。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!note]&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;注意：Keil并没有那么智能，写完这个模板它并不能立马自动匹配到，需要重新关掉Keil工程再开才能加载成图形配置模板，然后才能够实现即时修改即时响应！！！&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;将h文件或者c文件转换为可视化界面是很简单的，只需要在文件的开头和结尾加上以下的标识符即可：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// &amp;lt;&amp;lt;&amp;lt; Use Configuration Wizard in Context Menu &amp;gt;&amp;gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// &amp;lt;&amp;lt;&amp;lt; end of configuration section &amp;gt;&amp;gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后关掉工程再重新打开，就可以实现可视化界面了&lt;/p&gt;&#xA;&lt;h1 id=&#34;语法&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e8%af%ad%e6%b3%95&#34;&gt;&lt;/a&gt;&#xA;语法&#xA;&lt;/h1&gt;&lt;h2 id=&#34;注释&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%b3%a8%e9%87%8a&#34;&gt;&lt;/a&gt;&#xA;注释&#xA;&lt;/h2&gt;&lt;p&gt;使用标签&lt;code&gt;i&lt;/code&gt;来进行注释&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// &amp;lt;i&amp;gt;这里加上注释&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;组&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%bb%84&#34;&gt;&lt;/a&gt;&#xA;组&#xA;&lt;/h2&gt;&lt;p&gt;使用标签&lt;code&gt;h&lt;/code&gt;来控制组&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// &amp;lt;h&amp;gt; 组名&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// &amp;lt;/h&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;复选框&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%a4%8d%e9%80%89%e6%a1%86&#34;&gt;&lt;/a&gt;&#xA;复选框&#xA;&lt;/h2&gt;&lt;h3 id=&#34;复选框组&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%a4%8d%e9%80%89%e6%a1%86%e7%bb%84&#34;&gt;&lt;/a&gt;&#xA;复选框组&#xA;&lt;/h3&gt;&lt;p&gt;使用标签&lt;code&gt;e&lt;/code&gt;来控制复选框组&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// &amp;lt;e&amp;gt;系统信息&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// &amp;lt;q&amp;gt; 负载锁定&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define _EPCM_LOAD_LOCK      1      &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//BIT15;     0：不使能负载锁定;    1：使能负载锁定&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// &amp;lt;/e&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;复选框-1&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%a4%8d%e9%80%89%e6%a1%86-1&#34;&gt;&lt;/a&gt;&#xA;复选框&#xA;&lt;/h3&gt;&lt;p&gt;复选框&lt;code&gt;(&amp;lt;c&amp;gt; &amp;lt;/c&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;!c&amp;gt; &amp;lt;/c&amp;gt;&lt;/code&gt;：创建一个复选框来取消注释或注释代码。&lt;/p&gt;</description>
    </item>
    <item>
      <title>DAC</title>
      <link>http://localhost:1313/post/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E5%A4%96%E8%AE%BE%E7%BB%84%E4%BB%B6/dac/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E5%A4%96%E8%AE%BE%E7%BB%84%E4%BB%B6/dac/</guid>
      <description>&lt;h1 id=&#34;参考链接&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%8f%82%e8%80%83%e9%93%be%e6%8e%a5&#34;&gt;&lt;/a&gt;&#xA;参考链接&#xA;&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/dengjin20104042056/article/details/108604920&#34;&gt;【STM32】DAC详解_dac12bit-CSDN博客&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;简述&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%ae%80%e8%bf%b0&#34;&gt;&lt;/a&gt;&#xA;简述&#xA;&lt;/h1&gt;&lt;p&gt;DAC,全称：Digital-to-Analog Converter,指数字/模拟转换器&lt;/p&gt;&#xA;&lt;p&gt;DAC 模块是 12 位电压输出数模转换器。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;DAC 可以按 8 位或 12 位模式进行配置，并且可与DMA 控制器配合使用。&lt;/li&gt;&#xA;&lt;li&gt;在 12 位模式下，数据可以采用左对齐或右对齐。&lt;/li&gt;&#xA;&lt;li&gt;DAC 有两个输出通道，每个通道各有一个转换器。在 DAC 双通道模式下，每个通道可以单独进行转换；当两个通道组合在一起同步执行更新操作时，也可以同时进行转换。可通过一个输入参考电压引脚 V REF+ （与 ADC 共享）来提高分辨率。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/09/10_16_12_2_202409101612493.png&#34; alt=&#34;ADC和DAC过程&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!IMPORTANT]&lt;/p&gt;&#xA;&lt;p&gt;ADC和DAC是模拟电路和数字电路之间的桥梁&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;特性参数&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%89%b9%e6%80%a7%e5%8f%82%e6%95%b0&#34;&gt;&lt;/a&gt;&#xA;特性参数&#xA;&lt;/h2&gt;&lt;ol&gt;&#xA;&lt;li&gt;分辨率：表示模拟电压的最小增量，常用二进制位数表示，比如：8、12位等&lt;/li&gt;&#xA;&lt;li&gt;建立时间：表示将一个数字量转换为稳定模拟信号所需的时间&lt;/li&gt;&#xA;&lt;li&gt;精度：转换器实际特性曲线与理想特性曲线之间的最大偏差&#xA;&lt;ol&gt;&#xA;&lt;li&gt;误差源：比例系统误差、失调误差、非线性误差&lt;/li&gt;&#xA;&lt;li&gt;原因：元件参数误差、基准电压不稳定、运算放大器零漂等&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;主要特性&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e4%b8%bb%e8%a6%81%e7%89%b9%e6%80%a7&#34;&gt;&lt;/a&gt;&#xA;主要特性&#xA;&lt;/h2&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;主要特性&lt;/th&gt;&#xA;          &lt;th&gt;F1&lt;/th&gt;&#xA;          &lt;th&gt;F4&lt;/th&gt;&#xA;          &lt;th&gt;F7&lt;/th&gt;&#xA;          &lt;th&gt;H7&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;DAC输出类型&lt;/td&gt;&#xA;          &lt;td&gt;电压输出型&lt;/td&gt;&#xA;          &lt;td&gt;==&lt;/td&gt;&#xA;          &lt;td&gt;==&lt;/td&gt;&#xA;          &lt;td&gt;==&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;分辨率&lt;/td&gt;&#xA;          &lt;td&gt;8/12位&lt;/td&gt;&#xA;          &lt;td&gt;==&lt;/td&gt;&#xA;          &lt;td&gt;==&lt;/td&gt;&#xA;          &lt;td&gt;==&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;DAC时钟频率&lt;/td&gt;&#xA;          &lt;td&gt;36MHz(APB1)&lt;/td&gt;&#xA;          &lt;td&gt;42MHz(APB1) 45MHz(APB1)&lt;/td&gt;&#xA;          &lt;td&gt;54MHz(APB1)&lt;/td&gt;&#xA;          &lt;td&gt;120MHz(APB1)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;建立时间&lt;/td&gt;&#xA;          &lt;td&gt;3us&lt;/td&gt;&#xA;          &lt;td&gt;==&lt;/td&gt;&#xA;          &lt;td&gt;==&lt;/td&gt;&#xA;          &lt;td&gt;1.7us&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;供电电压&lt;/td&gt;&#xA;          &lt;td&gt;Vssa : 0V, VpDa : 2.4V~3.6V&lt;/td&gt;&#xA;          &lt;td&gt;==&lt;/td&gt;&#xA;          &lt;td&gt;==&lt;/td&gt;&#xA;          &lt;td&gt;==&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;参考电压&lt;/td&gt;&#xA;          &lt;td&gt;VReF- : OV, VREE+ 般为3.3V&lt;/td&gt;&#xA;          &lt;td&gt;==&lt;/td&gt;&#xA;          &lt;td&gt;==&lt;/td&gt;&#xA;          &lt;td&gt;==&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;输出通道&lt;/td&gt;&#xA;          &lt;td&gt;DAC_OUT1(PA4）、DAC_OUT2(PA5) 为了避免寄生电流消耗，PA4和PA5配置为模拟功能 每个通道都有单独的转换器，可同时或单独转换，每个通道都有DMA功能&lt;/td&gt;&#xA;          &lt;td&gt;==&lt;/td&gt;&#xA;          &lt;td&gt;==&lt;/td&gt;&#xA;          &lt;td&gt;==&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;两个 DAC 转换器：各对应一个输出通道&lt;/li&gt;&#xA;&lt;li&gt;12 位模式下数据采用左对齐或右对齐&lt;/li&gt;&#xA;&lt;li&gt;同步更新功能&lt;/li&gt;&#xA;&lt;li&gt;生成噪声波&lt;/li&gt;&#xA;&lt;li&gt;生成三角波&lt;/li&gt;&#xA;&lt;li&gt;DAC 双通道单独或同时转换&lt;/li&gt;&#xA;&lt;li&gt;每个通道都具有 DMA 功能&lt;/li&gt;&#xA;&lt;li&gt;DMA 下溢错误检测&lt;/li&gt;&#xA;&lt;li&gt;通过外部触发信号进行转换&lt;/li&gt;&#xA;&lt;li&gt;输入参考电压 V REF+&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;工作原理&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%b7%a5%e4%bd%9c%e5%8e%9f%e7%90%86&#34;&gt;&lt;/a&gt;&#xA;工作原理&#xA;&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/09/10_16_49_2_202409101649073.png&#34; alt=&#34;DAC框图&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>DMA</title>
      <link>http://localhost:1313/post/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E5%A4%96%E8%AE%BE%E7%BB%84%E4%BB%B6/dma/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E5%A4%96%E8%AE%BE%E7%BB%84%E4%BB%B6/dma/</guid>
      <description>&lt;h1 id=&#34;参考链接&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%8f%82%e8%80%83%e9%93%be%e6%8e%a5&#34;&gt;&lt;/a&gt;&#xA;参考链接&#xA;&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/as480133937/article/details/104927922?ydreferer=aHR0cHM6Ly9jbi5iaW5nLmNvbS8%3D&#34;&gt;【STM32】 DMA原理，步骤超细详解，一文看懂DMA-CSDN博客&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;概述&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%a6%82%e8%bf%b0&#34;&gt;&lt;/a&gt;&#xA;概述&#xA;&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/09/10_17_20_58_202409101720528.png&#34; alt=&#34;DMA简介&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!IMPORTANT]&lt;/p&gt;&#xA;&lt;p&gt;DMA传输无需CPU直接控制传输，也没有中断处理方式那样保留现场和恢复现过程&lt;/p&gt;&#xA;&lt;p&gt;通过硬件为RAM和IO设备开辟一条直接传输数据的通道，使得CPU的效率大大提高&lt;/p&gt;&#xA;&lt;p&gt;作用：为CPU减负&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;一般而言，DMA控制器将包括一条地址总线、一条数据总线和控制寄存器。高效率的DMA控制器将具有访问其所需要的任意资源的能力，而==无须处理器==本身的介入，它必须能==产生中断==。最后，它必须能在控制器内部计算出地址。&lt;/p&gt;&#xA;&lt;p&gt;一个处理器可以包含多个DMA控制器。每个控制器有多个DMA通道，以及多条直接与存储器站(memory bank)和外设连接的总线。在很多高性能处理器中集成了两种类型的DMA控制器：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;第一类通常称为“系统DMA控制器”，可以实现对任何资源(外设和存储器)的访问，对于这种类型的控制器来说，信号周期数是以系统时钟(SCLK)来计数的，以ADI的Blackfin处理器为例，频率最高可达133MHz。&lt;/li&gt;&#xA;&lt;li&gt;第二类称为内部存储器DMA控制器(IMDMA)，专门用于内部存储器所处位置之间的相互存取操作。因为存取都发生在内部(L1－L1、L1－L2，或者L2－L2)，周期数的计数则以内核时钟(CCLK)为基准来进行，该时钟的速度可以超过600MHz。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre class=&#34;mermaid&#34;&gt;graph LR&#xA;&#x9;subgraph a[处理器]&#xA;&#x9;&#x9;L1存储器 &lt;--DMA内核总线--&gt; DMA控制器&#xA;&#x9;&#x9;L2存储器 &lt;--DMA系统总线--&gt; DMA控制器 &lt;--DMA存取总线--&gt; 外设&#xA;&#x9;end&#xA;&#x9;DMA控制器 &lt;--DMA外部总线--&gt; L3存储器&#xA;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;dma的传输方式&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#dma%e7%9a%84%e4%bc%a0%e8%be%93%e6%96%b9%e5%bc%8f&#34;&gt;&lt;/a&gt;&#xA;DMA的传输方式&#xA;&lt;/h2&gt;&lt;p&gt;DMA的作用就是实现数据的直接传输，而去掉了传统数据传输需要CPU寄存器参与的环节，主要涉及四种情况的数据传输，但本质上是一样的，都是从内存的某一区域传输到内存的另一区域（外设的数据寄存器本质上就是内存的一个存储单元）。四种情况的数据传输如下：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;外设到内存&lt;/li&gt;&#xA;&lt;li&gt;内存到外设&lt;/li&gt;&#xA;&lt;li&gt;内存到内存&lt;/li&gt;&#xA;&lt;li&gt;外设到外设&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;dma传输参数&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#dma%e4%bc%a0%e8%be%93%e5%8f%82%e6%95%b0&#34;&gt;&lt;/a&gt;&#xA;DMA传输参数&#xA;&lt;/h2&gt;&lt;p&gt;数据传输的核心参数：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;数据源地址&lt;/li&gt;&#xA;&lt;li&gt;数据传输位置的目标地址&lt;/li&gt;&#xA;&lt;li&gt;传递护具多少的数据传输量&lt;/li&gt;&#xA;&lt;li&gt;进行多少次传输的传输模式&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;当用户将参数设置好，主要涉及源地址、目标地址、传输数据量这三个，DMA控制器就会启动数据传输，当剩余传输数据量为0时 达到传输终点，结束DMA传输 ，当然，DMA 还有循环传输模式 当到达传输终点时会重新启动DMA传输。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!NOTE]&lt;/p&gt;&#xA;&lt;p&gt;也就是说只要剩余传输数据量不是0，而且DMA是启动状态，那么就会发生数据传输。　&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;dma的主要特征&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#dma%e7%9a%84%e4%b8%bb%e8%a6%81%e7%89%b9%e5%be%81&#34;&gt;&lt;/a&gt;&#xA;DMA的主要特征&#xA;&lt;/h2&gt;&lt;p&gt;每个通道都直接连接专用的硬件DMA请求，每个通道都同样支持软件触发。这些功能通过软件来配置；&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在同一个DMA模块上，多个请求间的优先权可以通过软件编程设置（共有四级：很高、高、中等和低），优先权设置相等时由硬件决定（请求0优先于请求1，依此类推）；&lt;/li&gt;&#xA;&lt;li&gt;独立数据源和目标数据区的传输宽度（字节、半字、全字），模拟打包和拆包的过程。源和目标地址必须按数据传输宽度对齐；&lt;/li&gt;&#xA;&lt;li&gt;支持循环的缓冲器管理；&lt;/li&gt;&#xA;&lt;li&gt;每个通道都有3个事件标志（DMA半传输、DMA传输完成和DMA传输出错），这3个事件标志逻辑或成为一个单独的中断请求；&lt;/li&gt;&#xA;&lt;li&gt;存储器和存储器间的传输、外设和存储器、存储器和外设之间的传输；&lt;/li&gt;&#xA;&lt;li&gt;闪存、SRAM、外设的SRAM、APB1、APB2和AHB外设均可作为访问的源和目标；&lt;/li&gt;&#xA;&lt;li&gt;可编程的数据传输数目：最大为65535。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;存储器映像&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%ad%98%e5%82%a8%e5%99%a8%e6%98%a0%e5%83%8f&#34;&gt;&lt;/a&gt;&#xA;存储器映像&#xA;&lt;/h2&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;起始地址&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;存储器&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;用途&lt;/strong&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ROM&lt;/td&gt;&#xA;          &lt;td&gt;0x0800 0000&lt;/td&gt;&#xA;          &lt;td&gt;程序存储器Flash&lt;/td&gt;&#xA;          &lt;td&gt;存储C语言编译后的程序代码&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;:&lt;/td&gt;&#xA;          &lt;td&gt;0x1FFF F000&lt;/td&gt;&#xA;          &lt;td&gt;系统存储器&lt;/td&gt;&#xA;          &lt;td&gt;存储BootLoader，用于串口下载&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;:&lt;/td&gt;&#xA;          &lt;td&gt;0x1FFF F800&lt;/td&gt;&#xA;          &lt;td&gt;选项字节&lt;/td&gt;&#xA;          &lt;td&gt;存储一些独立于程序代码的配置参数&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;RAM&lt;/td&gt;&#xA;          &lt;td&gt;0x2000 0000&lt;/td&gt;&#xA;          &lt;td&gt;运行内存SRAM&lt;/td&gt;&#xA;          &lt;td&gt;存储运行过程中的临时变量&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;:&lt;/td&gt;&#xA;          &lt;td&gt;0x4000 0000&lt;/td&gt;&#xA;          &lt;td&gt;外设寄存器&lt;/td&gt;&#xA;          &lt;td&gt;存储各个外设的配置参数&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;:&lt;/td&gt;&#xA;          &lt;td&gt;0xE000 0000&lt;/td&gt;&#xA;          &lt;td&gt;内核外设寄存器&lt;/td&gt;&#xA;          &lt;td&gt;存储内核各个外设的配置参数&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;dma&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#dma&#34;&gt;&lt;/a&gt;&#xA;DMA&#xA;&lt;/h1&gt;&lt;h2 id=&#34;系统框图&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%b3%bb%e7%bb%9f%e6%a1%86%e5%9b%be&#34;&gt;&lt;/a&gt;&#xA;系统框图&#xA;&lt;/h2&gt;&lt;p&gt;flash为主闪存，SRAM为运行内存，各个外设可以看作是寄存器，也是一种SRAM存储器，实际上，我们可以将这个框图看作是一个cpu（cortex-M3）和存储器（框图中的所有）&lt;/p&gt;</description>
    </item>
    <item>
      <title>Flash</title>
      <link>http://localhost:1313/post/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E5%A4%96%E8%AE%BE%E7%BB%84%E4%BB%B6/flash/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E5%A4%96%E8%AE%BE%E7%BB%84%E4%BB%B6/flash/</guid>
      <description>&lt;h1 id=&#34;概述&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%a6%82%e8%bf%b0&#34;&gt;&lt;/a&gt;&#xA;概述&#xA;&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/10/15_19_15_51_202410151915559.png&#34; alt=&#34;类比电脑&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;STM32F1系列的FLASH包含程序存储器、系统存储器和选项字节三个部分，通过闪存存储器接口（外设）可以对程序存储器和选项字节进行擦除和编程&lt;/li&gt;&#xA;&lt;li&gt;读写FLASH的用途：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;利用程序存储器的剩余空间来保存掉电不丢失的用户数据&lt;/li&gt;&#xA;&lt;li&gt;通过在程序中编程(IAP),实现程序的自我更新&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;在线编程(ln-Circuit Programming-ICP)用于更新程序存储器的全部内容，它通过JTAG、SWD协议或系统加载程序(Bootloader)下载程序&lt;/li&gt;&#xA;&lt;li&gt;在程序中编程(ln-Application Programming-IAP）可以使用微控制器支持的任一种通信接口下载程序&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/10/15_19_19_13_202410151919603.png&#34; alt=&#34;命名规则&#34;&gt;&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;芯片型号&lt;/th&gt;&#xA;          &lt;th&gt;主频 (MHz)&lt;/th&gt;&#xA;          &lt;th&gt;FLASH容量(B)&lt;/th&gt;&#xA;          &lt;th&gt;SRAM容量（ (B)&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;STM32F103RCT6&lt;/td&gt;&#xA;          &lt;td&gt;72&lt;/td&gt;&#xA;          &lt;td&gt;256K&lt;/td&gt;&#xA;          &lt;td&gt;48K&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;STM32F103ZET6&lt;/td&gt;&#xA;          &lt;td&gt;72&lt;/td&gt;&#xA;          &lt;td&gt;512K&lt;/td&gt;&#xA;          &lt;td&gt;64K&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;STM32F407ZGT6&lt;/td&gt;&#xA;          &lt;td&gt;168&lt;/td&gt;&#xA;          &lt;td&gt;1024K&lt;/td&gt;&#xA;          &lt;td&gt;192K&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;STM32F429IGT6&lt;/td&gt;&#xA;          &lt;td&gt;180&lt;/td&gt;&#xA;          &lt;td&gt;1024K&lt;/td&gt;&#xA;          &lt;td&gt;256K&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;STM32F76IGT6&lt;/td&gt;&#xA;          &lt;td&gt;216&lt;/td&gt;&#xA;          &lt;td&gt;1024K&lt;/td&gt;&#xA;          &lt;td&gt;512K&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;STM32H7431IT6&lt;/td&gt;&#xA;          &lt;td&gt;480&lt;/td&gt;&#xA;          &lt;td&gt;2048K&lt;/td&gt;&#xA;          &lt;td&gt;1060K&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;STM32F750N8H6&lt;/td&gt;&#xA;          &lt;td&gt;216&lt;/td&gt;&#xA;          &lt;td&gt;64K&lt;/td&gt;&#xA;          &lt;td&gt;320K&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;STM32H750XBH6&lt;/td&gt;&#xA;          &lt;td&gt;400&lt;/td&gt;&#xA;          &lt;td&gt;128K&lt;/td&gt;&#xA;          &lt;td&gt;1060K&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;STM32H750VBT6&lt;/td&gt;&#xA;          &lt;td&gt;480&lt;/td&gt;&#xA;          &lt;td&gt;128K&lt;/td&gt;&#xA;          &lt;td&gt;1060K&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;内部构成&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%86%85%e9%83%a8%e6%9e%84%e6%88%90&#34;&gt;&lt;/a&gt;&#xA;内部构成&#xA;&lt;/h1&gt;&lt;p&gt;内部FLASH主要由三部分组成：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;主存储器&lt;/li&gt;&#xA;&lt;li&gt;信息块&lt;/li&gt;&#xA;&lt;li&gt;闪存存储器接口寄存器。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;闪存模块的子部分&lt;/th&gt;&#xA;          &lt;th&gt;作用&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;主存储器&lt;/td&gt;&#xA;          &lt;td&gt;用来存放代码和数据常数 （如const类型到的数据）&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;信息块&lt;/td&gt;&#xA;          &lt;td&gt;分为两个部分：系统存储（启动程序代码）、选项字节（用户选择字节)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;闪存存储器接口寄存器&lt;/td&gt;&#xA;          &lt;td&gt;用于控制闪存读写等，是整个闪存模块的控制结构&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;主存储器：地址范围为0x08000000~0x0807FFFF,分为256页，每页2KB(小/中容量为1K)。当BOOT0接地，系统将从0x08000000地址处开始读取代码（从主存储器启动）。&lt;/p&gt;</description>
    </item>
    <item>
      <title>FlashDB</title>
      <link>http://localhost:1313/post/%E5%B5%8C%E5%85%A5%E5%BC%8F/fs/flashdb/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E5%B5%8C%E5%85%A5%E5%BC%8F/fs/flashdb/</guid>
      <description>&lt;h1 id=&#34;参考链接&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%8f%82%e8%80%83%e9%93%be%e6%8e%a5&#34;&gt;&lt;/a&gt;&#xA;参考链接&#xA;&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/armink/FlashDB/blob/master/README_zh.md&#34;&gt;FlashDB/README_zh.md at master · armink/FlashDB (github.com)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;基本概念&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%9f%ba%e6%9c%ac%e6%a6%82%e5%bf%b5&#34;&gt;&lt;/a&gt;&#xA;基本概念&#xA;&lt;/h1&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;键值数据库（KVDB）&lt;/strong&gt;：是一种非关系数据库，它将数据存储为键值（Key-Value）对集合，其中键作为唯一标识符。KVDB 操作简洁，可扩展性强。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;时序数据（TSDB）&lt;/strong&gt; ：时间序列数据库 （Time Series Database , 简称 TSDB），它将数据按照 &lt;strong&gt;时间顺序存储&lt;/strong&gt; 。TSDB 数据具有时间戳，数据存储量大，插入及查询性能高。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;时序记录（TSL）&lt;/strong&gt; ：TSL (Time series log)，是 TSDB 中每条记录的简称。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Blob&lt;/strong&gt; ：在计算机中，blob 常常是数据库中用来存储二进制文件的字段类型。在 FlashDB 中， KV 和 TSL 都使用 blob 类型来存储，该类型可以兼容任意变量类型。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;迭代器（iterator）&lt;/strong&gt;：它可以让用户透过特定的接口巡访容器中的每一个元素，而不用了解底层的实现。 TSDB 和 KVDB 都支持通过迭代器对数据库进行遍历访问。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/12/25_10_24_50_202412251024824.png&#34; alt=&#34;框架结构&#34;&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;kvdb&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#kvdb&#34;&gt;&lt;/a&gt;&#xA;KVDB&#xA;&lt;/h1&gt;&lt;h2 id=&#34;字符串类型&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%ad%97%e7%ac%a6%e4%b8%b2%e7%b1%bb%e5%9e%8b&#34;&gt;&lt;/a&gt;&#xA;字符串类型&#xA;&lt;/h2&gt;&lt;p&gt;使用一个名为 &lt;code&gt;&amp;quot;temp&amp;quot;&lt;/code&gt; 的 KV 来存储温度值，分别演示了字符串 KV 从 &lt;code&gt;创建-&amp;gt;读取-&amp;gt;修改-&amp;gt;删除&lt;/code&gt; 的全过程。大致内容如下：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;kvdb_type_string_sample&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;fdb_kvdb_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;kvdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;FDB_INFO&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;==================== kvdb_type_string_sample ====================&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;cm&#34;&gt;/* CREATE new Key-Value */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;temp_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;36C&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;cm&#34;&gt;/* It will create new KV node when &amp;#34;temp&amp;#34; KV not in database. */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nf&#34;&gt;fdb_kv_set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kvdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;temp&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;temp_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nf&#34;&gt;FDB_INFO&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;create the &amp;#39;temp&amp;#39; string KV, value is: %s&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;temp_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;cm&#34;&gt;/* GET the KV value */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;return_value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;temp_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;cm&#34;&gt;/* Get the &amp;#34;temp&amp;#34; KV value.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;         * NOTE: The return value saved in fdb_kv_get&amp;#39;s buffer. Please copy away as soon as possible.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;         */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;return_value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;fdb_kv_get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kvdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;temp&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;cm&#34;&gt;/* the return value is NULL when get the value failed */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;return_value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nf&#34;&gt;strncpy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;temp_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;return_value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;temp_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nf&#34;&gt;FDB_INFO&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;get the &amp;#39;temp&amp;#39; value is: %s&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;temp_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;cm&#34;&gt;/* CHANGE the KV value */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;temp_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;38C&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;cm&#34;&gt;/* change the &amp;#34;temp&amp;#34; KV&amp;#39;s value to &amp;#34;38C&amp;#34; */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nf&#34;&gt;fdb_kv_set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kvdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;temp&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;temp_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nf&#34;&gt;FDB_INFO&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;set &amp;#39;temp&amp;#39; value to %s&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;temp_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;cm&#34;&gt;/* DELETE the KV by name */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nf&#34;&gt;fdb_kv_del&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kvdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;temp&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nf&#34;&gt;FDB_INFO&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;delete the &amp;#39;temp&amp;#39; finish&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;FDB_INFO&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;===========================================================&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;首先创建了一个 KV 名为 &lt;code&gt;&amp;quot;temp&amp;quot;&lt;/code&gt; ，并给予初值 36℃&lt;/li&gt;&#xA;&lt;li&gt;读取 &lt;code&gt;&amp;quot;temp&amp;quot;&lt;/code&gt; KV 当前的值，发现与初值相同&lt;/li&gt;&#xA;&lt;li&gt;修改 &lt;code&gt;&amp;quot;temp&amp;quot;&lt;/code&gt; KV 的值为 38℃&lt;/li&gt;&#xA;&lt;li&gt;最后删除 &lt;code&gt;&amp;quot;temp&amp;quot;&lt;/code&gt; KV&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;blob类型&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#blob%e7%b1%bb%e5%9e%8b&#34;&gt;&lt;/a&gt;&#xA;Blob类型&#xA;&lt;/h2&gt;&lt;p&gt;blob KV 是一个比较常用类型，其 value 是一个没有类型限制的二进制类型。在功能上，blob KV 也兼容字符串 KV 。在 API 的使用上， blob KV 拥有一套独立的 API ，可以很快速的实现各种类型 KV 到 KVDB 中的存储，比如：基本类型，数组以及结构体等。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Git</title>
      <link>http://localhost:1313/post/%E8%BD%AF%E4%BB%B6%E5%8F%8A%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/git/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E8%BD%AF%E4%BB%B6%E5%8F%8A%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/git/</guid>
      <description>&lt;h1 id=&#34;git-的基本概念&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#git-%e7%9a%84%e5%9f%ba%e6%9c%ac%e6%a6%82%e5%bf%b5&#34;&gt;&lt;/a&gt;&#xA;Git 的基本概念&#xA;&lt;/h1&gt;&lt;p&gt;Git 是一个分布式版本控制系统，广泛用于软件开发中来跟踪代码变更、协作开发和版本管理。以下是 Git 的基本使用指南，涵盖常见的操作和命令。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Repository（仓库）&lt;/strong&gt;：存储项目及其版本历史的地方。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Commit（提交）&lt;/strong&gt;：对文件或目录的快照。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Branch（分支）&lt;/strong&gt;：代码开发的独立分支。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Merge（合并）&lt;/strong&gt;：将分支的修改合并到主分支中。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Remote（远程）&lt;/strong&gt;：存储在服务器上的仓库。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;git-的基本操作&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#git-%e7%9a%84%e5%9f%ba%e6%9c%ac%e6%93%8d%e4%bd%9c&#34;&gt;&lt;/a&gt;&#xA;Git 的基本操作&#xA;&lt;/h1&gt;&lt;h2 id=&#34;安装-git&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%ae%89%e8%a3%85-git&#34;&gt;&lt;/a&gt;&#xA;安装 Git&#xA;&lt;/h2&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;：从 &lt;a href=&#34;https://git-scm.com/download/win&#34;&gt;Git 官网&lt;/a&gt; 下载并安装。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;：使用 Homebrew 安装：&lt;code&gt;brew install git&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;：使用包管理器安装，例如 Ubuntu：&lt;code&gt;sudo apt-get install git&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;配置-git&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e9%85%8d%e7%bd%ae-git&#34;&gt;&lt;/a&gt;&#xA;配置 Git&#xA;&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global user.name &lt;span class=&#34;s2&#34;&gt;&amp;#34;Your Name&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global user.email &lt;span class=&#34;s2&#34;&gt;&amp;#34;your.email@example.com&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;创建一个新的-git-仓库&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%88%9b%e5%bb%ba%e4%b8%80%e4%b8%aa%e6%96%b0%e7%9a%84-git-%e4%bb%93%e5%ba%93&#34;&gt;&lt;/a&gt;&#xA;创建一个新的 Git 仓库&#xA;&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mkdir myproject&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; myproject&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git init&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;克隆一个现有的仓库&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%85%8b%e9%9a%86%e4%b8%80%e4%b8%aa%e7%8e%b0%e6%9c%89%e7%9a%84%e4%bb%93%e5%ba%93&#34;&gt;&lt;/a&gt;&#xA;克隆一个现有的仓库&#xA;&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://github.com/username/repository.git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;检查仓库状态&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%a3%80%e6%9f%a5%e4%bb%93%e5%ba%93%e7%8a%b6%e6%80%81&#34;&gt;&lt;/a&gt;&#xA;检查仓库状态&#xA;&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git status&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;添加文件到仓库&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%b7%bb%e5%8a%a0%e6%96%87%e4%bb%b6%e5%88%b0%e4%bb%93%e5%ba%93&#34;&gt;&lt;/a&gt;&#xA;添加文件到仓库&#xA;&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add filename&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add .&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;提交更改&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%8f%90%e4%ba%a4%e6%9b%b4%e6%94%b9&#34;&gt;&lt;/a&gt;&#xA;提交更改&#xA;&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;Commit message&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;查看提交历史&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%9f%a5%e7%9c%8b%e6%8f%90%e4%ba%a4%e5%8e%86%e5%8f%b2&#34;&gt;&lt;/a&gt;&#xA;查看提交历史&#xA;&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git log&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;创建和切换分支&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%88%9b%e5%bb%ba%e5%92%8c%e5%88%87%e6%8d%a2%e5%88%86%e6%94%af&#34;&gt;&lt;/a&gt;&#xA;创建和切换分支&#xA;&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git branch new-branch&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git checkout new-branch&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或者创建并切换到新分支&lt;/p&gt;</description>
    </item>
    <item>
      <title>GPIO</title>
      <link>http://localhost:1313/post/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E5%A4%96%E8%AE%BE%E7%BB%84%E4%BB%B6/gpio/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E5%A4%96%E8%AE%BE%E7%BB%84%E4%BB%B6/gpio/</guid>
      <description>&lt;h1 id=&#34;是什么&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%98%af%e4%bb%80%e4%b9%88&#34;&gt;&lt;/a&gt;&#xA;是什么&#xA;&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/07/5_8_55_52_202407050855539.png&#34; alt=&#34;image-20240705085552462&#34;&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;特点&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%89%b9%e7%82%b9&#34;&gt;&lt;/a&gt;&#xA;特点&#xA;&lt;/h1&gt;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;不同型号，IO口数量可能不一样，可通过选型手册快速查询&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;快速翻转，每次翻转最快只需要两个时钟周期（F1最高速度可以到50Mhz）&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;每个IO口都可以做中断&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;支持8种工作模式&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h1 id=&#34;电气特性&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%94%b5%e6%b0%94%e7%89%b9%e6%80%a7&#34;&gt;&lt;/a&gt;&#xA;电气特性&#xA;&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/07/5_8_56_49_202407050856261.png&#34; alt=&#34;image-20240705085649207&#34;&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;基本结构&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%9f%ba%e6%9c%ac%e7%bb%93%e6%9e%84&#34;&gt;&lt;/a&gt;&#xA;基本结构&#xA;&lt;/h1&gt;&lt;p&gt;所有的GPIO都是挂载在APB2外设总线上的（每个GPIO包含16个引脚）&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在GPIO模块中包含寄存器和驱动器&lt;/li&gt;&#xA;&lt;li&gt;寄存器是一段特殊的存储器，内核可以通过APB2总线对寄存器进行读写，这样就可以完成输出电平和读取电平的功能了，寄存器的每一位对应一个引脚，由于每个GPIO模块上面只有16个引脚，所以寄存器只有低16位用到了，高16位保留。驱动器用来增加信号的驱动能力，寄存器只负责存储数据。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/07/5_10_45_53_202407051045843.png&#34; alt=&#34;image-20240705104553778&#34;&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;端口的基本结构&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%ab%af%e5%8f%a3%e7%9a%84%e5%9f%ba%e6%9c%ac%e7%bb%93%e6%9e%84&#34;&gt;&lt;/a&gt;&#xA;端口的基本结构&#xA;&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/07/5_10_47_14_202407051047297.png&#34; alt=&#34;image-20240705104714238&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;保护二极管&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e4%bf%9d%e6%8a%a4%e4%ba%8c%e6%9e%81%e7%ae%a1&#34;&gt;&lt;/a&gt;&#xA;保护二极管&#xA;&lt;/h2&gt;&lt;p&gt;对输入电压进行限幅，当电压比3.3v高，那么上方的保护二极管将会导通，电流就直接流到VDD，不会进入内部电路&lt;/p&gt;&#xA;&lt;h2 id=&#34;施密特触发器&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%96%bd%e5%af%86%e7%89%b9%e8%a7%a6%e5%8f%91%e5%99%a8&#34;&gt;&lt;/a&gt;&#xA;施密特触发器&#xA;&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/07/5_10_47_58_202407051047900.png&#34; alt=&#34;image-20240705104758837&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;在施密特触发器的箭头前面是数字量，在施密特触发器的后面的是模拟量&lt;/p&gt;&#xA;&lt;h2 id=&#34;p-mos管和n-mos管&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#p-mos%e7%ae%a1%e5%92%8cn-mos%e7%ae%a1&#34;&gt;&lt;/a&gt;&#xA;P-MOS管和N-MOS管&#xA;&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/07/5_10_48_42_202407051048750.png&#34; alt=&#34;image-20240705104842694&#34;&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;输入输出模式&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e8%be%93%e5%85%a5%e8%be%93%e5%87%ba%e6%a8%a1%e5%bc%8f&#34;&gt;&lt;/a&gt;&#xA;输入输出模式&#xA;&lt;/h1&gt;&lt;h2 id=&#34;概述&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%a6%82%e8%bf%b0&#34;&gt;&lt;/a&gt;&#xA;概述&#xA;&lt;/h2&gt;&lt;p&gt;输入输出都相对于ST芯片而言的，比如输入就是从io口进如芯片内部，输出就是信号从芯片到IO引脚&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;strong&gt;GPIO&lt;/strong&gt;八种模式&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;特点及应用&lt;/strong&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;输入浮空&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;输入用，完全浮空，状态不定&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;输入上拉&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;输入用，用内部上拉，默认是高电平&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;输入下拉&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;输入用，用内部下拉，默认是低电平&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;模拟功能&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;ADC、DAC&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;开漏输出&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;软件IIC的SDA、SCL等&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;推挽输出&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;驱动能力强，25mA（max），通用输出&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;开漏式复用功能&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;片上外设功能（硬件IIC 的SDA、SCL引脚等）&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;推挽式复用功能&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;片上外设功能（SPI 的SCK、MISO、MOSI引脚等）&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;strong&gt;模式名称&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;性质&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;特征&lt;/strong&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;浮空输入&lt;/td&gt;&#xA;          &lt;td&gt;数字输入&lt;/td&gt;&#xA;          &lt;td&gt;可读取引脚电平，若引脚悬空，则电平不确定&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;上拉输入&lt;/td&gt;&#xA;          &lt;td&gt;数字输入&lt;/td&gt;&#xA;          &lt;td&gt;可读取引脚电平，内部连接上拉电阻，悬空时默认高电平&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;下拉输入&lt;/td&gt;&#xA;          &lt;td&gt;数字输入&lt;/td&gt;&#xA;          &lt;td&gt;可读取引脚电平，内部连接下拉电阻，悬空时默认低电平&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;模拟输入&lt;/td&gt;&#xA;          &lt;td&gt;模拟输入&lt;/td&gt;&#xA;          &lt;td&gt;GPIO无效，引脚直接接入内部ADC&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;开漏输出&lt;/td&gt;&#xA;          &lt;td&gt;数字输出&lt;/td&gt;&#xA;          &lt;td&gt;可输出引脚电平，高电平为高阻态，低电平接VSS&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;推挽输出&lt;/td&gt;&#xA;          &lt;td&gt;数字输出&lt;/td&gt;&#xA;          &lt;td&gt;可输出引脚电平，高电平接VDD，低电平接VSS&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;复用开漏输出&lt;/td&gt;&#xA;          &lt;td&gt;数字输出&lt;/td&gt;&#xA;          &lt;td&gt;由片上外设控制，高电平为高阻态，低电平接VSS&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;复用推挽输出&lt;/td&gt;&#xA;          &lt;td&gt;数字输出&lt;/td&gt;&#xA;          &lt;td&gt;由片上外设控制，高电平接VDD，低电平接VSS&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;输入浮空&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e8%be%93%e5%85%a5%e6%b5%ae%e7%a9%ba&#34;&gt;&lt;/a&gt;&#xA;输入浮空&#xA;&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/07/5_10_54_0_202407051054099.png&#34; alt=&#34;image-20240705105400030&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>IIC</title>
      <link>http://localhost:1313/post/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/iic/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/iic/</guid>
      <description>&lt;h1 id=&#34;参考链接&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%8f%82%e8%80%83%e9%93%be%e6%8e%a5&#34;&gt;&lt;/a&gt;&#xA;参考链接&#xA;&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/qq_54747686/article/details/119202856&#34;&gt;STM32 IIC通讯协议详解—小白入门_stm32 iic速率修改-CSDN博客&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;概述&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%a6%82%e8%bf%b0&#34;&gt;&lt;/a&gt;&#xA;概述&#xA;&lt;/h1&gt;&lt;p&gt;IIC:Inter Integrated Circuit,集成电路总线，是一种同步串行半双工通信总线。&lt;/p&gt;&#xA;&lt;p&gt;总线：传输数据的通道&lt;/p&gt;&#xA;&lt;p&gt;协议：传输数据的规则&lt;/p&gt;&#xA;&lt;h1 id=&#34;物理层&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%89%a9%e7%90%86%e5%b1%82&#34;&gt;&lt;/a&gt;&#xA;物理层&#xA;&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/09/13_13_59_26_202409131359673.png&#34; alt=&#34;ICC电路结构&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;物理层描述：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;它是一个支持设备的总线。“总线”指多个设备共用的信号线。在一个IIC通信总线中，可连接==多个IIC通信设备==，支持多个通信主机及多个通信从机。&lt;/li&gt;&#xA;&lt;li&gt;一个IIC总线只使用两条总线线路。&#xA;&lt;ol&gt;&#xA;&lt;li&gt;一条双向串行数据线（SDA），数据线用来表示数据&lt;/li&gt;&#xA;&lt;li&gt;一条串行时钟线（SCL），时钟线用于同步数据的收发。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;每个连接到总线的设备都有一个==独立==的地址，主机可以利用这个地址进行不同设备之间的访问。&lt;/li&gt;&#xA;&lt;li&gt;总线通过上拉电阻接到电源。&#xA;&lt;ol&gt;&#xA;&lt;li&gt;当IIC设备空闲时，会输出高阻态，而当所有设备都空闲，都输出高阻态，由上拉电阻把总线拉成高电平。&lt;/li&gt;&#xA;&lt;li&gt;当总线上开始发送数据，会将总线拉低，所以同一时刻，总线上只能有一条数据&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;多个主机同时使用总线时，为了防止数据冲突，会利用==仲裁==的方式决定由哪个设备占用总线。&lt;/li&gt;&#xA;&lt;li&gt;具有三种传输模式：&#xA;&lt;ol&gt;&#xA;&lt;li&gt;标准模式传输速率为100kbps&lt;/li&gt;&#xA;&lt;li&gt;快速模式为400kbps&lt;/li&gt;&#xA;&lt;li&gt;高速模式可达3.4Mbps，但目前大多IIC设备尚不支持高速模式。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;连接到相同总线的IIC设备数量收到总线的最大电容400pF限制。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;在一主多从的情况下&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;主机拥有SCL的绝对控制权，所以主机的SCL可以配置成推挽输出，所有从机的SCL都配置成浮空输入或者上拉输入，主机发送，从机接收&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;由于是半双工的协议，所以主机的SDA在发送的时侯是输出，在接收的时候是输入，同样的，从机的SDA也会在输入和输出之间反复切换，为了协调这一点，==禁止所有设备输出强上拉的高电平，采用外置弱上拉电阻加开漏输出的电路结构==。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/09/13_14_13_11_202409131413040.png&#34; alt=&#34;内部结构&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;图中的SCLK就是连接的结构图的SCL，SDA同理，所以才规定SCL和SDA都必须配置成==开漏输出==模式&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;如果使用的是推挽输出，那么当SDA释放时，输出为强。&lt;/li&gt;&#xA;&lt;li&gt;上图就是主机内部结构，左边为SCL，右侧为SDA，SCL经过一个施密特触发器对数据进行缓冲，任何设备在任何时候都是可以输入的。&lt;/li&gt;&#xA;&lt;li&gt;输出低电平时，下管导通，强下拉，输出高电平时，下管断开，但是没有上管了，此时引脚属于浮空的状态，这样的话所有的设备只能输出低电平，而不能输出高电平，为了避免输出出现浮空状态，在外部添加一个上拉电阻（弱上拉），这样做的好处&#xA;&lt;ul&gt;&#xA;&lt;li&gt;完全杜绝了电源短路的现象，保证电路的安全&lt;/li&gt;&#xA;&lt;li&gt;避免了引脚模式的频繁切换，开漏加弱上拉的模式，同时兼具了输入和输出的功能，如果想输出，就去拉杆子或者放手，操作杆子的变化即可，如果想输入，只需要直接放手，然后观察杆子的高低即可&lt;/li&gt;&#xA;&lt;li&gt;存在线与的现象，只要有一个或者多个设备输出了低电平，总线就处于低电平，只有所有的设备都输出高电平，总线才处于高电平&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;协议层&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%8d%8f%e8%ae%ae%e5%b1%82&#34;&gt;&lt;/a&gt;&#xA;协议层&#xA;&lt;/h1&gt;&lt;h2 id=&#34;基本时序单元&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%9f%ba%e6%9c%ac%e6%97%b6%e5%ba%8f%e5%8d%95%e5%85%83&#34;&gt;&lt;/a&gt;&#xA;基本时序单元&#xA;&lt;/h2&gt;&lt;p&gt;&lt;em&gt;&lt;code&gt;开始&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;SCL初始保持高电平也是通过上拉电阻实现的，默认输出高电平&lt;/p&gt;&#xA;&lt;p&gt;如果想要开始通讯，就先将SDA拉下来，当从机捕获到SCL高电平且SDA==下降沿==信号时，就会进行自身的复位，等待主机的召唤，主机将SCL拉下来，将SCL拉下来一方面是为了占用这个总线，另外一方面也方便基本单元的拼接&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;SCL高电平期间，SDA从高电平切换到低电平&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/09/13_14_26_31_202409131426942.png&#34; alt=&#34;开始信号&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;code&gt;结束&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;和起始相反，结束信号是SCL先放手，SDA再放手，产生一个上升沿，这个上升沿触发终止条件&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;SCL高电平期间，SDA从低电平切换到高电平&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/09/13_14_27_45_202409131427923.png&#34; alt=&#34;结束信号&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;code&gt;发送&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;发送一个字节：SCL低电平期间，主机将数据位依次放到SDA线上(高位先行)，然后释放SCL,从机将在SCL高电平期间读取数据位所以SCL高电平期间SDA不允许有数据变化，依次循环上述过程8次，即可发送一个字节&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/09/13_14_32_52_202409131432013.png&#34; alt=&#34;发送过程&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!NOTE]&lt;/p&gt;&#xA;&lt;p&gt;I2C是高位先行，也就是先发送最高位B7，串口是低位先行。SCL低电平期间，允许改变SDA电平，也就是说在低电平期间，SDA可以切换1或0。当SCL变成高电平时，从机读取SDA，所以高电平期间，SDA不允许变化，一般都是在上升沿这个时刻，从机就已经完成了读取。从图中可以看出，主机基本上不用着急数据的存放读取，因为主机有时钟的主导权，但是从机就必须要尽快的读取和存放数据.可以理解为所有设备和从机都始终处于输入模式。当主机需要发送的时候，就可以主动去拉低SDA，而主机在被动接收的时候，就必须先释放SDA&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;发送应答：主机在接收完一个字节之后，在下一个时钟发送一位数据，数据0表示应答，数据1表示非应答&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/09/13_14_49_38_202409131449061.png&#34; alt=&#34;发送应答&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;code&gt;接收&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;接收一个字节：SCL低电平期间，从机将数据位依次放到SDA线上(高位先行)，然后释放SCL,主机将在SCL高电平期间读取数据位所以SCL高电平期间SDA不允许有数据变化，依次循环上述过程8次，即可接收一个字节（主机在接收之前，需要释放SDA)&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/09/13_14_53_2_202409131453678.png&#34; alt=&#34;接收过程&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!TIP]&lt;/p&gt;&#xA;&lt;p&gt;要理解一旦有一个设备为低电平，整个总线都为低电平。当主机将SDA松开时（发送完一个字节的数据之后），如果没有设备下拉为低电平，那么整条总线就为高电平，说明没有设备给予应答，但是一旦有设备下拉SDA，就说明有设备收到数据，且给出应答&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;接收应答：主机在发送完一个字节之后，在下一个时钟接收一位数据，判断从机是否应答，数据0表示应答，数据1表示非应答（主机在接收之前，需要释放SDA)&lt;/p&gt;</description>
    </item>
    <item>
      <title>JyySlide</title>
      <link>http://localhost:1313/post/%E8%BD%AF%E4%BB%B6%E5%8F%8A%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/jyyslide/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E8%BD%AF%E4%BB%B6%E5%8F%8A%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/jyyslide/</guid>
      <description>&lt;h1 id=&#34;下载安装&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e4%b8%8b%e8%bd%bd%e5%ae%89%e8%a3%85&#34;&gt;&lt;/a&gt;&#xA;下载、安装&#xA;&lt;/h1&gt;&lt;h2 id=&#34;参考链接&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%8f%82%e8%80%83%e9%93%be%e6%8e%a5&#34;&gt;&lt;/a&gt;&#xA;参考链接&#xA;&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/sunnysky29/jyy-slides&#34;&gt;sunnysky29/jyy-slides: jyy OS PPT (github.com)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;工具的安装&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%b7%a5%e5%85%b7%e7%9a%84%e5%ae%89%e8%a3%85&#34;&gt;&lt;/a&gt;&#xA;工具的安装&#xA;&lt;/h2&gt;&lt;p&gt;首先需要安装python，python版本需要在&lt;code&gt;3.10&lt;/code&gt;及以上&lt;/p&gt;&#xA;&lt;p&gt;安装poetry&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip install poetry&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;克隆库&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://github.com/zweix123/jyyslide-md.git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; jyyslide-md&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;安装第三方库&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;poetry install&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;转换&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e8%bd%ac%e6%8d%a2&#34;&gt;&lt;/a&gt;&#xA;转换&#xA;&lt;/h2&gt;&lt;p&gt;转换可以使用两种方法：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;使用虚拟环境&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;poetry shell&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python main.py 需要转换的文件地址&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;直接转换&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;poetry run python main.py 需要转换的文件地址&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;windows的快捷转换：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;首先需要先给md文件设置一个右键命令&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;按下 &lt;code&gt;Win + R&lt;/code&gt; 打开“运行”窗口，输入 &lt;code&gt;regedit&lt;/code&gt;，然后按回车进入注册表编辑器。&lt;/p&gt;&#xA;&lt;p&gt;导航到以下路径：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;复制代码&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;HKEY_CLASSES_ROOT\*\shell&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;右键点击 &lt;code&gt;shell&lt;/code&gt; 文件夹，选择“新建” &amp;gt; “项”，将其命名为 &lt;code&gt;Convert to HTML&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;p&gt;在 &lt;code&gt;Convert to HTML&lt;/code&gt; 项下，右键点击右侧窗格中的 &lt;code&gt;(默认)&lt;/code&gt;，选择“修改”，将“数值数据”设置为你希望显示的右键菜单项的名称，比如“Convert Markdown to HTML”。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kconfig</title>
      <link>http://localhost:1313/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/kconfig/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/kconfig/</guid>
      <description>&lt;h1 id=&#34;参考链接&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%8f%82%e8%80%83%e9%93%be%e6%8e%a5&#34;&gt;&lt;/a&gt;&#xA;参考链接&#xA;&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/wenbo13579/article/details/127464764&#34;&gt;从零到一搭建Kconfig配置系统-CSDN博客&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;安装&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%ae%89%e8%a3%85&#34;&gt;&lt;/a&gt;&#xA;安装&#xA;&lt;/h1&gt;&lt;p&gt;由于在window上使用Kconfig需要依赖Curses，所以要先安装window-curses，但是curses本身是应用在Linux平台上的，所以想要安装在window上，就需要使用whl包进行安装。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;curses的下载地址：&lt;a href=&#34;https://pypi.org/project/windows-curses/#files&#34;&gt;windows-curses · PyPI&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;在安装的时候需要检查一下安装的python版本，然后根据python版本安装相应的whl文件&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python --version&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Latex</title>
      <link>http://localhost:1313/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/latex/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/latex/</guid>
      <description>&lt;h1 id=&#34;公式&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%85%ac%e5%bc%8f&#34;&gt;&lt;/a&gt;&#xA;公式&#xA;&lt;/h1&gt;&lt;h2 id=&#34;公式基本语法&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%85%ac%e5%bc%8f%e5%9f%ba%e6%9c%ac%e8%af%ad%e6%b3%95&#34;&gt;&lt;/a&gt;&#xA;公式基本语法&#xA;&lt;/h2&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;行内公式&lt;/strong&gt;：用 &lt;code&gt;$...$&lt;/code&gt; 包围公式。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;块级公式&lt;/strong&gt;：用 &lt;code&gt;$$...$$&lt;/code&gt; 或 &lt;code&gt;\[...\]&lt;/code&gt; 包围公式。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;数学符号&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%95%b0%e5%ad%a6%e7%ac%a6%e5%8f%b7&#34;&gt;&lt;/a&gt;&#xA;数学符号&#xA;&lt;/h2&gt;&lt;h3 id=&#34;基本符号&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%9f%ba%e6%9c%ac%e7%ac%a6%e5%8f%b7&#34;&gt;&lt;/a&gt;&#xA;基本符号&#xA;&lt;/h3&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;描述&lt;/th&gt;&#xA;          &lt;th&gt;符号&lt;/th&gt;&#xA;          &lt;th&gt;LaTeX 代码&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;加号&lt;/td&gt;&#xA;          &lt;td&gt;$+$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;+&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;减号&lt;/td&gt;&#xA;          &lt;td&gt;$-$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;-&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;正负号&lt;/td&gt;&#xA;          &lt;td&gt;$\pm$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\pm&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;乘号&lt;/td&gt;&#xA;          &lt;td&gt;$\times$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\times&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;除号&lt;/td&gt;&#xA;          &lt;td&gt;\&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;根号&lt;/td&gt;&#xA;          &lt;td&gt;$\sqrt{x}$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\sqrt{}&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;分数&lt;/td&gt;&#xA;          &lt;td&gt;$\frac{a}{b}$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\frac{a}{b}&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;等于&lt;/td&gt;&#xA;          &lt;td&gt;$=$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;=&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;约等于&lt;/td&gt;&#xA;          &lt;td&gt;$\approx$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\approx&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;不等于&lt;/td&gt;&#xA;          &lt;td&gt;$\neq$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\neq&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;小于&lt;/td&gt;&#xA;          &lt;td&gt;$&lt;$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;大于&lt;/td&gt;&#xA;          &lt;td&gt;$&gt;$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;小于等于&lt;/td&gt;&#xA;          &lt;td&gt;$\leq$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\leq&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;大于等于&lt;/td&gt;&#xA;          &lt;td&gt;$\geq$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\geq&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;向下取整&lt;/td&gt;&#xA;          &lt;td&gt;$\lfloor x \rfloor$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\lfloor&lt;/code&gt;&lt;!-- raw HTML omitted --&gt;&lt;code&gt;\rfloor&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;向上取整&lt;/td&gt;&#xA;          &lt;td&gt;$\lceil x \rceil$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\lceil&lt;/code&gt;&lt;!-- raw HTML omitted --&gt;&lt;code&gt;\rceil&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;集合符号&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e9%9b%86%e5%90%88%e7%ac%a6%e5%8f%b7&#34;&gt;&lt;/a&gt;&#xA;集合符号&#xA;&lt;/h3&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;描述&lt;/th&gt;&#xA;          &lt;th&gt;符号&lt;/th&gt;&#xA;          &lt;th&gt;LaTeX 代码&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;属于&lt;/td&gt;&#xA;          &lt;td&gt;$\in$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\in&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;不属于&lt;/td&gt;&#xA;          &lt;td&gt;$\notin$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\notin&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;包含（真子集）&lt;/td&gt;&#xA;          &lt;td&gt;$\subset$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\subset&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;包含等于&lt;/td&gt;&#xA;          &lt;td&gt;$\subseteq$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\subseteq&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;并集&lt;/td&gt;&#xA;          &lt;td&gt;$\cup$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\cup&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;交集&lt;/td&gt;&#xA;          &lt;td&gt;$\cap$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\cap&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;空集&lt;/td&gt;&#xA;          &lt;td&gt;$\emptyset$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\emptyset&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;所有实数集合&lt;/td&gt;&#xA;          &lt;td&gt;$\mathbb{R}$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\mathbb{R}&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;所有自然数集合&lt;/td&gt;&#xA;          &lt;td&gt;$\mathbb{N}$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\mathbb{N}&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;所有整数集合&lt;/td&gt;&#xA;          &lt;td&gt;$\mathbb{Z}$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\mathbb{Z}&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;运算符&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e8%bf%90%e7%ae%97%e7%ac%a6&#34;&gt;&lt;/a&gt;&#xA;&lt;strong&gt;运算符&lt;/strong&gt;&#xA;&lt;/h3&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;描述&lt;/th&gt;&#xA;          &lt;th&gt;符号&lt;/th&gt;&#xA;          &lt;th&gt;LaTeX 代码&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;求和&lt;/td&gt;&#xA;          &lt;td&gt;$\sum$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\sum&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;积分&lt;/td&gt;&#xA;          &lt;td&gt;$\int$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\int&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;重积分&lt;/td&gt;&#xA;          &lt;td&gt;$\iint$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\iint&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;极限&lt;/td&gt;&#xA;          &lt;td&gt;$\lim$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\lim&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;微分&lt;/td&gt;&#xA;          &lt;td&gt;$\frac{dy}{dx}$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\frac{dy}{dx}&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;逻辑符号&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e9%80%bb%e8%be%91%e7%ac%a6%e5%8f%b7&#34;&gt;&lt;/a&gt;&#xA;&lt;strong&gt;逻辑符号&lt;/strong&gt;&#xA;&lt;/h3&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;描述&lt;/th&gt;&#xA;          &lt;th&gt;符号&lt;/th&gt;&#xA;          &lt;th&gt;LaTeX 代码&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;与&lt;/td&gt;&#xA;          &lt;td&gt;$\land$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\land&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;或&lt;/td&gt;&#xA;          &lt;td&gt;$\lor$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\lor&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;非&lt;/td&gt;&#xA;          &lt;td&gt;$\neg$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\neg&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;蕴含&lt;/td&gt;&#xA;          &lt;td&gt;$\implies$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\implies&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;等价&lt;/td&gt;&#xA;          &lt;td&gt;$\iff$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\iff&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;希腊字母&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%b8%8c%e8%85%8a%e5%ad%97%e6%af%8d&#34;&gt;&lt;/a&gt;&#xA;&lt;strong&gt;希腊字母&lt;/strong&gt;&#xA;&lt;/h3&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;描述&lt;/th&gt;&#xA;          &lt;th&gt;符号&lt;/th&gt;&#xA;          &lt;th&gt;LaTeX 代码&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;α (Alpha)&lt;/td&gt;&#xA;          &lt;td&gt;$\alpha$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\alpha&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;β (Beta)&lt;/td&gt;&#xA;          &lt;td&gt;$\beta$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\beta&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;γ (Gamma)&lt;/td&gt;&#xA;          &lt;td&gt;$\gamma$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\gamma&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Δ (Delta)&lt;/td&gt;&#xA;          &lt;td&gt;$\Delta$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\Delta&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;π (Pi)&lt;/td&gt;&#xA;          &lt;td&gt;$\pi$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\pi&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Ω (Omega)&lt;/td&gt;&#xA;          &lt;td&gt;$\Omega$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\Omega&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;上下标&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e4%b8%8a%e4%b8%8b%e6%a0%87&#34;&gt;&lt;/a&gt;&#xA;&lt;strong&gt;上下标&lt;/strong&gt;&#xA;&lt;/h3&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;描述&lt;/th&gt;&#xA;          &lt;th&gt;符号&lt;/th&gt;&#xA;          &lt;th&gt;LaTeX 代码&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;上标（幂）&lt;/td&gt;&#xA;          &lt;td&gt;$x^2$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;x^2&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;下标&lt;/td&gt;&#xA;          &lt;td&gt;$x_i$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;x_i&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;同时有上标和下标&lt;/td&gt;&#xA;          &lt;td&gt;$x_i^2$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;x_i^2&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;顶部加&lt;code&gt;^&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$\hat{a}$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\hat{1}&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;顶部加横线&lt;/td&gt;&#xA;          &lt;td&gt;$\overline{a}$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\overline{a}$&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;顶部加波浪线&lt;/td&gt;&#xA;          &lt;td&gt;$\widetilde{a}$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\widetilde{a}&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;顶部加点&lt;/td&gt;&#xA;          &lt;td&gt;$\dot{a}$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\dot{a}&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;顶部加两点&lt;/td&gt;&#xA;          &lt;td&gt;$\ddot{a}$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\ddot{a}$&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;顶部加箭头&lt;/td&gt;&#xA;          &lt;td&gt;$\vec{a}$&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;\vec{a}&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;大括号&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%a4%a7%e6%8b%ac%e5%8f%b7&#34;&gt;&lt;/a&gt;&#xA;大括号&#xA;&lt;/h3&gt;&lt;p&gt;为了表示一组内容，可以使用 &lt;code&gt;\left&lt;/code&gt; 和 &lt;code&gt;\right&lt;/code&gt;，配合不同类型的括号：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linux</title>
      <link>http://localhost:1313/post/%E8%BD%AF%E4%BB%B6%E5%8F%8A%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/linux/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E8%BD%AF%E4%BB%B6%E5%8F%8A%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/linux/</guid>
      <description>&lt;h1 id=&#34;安装&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%ae%89%e8%a3%85&#34;&gt;&lt;/a&gt;&#xA;安装&#xA;&lt;/h1&gt;&lt;p&gt;首先从&lt;a href=&#34;https://cn.ubuntu.com/download/desktop&#34;&gt;下载Ubuntu桌面系统 | Ubuntu&lt;/a&gt;上下载镜像文件，下载完成之后，下载启动盘制作工具的软件，使用&lt;a href=&#34;https://rufus.ie/zh/&#34;&gt;Rufus - 轻松创建 USB 启动盘&lt;/a&gt;或者&lt;a href=&#34;https://ultraiso.net/&#34;&gt;UltraISO软碟通中文官方网站 - 光盘映像文件制作/编辑/转换工具&lt;/a&gt;。准备一个8G以上的U盘，==注意，U盘一定要先格式化，文件系统格式为FAT32==。&lt;/p&gt;&#xA;&lt;p&gt;制作启动盘请参考&lt;a href=&#34;https://blog.csdn.net/qq_43901693/article/details/95535051&#34;&gt;UltralSO 软碟通制作U盘启动盘（图解详细 完美避坑）_软碟通怎么制作u盘启动盘-CSDN博客&lt;/a&gt;或&lt;a href=&#34;https://zhuanlan.zhihu.com/p/370193387&#34;&gt;Windows10怎么使用Rufus制作USB启动盘？ - 知乎 (zhihu.com)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;制作好启动盘之后，重启电脑的时候，等待出现电脑的Logo的时候，按住进入BISO的按键（华硕是F2），拖动启动顺序（Boot）&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://cn.linux-terminal.com/?p=7582&#34;&gt;https://cn.linux-terminal.com/?p=7582&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;基础工具&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%9f%ba%e7%a1%80%e5%b7%a5%e5%85%b7&#34;&gt;&lt;/a&gt;&#xA;基础工具&#xA;&lt;/h1&gt;&lt;h2 id=&#34;apt&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#apt&#34;&gt;&lt;/a&gt;&#xA;apt&#xA;&lt;/h2&gt;&lt;p&gt;&lt;code&gt;apt&lt;/code&gt;是包管理工具,常用命令如下：&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;apt&lt;/code&gt; 常用的命令有：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;更新本地包列表：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt update&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;升级所有已安装的软件包：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt upgrade&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;安装新的软件包：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt install &amp;lt;package_name&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;删除已安装的软件包：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt remove &amp;lt;package_name&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;完全删除软件包（包括配置文件）：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt purge &amp;lt;package_name&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;清理系统不再需要的包：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt autoremove&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;显示有关包的信息：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apt show &amp;lt;package_name&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;zsh&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#zsh&#34;&gt;&lt;/a&gt;&#xA;zsh&#xA;&lt;/h2&gt;&lt;p&gt;参考链接&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.haoyep.com/posts/zsh-config-oh-my-zsh/&#34;&gt;Zsh 安装与配置，使用 Oh-My-Zsh 美化终端 | Leehow的小站 (haoyep.com)&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Makefile</title>
      <link>http://localhost:1313/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/makefile/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/makefile/</guid>
      <description>&lt;h1 id=&#34;参考链接&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%8f%82%e8%80%83%e9%93%be%e6%8e%a5&#34;&gt;&lt;/a&gt;&#xA;参考链接&#xA;&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://seisman.github.io/how-to-write-makefile/index.html&#34;&gt;跟我一起写Makefile — 跟我一起写Makefile 1.0 文档 (seisman.github.io)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;概述&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%a6%82%e8%bf%b0&#34;&gt;&lt;/a&gt;&#xA;概述&#xA;&lt;/h1&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-makefile&#34; data-lang=&#34;makefile&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;targets&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;prerequisites&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    commands&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;targets&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;prerequisties&lt;/span&gt;;&lt;span class=&#34;n&#34;&gt;commands&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;&lt;code&gt;targets&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;可以是一个object file（目标文件），也可以是一个可执行文件，还可以是一个标签（label）。&lt;/li&gt;&#xA;&lt;li&gt;targets是文件名，以空格分开，可以使用通配符。一般来说，我们的目标基本上是一个文件，但也有可能是多个文件。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;code&gt;prerequisites&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;目标所依赖的文件（或依赖目标）。如果其中的某个文件要比目标文件要新，那么，目标就被认为是“过时的”，被认为是需要重生成的。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;code&gt;commands&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;该target要执行的命令（任意的shell命令）。&lt;/li&gt;&#xA;&lt;li&gt;commands是命令行，如果其不与“target:prerequisites”在一行，那么，必须以 &lt;code&gt;Tab&lt;/code&gt; 键开头。&lt;/li&gt;&#xA;&lt;li&gt;如果和prerequisites在一行，那么可以用分号做为分隔。（见上）&lt;/li&gt;&#xA;&lt;li&gt;如果命令太长，可以使用反斜杠（ &lt;code&gt;\&lt;/code&gt; ）作为换行符。make对一行上有多少个字符没有限制。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!NOTE]&lt;/p&gt;&#xA;&lt;p&gt;这是一个文件的依赖关系，也就是说，target这一个或多个的目标文件依赖于prerequisites中的文件，其生成规则定义在command中。说白一点就是说:&lt;/p&gt;&#xA;&lt;p&gt;==prerequisites中如果有一个以上的文件比target文件要新的话，commands所定义的命令就会被执行。==&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!IMPORTANT]&lt;/p&gt;&#xA;&lt;p&gt;注意：makefile有着严格的缩进格式，命令前面需要使用tab键对齐&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;下面将会按照以下的例子来介绍相关知识：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-makefile&#34; data-lang=&#34;makefile&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;edit &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;.&lt;span class=&#34;n&#34;&gt;o&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;kbd&lt;/span&gt;.&lt;span class=&#34;n&#34;&gt;o&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;.&lt;span class=&#34;n&#34;&gt;o&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;display&lt;/span&gt;.&lt;span class=&#34;n&#34;&gt;o&lt;/span&gt; \&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;insert&lt;/span&gt;.&lt;span class=&#34;n&#34;&gt;o&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;search&lt;/span&gt;.&lt;span class=&#34;n&#34;&gt;o&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;files&lt;/span&gt;.&lt;span class=&#34;n&#34;&gt;o&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;utils&lt;/span&gt;.&lt;span class=&#34;n&#34;&gt;o&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    cc -o edit main.o kbd.o command.o display.o &lt;span class=&#34;se&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;        insert.o search.o files.o utils.o&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;main.o &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;.&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;defs&lt;/span&gt;.&lt;span class=&#34;n&#34;&gt;h&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    cc -c main.c&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;kbd.o &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;kbd&lt;/span&gt;.&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;defs&lt;/span&gt;.&lt;span class=&#34;n&#34;&gt;h&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;.&lt;span class=&#34;n&#34;&gt;h&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    cc -c kbd.c&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;command.o &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;.&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;defs&lt;/span&gt;.&lt;span class=&#34;n&#34;&gt;h&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;.&lt;span class=&#34;n&#34;&gt;h&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    cc -c command.c&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;display.o &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;display&lt;/span&gt;.&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;defs&lt;/span&gt;.&lt;span class=&#34;n&#34;&gt;h&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;buffer&lt;/span&gt;.&lt;span class=&#34;n&#34;&gt;h&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    cc -c display.c&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;insert.o &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;insert&lt;/span&gt;.&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;defs&lt;/span&gt;.&lt;span class=&#34;n&#34;&gt;h&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;buffer&lt;/span&gt;.&lt;span class=&#34;n&#34;&gt;h&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    cc -c insert.c&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;search.o &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;search&lt;/span&gt;.&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;defs&lt;/span&gt;.&lt;span class=&#34;n&#34;&gt;h&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;buffer&lt;/span&gt;.&lt;span class=&#34;n&#34;&gt;h&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    cc -c search.c&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;files.o &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;files&lt;/span&gt;.&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;defs&lt;/span&gt;.&lt;span class=&#34;n&#34;&gt;h&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;buffer&lt;/span&gt;.&lt;span class=&#34;n&#34;&gt;h&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;.&lt;span class=&#34;n&#34;&gt;h&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    cc -c files.c&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;utils.o &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;utils&lt;/span&gt;.&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;defs&lt;/span&gt;.&lt;span class=&#34;n&#34;&gt;h&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    cc -c utils.c&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;clean &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    rm edit main.o kbd.o command.o display.o &lt;span class=&#34;se&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;        insert.o search.o files.o utils.o&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;反斜杠（ &lt;code&gt;\&lt;/code&gt; ）是换行符的意思。这样比较便于makefile的阅读。我们可以把这个内容保存在名字为“makefile”或“Makefile”的文件中，然后在该目录下直接输入命令 &lt;code&gt;make&lt;/code&gt; 就可以生成执行文件edit。如果要删除可执行文件和所有的中间目标文件，那么，只要简单地执行一下 &lt;code&gt;make clean&lt;/code&gt; 就可以了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Map文件</title>
      <link>http://localhost:1313/post/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/map%E6%96%87%E4%BB%B6/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/map%E6%96%87%E4%BB%B6/</guid>
      <description>&lt;h1 id=&#34;参考链接&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%8f%82%e8%80%83%e9%93%be%e6%8e%a5&#34;&gt;&lt;/a&gt;&#xA;参考链接&#xA;&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;http://www.openedv.com/thread-305913-1-1.html&#34;&gt;KEIL MDK .map文件分析(必学知识点) - 正点原子倾力打造！-OpenEdv-开源电子网&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/502051758&#34;&gt;充分理解Linux GCC 链接生成的Map文件 - 知乎 (zhihu.com)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!important]&lt;/p&gt;&#xA;&lt;p&gt;可以使用AMAP可视化map文件&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h1 id=&#34;gcc平台&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#gcc%e5%b9%b3%e5%8f%b0&#34;&gt;&lt;/a&gt;&#xA;GCC平台&#xA;&lt;/h1&gt;&lt;h2 id=&#34;archives-linked&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#archives-linked&#34;&gt;&lt;/a&gt;&#xA;Archives linked&#xA;&lt;/h2&gt;&lt;p&gt;一般位于map文件的第一行&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Archive member included to satisfy reference by file (symbol)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    /usr/local/Cellar/arm-none-eabi-gcc/8-2018-q4-major/gcc/bin/../lib/gcc/arm-none-eabi/8.2.1/../../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a(lib_a-exit.o)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                                  /usr/local/Cellar/arm-none-eabi-gcc/8-2018-q4-major/gcc/bin/../lib/gcc/arm-none-eabi/8.2.1/../../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/crt0.o (exit)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面的文件信息格式如下：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;The archive file location (compilation unit)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &#x9;&#x9;&#x9;The compilation unit referencing the archive (symbol called)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面内容的意思是crt0这个文件中会调用exit函数，exit函数在exit.o这个目标文件中，exit.o目标文件是被链接在libc_nano.a这个库文件里的。&lt;/p&gt;&#xA;&lt;h2 id=&#34;memory-configuration&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#memory-configuration&#34;&gt;&lt;/a&gt;&#xA;Memory configuration&#xA;&lt;/h2&gt;&lt;p&gt;Map文件中最直接的信息是实际的内存区域，这些区域具有位置、大小和访问权限:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Memory Configuration&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Name             Origin             Length             Attributes&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    FLASH            0x0000000000001000 0x00000000000ff000 xr&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    RAM              0x0000000020000008 0x000000000003fff8 xrw&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    *default*        0x0000000000000000 0xffffffffffffffff&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;linker-script-and-memory-map&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#linker-script-and-memory-map&#34;&gt;&lt;/a&gt;&#xA;Linker script and memory map&#xA;&lt;/h2&gt;&lt;p&gt;内存配置之后是Linker script and memory map，它给出了程序中符号的详细信息。一般来说，该段首先指示&lt;code&gt;text&lt;/code&gt;区域的大小及其内容(&lt;code&gt;text&lt;/code&gt;是编译的代码，而&lt;code&gt;data&lt;/code&gt;是程序数据)。&lt;/p&gt;</description>
    </item>
    <item>
      <title>MarkDown</title>
      <link>http://localhost:1313/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/markdown/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/markdown/</guid>
      <description>&lt;h1 id=&#34;语法&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e8%af%ad%e6%b3%95&#34;&gt;&lt;/a&gt;&#xA;语法&#xA;&lt;/h1&gt;&lt;p&gt;Markdown 是一种轻量级标记语言，使用简单的文本格式来创建格式化的文档。以下是常用的 Markdown 语法命令：&lt;/p&gt;&#xA;&lt;h2 id=&#34;标题&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%a0%87%e9%a2%98&#34;&gt;&lt;/a&gt;&#xA;标题&#xA;&lt;/h2&gt;&lt;p&gt;使用 &lt;code&gt;#&lt;/code&gt; 来创建标题，&lt;code&gt;#&lt;/code&gt; 的数量表示标题的级别。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gh&#34;&gt;# 一级标题&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gh&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gu&#34;&gt;## 二级标题&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gu&#34;&gt;### 三级标题&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gu&#34;&gt;#### 四级标题&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gu&#34;&gt;##### 五级标题&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gu&#34;&gt;###### 六级标题&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;[!note]&lt;/p&gt;&#xA;&lt;p&gt;需要注意的是，在&lt;code&gt;#&lt;/code&gt;符号后面需要加一个空格，这样markdown才能知道是标题&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;字体样式&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%ad%97%e4%bd%93%e6%a0%b7%e5%bc%8f&#34;&gt;&lt;/a&gt;&#xA;字体样式&#xA;&lt;/h2&gt;&lt;p&gt;使用 &lt;code&gt;**&lt;/code&gt; 或 &lt;code&gt;__&lt;/code&gt; 包围文本表示粗体&lt;/p&gt;&#xA;&lt;p&gt;使用 &lt;code&gt;*&lt;/code&gt; 或 &lt;code&gt;_&lt;/code&gt; 包围文本表示斜体。&lt;/p&gt;&#xA;&lt;p&gt;使用&lt;code&gt;==&lt;/code&gt;包围为高亮&lt;/p&gt;&#xA;&lt;p&gt;使用~~包围的为删除线&lt;/p&gt;&#xA;&lt;p&gt;使用&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;包围为下划线&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;**这是粗体文本**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gs&#34;&gt;__这是粗体文本__&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;ge&#34;&gt;*这是斜体文本*&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;ge&#34;&gt;_这是斜体文本_&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;==这是高亮文本==&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gd&#34;&gt;~~这是删除线~~&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;这是下划线&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;列表&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%88%97%e8%a1%a8&#34;&gt;&lt;/a&gt;&#xA;列表&#xA;&lt;/h2&gt;&lt;p&gt;无序列表使用 &lt;code&gt;*&lt;/code&gt;、&lt;code&gt;-&lt;/code&gt; 或 &lt;code&gt;+&lt;/code&gt; 表示，有序列表使用数字加点表示。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;*&lt;/span&gt; 项目 1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;*&lt;/span&gt; 项目 2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;*&lt;/span&gt; 子项目 2.1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;*&lt;/span&gt; 子项目 2.2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;1.&lt;/span&gt; 项目 1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;2.&lt;/span&gt; 项目 2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;3.&lt;/span&gt; 项目 3&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;链接和图片&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e9%93%be%e6%8e%a5%e5%92%8c%e5%9b%be%e7%89%87&#34;&gt;&lt;/a&gt;&#xA;链接和图片&#xA;&lt;/h2&gt;&lt;p&gt;图片使用 &lt;code&gt;![替代文本](图片URL)&lt;/code&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Matlab</title>
      <link>http://localhost:1313/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/matlab/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/matlab/</guid>
      <description>&lt;h1 id=&#34;参考链接&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%8f%82%e8%80%83%e9%93%be%e6%8e%a5&#34;&gt;&lt;/a&gt;&#xA;参考链接&#xA;&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/getting-started-with-matlab_zh_CN.html&#34;&gt;MATLAB 快速入门 - MathWorks 中国&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;语言基础知识&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e8%af%ad%e8%a8%80%e5%9f%ba%e7%a1%80%e7%9f%a5%e8%af%86&#34;&gt;&lt;/a&gt;&#xA;语言基础知识&#xA;&lt;/h1&gt;&lt;h2 id=&#34;输入命令&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e8%be%93%e5%85%a5%e5%91%bd%e4%bb%a4&#34;&gt;&lt;/a&gt;&#xA;输入命令&#xA;&lt;/h2&gt;&lt;p&gt;在 MATLAB 中工作时，您可发出创建变量和调用函数的命令。有关介绍，请参阅&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/matlab_env/enter-statements-in-command-window.html&#34;&gt;在命令行窗口中输入语句&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;h3 id=&#34;函数&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%87%bd%e6%95%b0&#34;&gt;&lt;/a&gt;&#xA;函数&#xA;&lt;/h3&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;操作&lt;/th&gt;&#xA;          &lt;th&gt;注释&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/ans.html&#34;&gt;&lt;code&gt;ans&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;最近计算的答案&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/clc.html&#34;&gt;&lt;code&gt;clc&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;清空命令行窗口&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/diary.html&#34;&gt;&lt;code&gt;diary&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;将命令行窗口文本记录到日志文件中&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/format.html&#34;&gt;&lt;code&gt;format&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;设置输出显示格式&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/home.html&#34;&gt;&lt;code&gt;home&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;发送光标复位&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/iskeyword.html&#34;&gt;&lt;code&gt;iskeyword&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;确定输入是否为 MATLAB 关键字&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/more.html&#34;&gt;&lt;code&gt;more&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;控制命令行窗口中的分页输出&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/commandwindow.html&#34;&gt;&lt;code&gt;commandwindow&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;选择命令行窗口&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/commandhistory.html&#34;&gt;&lt;code&gt;commandhistory&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;打开命令历史记录窗口&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;对象&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%af%b9%e8%b1%a1&#34;&gt;&lt;/a&gt;&#xA;对象&#xA;&lt;/h3&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;操作&lt;/th&gt;&#xA;          &lt;th&gt;注释&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/matlab.display.displayformatoptions.html&#34;&gt;&lt;code&gt;DisplayFormatOptions&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;命令行窗口中的输出显示格式 &lt;em&gt;(自 R2021a 起)&lt;/em&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;数组和矩阵&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%95%b0%e7%bb%84%e5%92%8c%e7%9f%a9%e9%98%b5&#34;&gt;&lt;/a&gt;&#xA;数组和矩阵&#xA;&lt;/h2&gt;&lt;h3 id=&#34;创建和合并数组&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%88%9b%e5%bb%ba%e5%92%8c%e5%90%88%e5%b9%b6%e6%95%b0%e7%bb%84&#34;&gt;&lt;/a&gt;&#xA;创建和合并数组&#xA;&lt;/h3&gt;&lt;p&gt;要创建每行包含四个元素的数组，请使用逗号 (&lt;code&gt;,&lt;/code&gt;) 或空格分隔各元素。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-matlab&#34; data-lang=&#34;matlab&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这种数组为==行向量==。要创建包含多行的矩阵，请使用分号分隔各行。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-matlab&#34; data-lang=&#34;matlab&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;函数&lt;/th&gt;&#xA;          &lt;th&gt;备注&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/zeros.html&#34;&gt;&lt;code&gt;zeros&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;创建全零数组&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/ones.html&#34;&gt;&lt;code&gt;ones&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;创建全部为 1 的数组&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/rand.html&#34;&gt;&lt;code&gt;rand&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;均匀分布的随机数&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/true.html&#34;&gt;&lt;code&gt;true&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;逻辑值 1（真）&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/false.html&#34;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;逻辑 0（假）&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/eye.html&#34;&gt;&lt;code&gt;eye&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;单位矩阵&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/diag.html&#34;&gt;&lt;code&gt;diag&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;创建对角矩阵或获取矩阵的对角元素&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/blkdiag.html&#34;&gt;&lt;code&gt;blkdiag&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;分块对角矩阵&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/double.cat.html&#34;&gt;&lt;code&gt;cat&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;串联数组。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/double.horzcat.html&#34;&gt;&lt;code&gt;horzcat&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;水平串联数组&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/double.vertcat.html&#34;&gt;&lt;code&gt;vertcat&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;垂直串联数组&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/repelem.html&#34;&gt;&lt;code&gt;repelem&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;重复数组元素副本&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/repmat.html&#34;&gt;&lt;code&gt;repmat&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;重复数组副本&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/combinations.html&#34;&gt;&lt;code&gt;combinations&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;生成数组的所有元素组合 &lt;em&gt;(自 R2023a 起)&lt;/em&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;创建网格&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%88%9b%e5%bb%ba%e7%bd%91%e6%a0%bc&#34;&gt;&lt;/a&gt;&#xA;创建网格&#xA;&lt;/h3&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;函数、参数&lt;/th&gt;&#xA;          &lt;th&gt;备注&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/linspace.html&#34;&gt;&lt;code&gt;linspace&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;生成线性间距向量&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/logspace.html&#34;&gt;&lt;code&gt;logspace&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;生成对数间距向量&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/freqspace.html&#34;&gt;&lt;code&gt;freqspace&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;频率响应的频率间距&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/meshgrid.html&#34;&gt;&lt;code&gt;meshgrid&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;二维和三维网格&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/ndgrid.html&#34;&gt;&lt;code&gt;ndgrid&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;N 维空间中的矩形网格&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;确定大小和排序&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%a1%ae%e5%ae%9a%e5%a4%a7%e5%b0%8f%e5%92%8c%e6%8e%92%e5%ba%8f&#34;&gt;&lt;/a&gt;&#xA;确定大小和排序&#xA;&lt;/h3&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;函数、参数&lt;/th&gt;&#xA;          &lt;th&gt;备注&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/length.html&#34;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;最大数组维度的长度&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/size.html&#34;&gt;&lt;code&gt;size&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;数组大小&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/double.ndims.html&#34;&gt;&lt;code&gt;ndims&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;数组维度数目&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/double.numel.html&#34;&gt;&lt;code&gt;numel&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;数组元素的数目&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/isscalar.html&#34;&gt;&lt;code&gt;isscalar&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;确定输入是否为标量&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/isvector.html&#34;&gt;&lt;code&gt;isvector&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;确定输入是否为向量&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/ismatrix.html&#34;&gt;&lt;code&gt;ismatrix&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;确定输入是否为矩阵&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/isrow.html&#34;&gt;&lt;code&gt;isrow&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;确定输入是否为行向量&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/iscolumn.html&#34;&gt;&lt;code&gt;iscolumn&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;确定输入是否为列向量&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/double.isempty.html&#34;&gt;&lt;code&gt;isempty&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;确定数组是否为空&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/issorted.html&#34;&gt;&lt;code&gt;issorted&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;确定数组是否已排序&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/issortedrows.html&#34;&gt;&lt;code&gt;issortedrows&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;确定矩阵或表的行是否已排序&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/isuniform.html&#34;&gt;&lt;code&gt;isuniform&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Determine if vector is uniformly spaced &lt;em&gt;(自 R2022b 起)&lt;/em&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;调整大小&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e8%b0%83%e6%95%b4%e5%a4%a7%e5%b0%8f&#34;&gt;&lt;/a&gt;&#xA;调整大小&#xA;&lt;/h3&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;函数、参数&lt;/th&gt;&#xA;          &lt;th&gt;备注&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/double.head.html&#34;&gt;&lt;code&gt;head&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;获取数组或表的顶行&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/double.tail.html&#34;&gt;&lt;code&gt;tail&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;获取数组或表的底行&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/resize.html&#34;&gt;&lt;code&gt;resize&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Resize data by adding or removing elements &lt;em&gt;(自 R2023b 起)&lt;/em&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/paddata.html&#34;&gt;&lt;code&gt;paddata&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Pad data by adding elements &lt;em&gt;(自 R2023b 起)&lt;/em&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/trimdata.html&#34;&gt;&lt;code&gt;trimdata&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Trim data by removing elements &lt;em&gt;(自 R2023b 起)&lt;/em&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;重构&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e9%87%8d%e6%9e%84&#34;&gt;&lt;/a&gt;&#xA;重构&#xA;&lt;/h3&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;函数、参数&lt;/th&gt;&#xA;          &lt;th&gt;备注&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/permute.html&#34;&gt;&lt;code&gt;permute&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;置换数组维度&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/ipermute.html&#34;&gt;&lt;code&gt;ipermute&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;逆置换数组维度。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/shiftdim.html&#34;&gt;&lt;code&gt;shiftdim&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;移动数组维度&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/reshape.html&#34;&gt;&lt;code&gt;reshape&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;通过重新排列现有元素来重构数组&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/squeeze.html&#34;&gt;&lt;code&gt;squeeze&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;删除长度为 1 的维度&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;重新排序&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e9%87%8d%e6%96%b0%e6%8e%92%e5%ba%8f&#34;&gt;&lt;/a&gt;&#xA;重新排序&#xA;&lt;/h3&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;函数、参数&lt;/th&gt;&#xA;          &lt;th&gt;备注&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/sort.html&#34;&gt;&lt;code&gt;sort&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;对数组元素排序&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/double.sortrows.html&#34;&gt;&lt;code&gt;sortrows&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;对矩阵行或表行进行排序&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/flip.html&#34;&gt;&lt;code&gt;flip&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;翻转元素顺序&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/fliplr.html&#34;&gt;&lt;code&gt;fliplr&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;将数组从左向右翻转&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/flipud.html&#34;&gt;&lt;code&gt;flipud&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;将数组从上向下翻转&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/rot90.html&#34;&gt;&lt;code&gt;rot90&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;将数组旋转 90 度&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/transpose.html&#34;&gt;&lt;code&gt;transpose&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;转置向量或矩阵&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/ctranspose.html&#34;&gt;&lt;code&gt;ctranspose&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;复共轭转置&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/circshift.html&#34;&gt;&lt;code&gt;circshift&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;循环平移数组&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;索引&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%b4%a2%e5%bc%95&#34;&gt;&lt;/a&gt;&#xA;索引&#xA;&lt;/h3&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;函数、参数&lt;/th&gt;&#xA;          &lt;th&gt;备注&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/colon.html&#34;&gt;&lt;code&gt;colon&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;向量创建、数组下标和 &lt;code&gt;for&lt;/code&gt; 循环迭代&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/end.html&#34;&gt;&lt;code&gt;end&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;终止代码块或指示最大数组索引&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/ind2sub.html&#34;&gt;&lt;code&gt;ind2sub&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;将线性索引转换为下标&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/matlab/ref/sub2ind.html&#34;&gt;&lt;code&gt;sub2ind&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;将下标转换为线性索引&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>PWR</title>
      <link>http://localhost:1313/post/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E5%A4%96%E8%AE%BE%E7%BB%84%E4%BB%B6/pwr/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E5%A4%96%E8%AE%BE%E7%BB%84%E4%BB%B6/pwr/</guid>
      <description>&lt;h1 id=&#34;概述&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%a6%82%e8%bf%b0&#34;&gt;&lt;/a&gt;&#xA;概述&#xA;&lt;/h1&gt;&lt;p&gt;PWR(Power Control)电源控制，PWR负责管理STM32内部的电源供电部分，可以实现可编程电压监测器和低功耗模式的功能&lt;/p&gt;&#xA;&lt;p&gt;可编程电压监测器(PVD)可以监控VDD电源电压，当VDD下降到PVD阀值以下或上升到PVD阀值之上时，PVD会触发中断，用于执行紧急关闭任务&lt;/p&gt;&#xA;&lt;p&gt;低功耗模式包括：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;睡眠模式(Sleep)&lt;/li&gt;&#xA;&lt;li&gt;停机模式(Stop)&lt;/li&gt;&#xA;&lt;li&gt;待机模式(Standby)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;可在系统空闲时，降低STM32的功耗，延长设备使用时间&lt;/p&gt;&#xA;&lt;h2 id=&#34;电源系统结构&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%94%b5%e6%ba%90%e7%b3%bb%e7%bb%9f%e7%bb%93%e6%9e%84&#34;&gt;&lt;/a&gt;&#xA;电源系统结构&#xA;&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/10/15_18_46_48_202410151846192.png&#34; alt=&#34;电源的系统结构&#34;&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;VDDA供电区域，主要负责模拟部分的供电，包括AD转换、温度传感器、复位模块PLL。这些电路供电正极是VDDA，负极是VSSA，其中AD转换器还有两个参考电压引脚，分别为VREF+和VREF-&lt;/li&gt;&#xA;&lt;li&gt;由两部分组成，左边部分是VDD供电区域，包括IO电路、待机电路、唤醒电路及看门狗，右边部分是VDD通过电压调节器，降压至1.8V，1.8v区域包括CPU核心、存储器和内置数字外设，stm32内部的关键电路，CPU、存储器和外设其实都是以1.8V的低电压运行的。当这些电路想要和外界进行交流时，才会通过IO电路转换到3.3v。==使用低电压运行的主要目的是为了降低功耗，电压越低，内部电路运行的功耗就相对越低==&lt;/li&gt;&#xA;&lt;li&gt;VBAT后备供电区域，其中包括LSE晶体震荡器、后备寄存器、RCC BDCR寄存器和RTC，其中有一个低电压检测开关，VDD有电时，由VDD供电，VDD没电时，由VBAT供电&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;电源监控&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%94%b5%e6%ba%90%e7%9b%91%e6%8e%a7&#34;&gt;&lt;/a&gt;&#xA;电源监控&#xA;&lt;/h2&gt;&lt;p&gt;电源监控即对某些电源电压(VDD/VDDA/VBAT)进行监控。POR/PDR监控器、PVD监控器、BOR监控器、AVD监控器、VBAT阈值、温度阈值&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/10/15_18_51_29_202410151851842.png&#34; alt=&#34;电源监控&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;POR/PDR(power on/down reset):上电/掉电复位&lt;/li&gt;&#xA;&lt;li&gt;PVD(programmable voltage detector)):监控V&lt;del&gt;DD&lt;/del&gt;电压&lt;/li&gt;&#xA;&lt;li&gt;BOR(brown out reset):欠压复位&lt;/li&gt;&#xA;&lt;li&gt;AVD(analog voltage detector)：监控V&lt;del&gt;DDA&lt;/del&gt;电压&lt;/li&gt;&#xA;&lt;li&gt;VBAT阈值(battery voltage thresholds)：监控V&lt;del&gt;BAT&lt;/del&gt;电池电压&lt;/li&gt;&#xA;&lt;li&gt;温度阈值(temperature thresholds):监控结温&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;注意：不同芯片包括的电源监控功能不同&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;上电掉电复位&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e4%b8%8a%e7%94%b5%e6%8e%89%e7%94%b5%e5%a4%8d%e4%bd%8d&#34;&gt;&lt;/a&gt;&#xA;上电/掉电复位&#xA;&lt;/h3&gt;&lt;p&gt;当VDD或者VDDA电压过低时，内部电路会直接产生复位，让stm32复位，不能乱操作&lt;/p&gt;&#xA;&lt;p&gt;在POR和PDR之间设置了一个40mV的迟滞电压，大于POR产生复位，小于PDR时保持复位，设置两个阈值的作用就是防止电压在某个阈值附近波动时，造成输出也来回抖动&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/10/15_18_54_11_202410151854735.png&#34; alt=&#34;上掉电复位&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;电压检测器&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%94%b5%e5%8e%8b%e6%a3%80%e6%b5%8b%e5%99%a8&#34;&gt;&lt;/a&gt;&#xA;电压检测器&#xA;&lt;/h3&gt;&lt;p&gt;PVD阈值电压可以使用程序指定，可以自定义调节&lt;/p&gt;&#xA;&lt;p&gt;PVD的输出信号可以去申请中断，这个中断申请是由外部中断实现的&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/10/15_18_55_13_202410151855604.png&#34; alt=&#34;电压检测器&#34;&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;低功耗&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e4%bd%8e%e5%8a%9f%e8%80%97&#34;&gt;&lt;/a&gt;&#xA;低功耗&#xA;&lt;/h1&gt;&lt;p&gt;STM32具有运行、睡眠、停止和待机四种工作模式。&lt;/p&gt;&#xA;&lt;p&gt;上电后默认是在运行模式，当内核不需要继续运行时，可以选择后面三种低功耗模式。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/10/15_18_57_38_202410151857005.png&#34; alt=&#34;低功耗&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;睡眠模式&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%9d%a1%e7%9c%a0%e6%a8%a1%e5%bc%8f&#34;&gt;&lt;/a&gt;&#xA;睡眠模式&#xA;&lt;/h2&gt;&lt;p&gt;通过两个库函数进入睡眠模式：WFI和WFE，WFI和WFE是内核的指令&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;WFI：wait for interrupt 等待中断，当中断发生，醒来之后的第一件事就是处理中断&lt;/li&gt;&#xA;&lt;li&gt;WFE: wait for event 等待事件，这个事件可以事外部中断配置为事件模式，也可以是使能了中断，但是没有配置NVIC，调用的WFE进入的睡眠模式，产生唤醒事件时会立即醒来，醒来之后一般不需要进入中断函数，直接从睡眠的地方继续运行&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/10/15_18_59_1_202410151859916.png&#34; alt=&#34;睡眠模式&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;停止模式&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%81%9c%e6%ad%a2%e6%a8%a1%e5%bc%8f&#34;&gt;&lt;/a&gt;&#xA;停止模式&#xA;&lt;/h2&gt;&lt;p&gt;==只有外部中断才能唤醒，其他中断唤醒不了。==&lt;/p&gt;</description>
    </item>
    <item>
      <title>PyQT</title>
      <link>http://localhost:1313/post/%E8%BD%AF%E4%BB%B6%E5%8F%8A%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/pyqt/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E8%BD%AF%E4%BB%B6%E5%8F%8A%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/pyqt/</guid>
      <description>&lt;h1 id=&#34;参考链接&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%8f%82%e8%80%83%e9%93%be%e6%8e%a5&#34;&gt;&lt;/a&gt;&#xA;参考链接&#xA;&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/youcans/article/details/120925109&#34;&gt;Python 小白从零开始 PyQt5 项目实战（8）汇总篇（完整例程）_pyqt项目实战教程-CSDN博客&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.freecodecamp.org/chinese/learn&#34;&gt;免费学习编程 - Python、JavaScript、Java、Git 等 (freecodecamp.org)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;ui&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#ui&#34;&gt;&lt;/a&gt;&#xA;UI&#xA;&lt;/h1&gt;&lt;h2 id=&#34;fluent-widgets&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#fluent-widgets&#34;&gt;&lt;/a&gt;&#xA;fluent-widgets&#xA;&lt;/h2&gt;&lt;p&gt;参考链接：&lt;a href=&#34;https://pyqt-fluent-widgets.readthedocs.io/zh-cn/latest/quick-start.html&#34;&gt;快速上手 - PyQt-Fluent-Widgets&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;silicon&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#silicon&#34;&gt;&lt;/a&gt;&#xA;silicon&#xA;&lt;/h2&gt;&lt;p&gt;参考链接：&lt;a href=&#34;https://github.com/ChinaIceF/PyQt-SiliconUI&#34;&gt;ChinaIceF/PyQt-SiliconUI: A powerful and artistic UI library based on PyQt5，基于 PyQt5 的UI框架，灵动、优雅而轻便 (github.com)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;安装&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%ae%89%e8%a3%85&#34;&gt;&lt;/a&gt;&#xA;安装&#xA;&lt;/h1&gt;&lt;p&gt;&lt;em&gt;&lt;code&gt;安装&lt;/code&gt;python&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;从官网下载：&lt;a href=&#34;https://www.python.org/&#34;&gt;Welcome to Python.org&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;code&gt;IDE&lt;/code&gt;的选择&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;==VSCODE==（❤❤❤）：&lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;Visual Studio Code - Code Editing. Redefined&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;==Cursor==(AI级选手，面向自然语言编程，amazing❗❗❗)：&lt;a href=&#34;https://www.cursor.com/&#34;&gt;Cursor&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;==Pycharm==（python专用工具）：&lt;a href=&#34;https://www.jetbrains.com/pycharm/&#34;&gt;PyCharm: the Python IDE for data science and web development (jetbrains.com)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;code&gt;python包管理工具&lt;/code&gt;PIP&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;pip&lt;/code&gt; 是 Python 包管理工具，用于安装和管理 Python 库和依赖。通过 &lt;code&gt;pip&lt;/code&gt;，你可以方便地从 Python Package Index (PyPI) 下载和安装第三方库，并自动解决依赖问题。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python</title>
      <link>http://localhost:1313/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/</guid>
      <description>&lt;h1 id=&#34;python基础&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#python%e5%9f%ba%e7%a1%80&#34;&gt;&lt;/a&gt;&#xA;Python基础&#xA;&lt;/h1&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;[!IMPORTANT]&lt;/p&gt;&#xA;&lt;p&gt;Python语言有着严格的缩进模式，同一个Tab表示在同一个作用域（和Makefile同样的Tab控制）&lt;/p&gt;&#xA;&lt;p&gt;在Python中的缩进相当于是C语言中的&lt;code&gt;{}&lt;/code&gt;，用于控制作用域&lt;/p&gt;&#xA;&lt;p&gt;注意缩进❗❗❗❗❗❗&lt;/p&gt;&#xA;&lt;p&gt;否则会导致程序报错或者出现很多奇奇怪怪的bug🙉&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;数据类型&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%95%b0%e6%8d%ae%e7%b1%bb%e5%9e%8b&#34;&gt;&lt;/a&gt;&#xA;数据类型&#xA;&lt;/h2&gt;&lt;p&gt;在Python中无需定义变量的数据类型，编译器会自动解析当前定义的变量是什么数据类型。&lt;/p&gt;&#xA;&lt;h3 id=&#34;整数-int&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%95%b4%e6%95%b0-int&#34;&gt;&lt;/a&gt;&#xA;整数 (int)&#xA;&lt;/h3&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;定义&lt;/strong&gt;：表示整数值。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;基本用法&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 定义整数&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;age&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;25&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 输出：25&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 基本运算&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;age&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 输出：30&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;浮点数-float&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%b5%ae%e7%82%b9%e6%95%b0-float&#34;&gt;&lt;/a&gt;&#xA;浮点数 (float)&#xA;&lt;/h3&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;定义&lt;/strong&gt;：表示带小数的数字。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;基本用法&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 定义浮点数&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;temperature&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;36.6&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;temperature&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 输出：36.6&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 基本运算&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;area&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;3.14&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;area&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 输出：78.5&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;字符串-str&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%ad%97%e7%ac%a6%e4%b8%b2-str&#34;&gt;&lt;/a&gt;&#xA;字符串 (str)&#xA;&lt;/h3&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;定义&lt;/strong&gt;：表示文本数据，使用单引号或双引号包裹。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;基本用法&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 定义字符串&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Alice&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 输出：Alice&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 字符串拼接&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;greeting&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello, &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;!&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;greeting&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 输出：Hello, Alice!&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 字符串方法&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;upper_name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;upper&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;upper_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 输出：ALICE&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;布尔值-bool&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%b8%83%e5%b0%94%e5%80%bc-bool&#34;&gt;&lt;/a&gt;&#xA;布尔值 (bool)&#xA;&lt;/h3&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;定义&lt;/strong&gt;：表示真或假，只有两个值：&lt;code&gt;True&lt;/code&gt; 和 &lt;code&gt;False&lt;/code&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>QAC</title>
      <link>http://localhost:1313/post/%E8%BD%AF%E4%BB%B6%E5%8F%8A%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/qac/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E8%BD%AF%E4%BB%B6%E5%8F%8A%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/qac/</guid>
      <description>&lt;h1 id=&#34;相关基础知识&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%9b%b8%e5%85%b3%e5%9f%ba%e7%a1%80%e7%9f%a5%e8%af%86&#34;&gt;&lt;/a&gt;&#xA;相关基础知识&#xA;&lt;/h1&gt;&lt;h2 id=&#34;评估标准&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e8%af%84%e4%bc%b0%e6%a0%87%e5%87%86&#34;&gt;&lt;/a&gt;&#xA;评估标准&#xA;&lt;/h2&gt;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;缺陷数量&lt;/strong&gt;：报告中列出的所有缺陷和警告的数量。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;缺陷严重性&lt;/strong&gt;：缺陷的等级分类（如严重、中等、轻微），帮助优先处理高风险问题。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;代码复杂度&lt;/strong&gt;：圈复杂度等度量，反映代码的复杂程度。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;代码规范违例&lt;/strong&gt;：违反编码标准和最佳实践的数量和类型。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;代码覆盖率&lt;/strong&gt;：静态分析所覆盖的代码比例，评估代码的全面性。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;重复代码&lt;/strong&gt;：检测到的重复代码块的数量。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;安全漏洞&lt;/strong&gt;：识别的安全问题和潜在的漏洞。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;性能警告&lt;/strong&gt;：关于性能问题的警告和建议。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;规则&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e8%a7%84%e5%88%99&#34;&gt;&lt;/a&gt;&#xA;规则&#xA;&lt;/h2&gt;&lt;p&gt;在 &lt;strong&gt;QAC&lt;/strong&gt;（Quality Assurance C）中，&lt;strong&gt;规则&lt;/strong&gt; 是一组编码标准或检查项，用于静态代码分析。它们的主要作用是自动检测源代码中的潜在错误、不符合编码规范的地方，以及可能导致软件漏洞或性能问题的代码。具体来说，QAC中的规则主要有以下几个作用：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;编码标准一致性&lt;/strong&gt;：确保代码符合编码标准（例如MISRA-C标准），提升代码的一致性和可维护性。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;错误检测&lt;/strong&gt;：帮助识别常见的编程错误，如空指针引用、数组越界、未初始化的变量等。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;代码质量提高&lt;/strong&gt;：通过检测潜在的错误和坏习惯，提升代码的整体质量和可读性。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;安全性增强&lt;/strong&gt;：识别可能导致安全漏洞的代码，如未正确处理用户输入、内存泄漏等。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;减少调试时间&lt;/strong&gt;：在代码早期阶段检测并修复问题，减少后期调试和修复的工作量。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;符合行业规范&lt;/strong&gt;：某些行业（如汽车、医疗设备）对软件安全性和可靠性要求很高，QAC的规则有助于确保代码符合这些行业规范。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;检测原理&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%a3%80%e6%b5%8b%e5%8e%9f%e7%90%86&#34;&gt;&lt;/a&gt;&#xA;检测原理&#xA;&lt;/h2&gt;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;代码解析（Parsing）&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;词法分析和语法分析&lt;/strong&gt;：QAC 首先对源代码进行词法分析，将代码分解成标记（tokens），然后进行语法分析，构建语法树（Abstract Syntax Tree, AST）。这一步确保代码的语法结构正确，并为后续的分析提供基础。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;语义分析&lt;/strong&gt;：在语法树基础上，QAC 进行语义分析，理解代码的实际含义，包括变量类型、作用域、函数调用等信息。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;规则应用（Rule Application）&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;预定义规则&lt;/strong&gt;：QAC 内置了大量的规则，这些规则可能基于行业标准（如 MISRA-C、CERT C）或最佳编码实践。这些规则涵盖了代码风格、潜在错误、安全漏洞等多个方面。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;自定义规则&lt;/strong&gt;：用户可以根据项目需求定义自有规则，进一步细化代码检查标准。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;规则匹配&lt;/strong&gt;：QAC 将解析后的代码与这些规则进行匹配，识别出不符合规范或存在潜在问题的代码片段。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;控制流和数据流分析（Control Flow and Data Flow Analysis）&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;控制流分析&lt;/strong&gt;：QAC 分析代码中的控制结构（如条件分支、循环、跳转等），识别复杂或不合理的控制流模式，预防死循环、未定义行为等问题。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;数据流分析&lt;/strong&gt;：通过追踪变量的定义、使用和传递，QAC 检测未初始化变量、变量覆盖、内存泄漏、数据竞争等问题。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;抽象语法树（AST）和中间表示（Intermediate Representation）&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;AST 构建&lt;/strong&gt;：通过构建 AST，QAC 能够深入理解代码的结构和层次关系，支持复杂的代码模式识别。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;中间表示&lt;/strong&gt;：QAC 可能将代码转换为中间表示，以便进行更高效和全面的分析，如路径分析、依赖分析等。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;错误检测与报告（Error Detection and Reporting）&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;错误分类&lt;/strong&gt;：QAC 将检测到的问题按照严重性、类型进行分类，如警告、错误、建议等。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;详细报告&lt;/strong&gt;：生成详细的报告，指出问题所在的具体位置（文件、行号）、问题描述以及可能的解决建议，帮助开发人员快速定位和修复问题。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;集成与自动化（Integration and Automation）&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>RTC</title>
      <link>http://localhost:1313/post/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E5%A4%96%E8%AE%BE%E7%BB%84%E4%BB%B6/rtc/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E5%A4%96%E8%AE%BE%E7%BB%84%E4%BB%B6/rtc/</guid>
      <description>&lt;h1 id=&#34;时间戳&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%97%b6%e9%97%b4%e6%88%b3&#34;&gt;&lt;/a&gt;&#xA;时间戳&#xA;&lt;/h1&gt;&lt;h2 id=&#34;概述&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%a6%82%e8%bf%b0&#34;&gt;&lt;/a&gt;&#xA;概述&#xA;&lt;/h2&gt;&lt;p&gt;Unix时间戳(Unix Timestamp)定义为从UTC/GMT的1970年1月1日0时0分0秒开始所经过的秒数，不考虑闰秒&lt;/p&gt;&#xA;&lt;p&gt;时间戳存储在一个秒计数器中，秒计数器为32位/64位的整型变量&lt;/p&gt;&#xA;&lt;p&gt;世界上所有时区的秒计数器相同，不同时区通过添加偏移来得到当地时间&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/09/7_17_9_13_202409071709780.png&#34; alt=&#34;时间线&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;gmt和utc&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#gmt%e5%92%8cutc&#34;&gt;&lt;/a&gt;&#xA;GMT和UTC&#xA;&lt;/h2&gt;&lt;p&gt;GMT(Greenwich Mean Time)格林尼治标准时间是一种以地球自转为基础的时间计量系统。它将地球自转一周的时间间隔等分为24小时，以此确定计时标准&lt;/p&gt;&#xA;&lt;p&gt;UTC(Universal Time Coordinated)协调世界时是一种以原子钟为基础的时间计量系统。它规定铯133原子基态的两个超精细能级间在零磁场下跃迁辐射9,192,631,770周所持续的时间为1秒。当原子钟计时一天的时间与地球自转一周的时间相差超过0.9秒时，UTC会执行闰秒来保证其计时与地球自转的协调一致&lt;/p&gt;&#xA;&lt;h2 id=&#34;时间戳转换&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%97%b6%e9%97%b4%e6%88%b3%e8%bd%ac%e6%8d%a2&#34;&gt;&lt;/a&gt;&#xA;时间戳转换&#xA;&lt;/h2&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;strong&gt;函数&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;作用&lt;/strong&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;time_t time(time_t*);&lt;/td&gt;&#xA;          &lt;td&gt;获取系统时钟&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;struct tm* gmtime(const time_t*);&lt;/td&gt;&#xA;          &lt;td&gt;秒计数器转换为日期时间（格林尼治时间）&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;struct tm* localtime(const time_t*);&lt;/td&gt;&#xA;          &lt;td&gt;秒计数器转换为日期时间（当地时间）&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;time_t mktime(struct tm*);&lt;/td&gt;&#xA;          &lt;td&gt;日期时间转换为秒计数器（当地时间）&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;char* ctime(const time_t*);&lt;/td&gt;&#xA;          &lt;td&gt;秒计数器转换为字符串（默认格式）&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;char* asctime(const struct tm*);&lt;/td&gt;&#xA;          &lt;td&gt;日期时间转换为字符串（默认格式）&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;size_t strftime(char*, size_t, const char*, const struct tm*);&lt;/td&gt;&#xA;          &lt;td&gt;日期时间转换为字符串（自定义格式）&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!TIP]&lt;/p&gt;&#xA;&lt;p&gt;需要引入time.h才可以使用上述函数&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/09/7_17_13_42_202409071713702.png&#34; alt=&#34;时间戳转换&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;实验：时间戳转换&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt;&lt;span class=&#34;cpf&#34;&gt;&amp;lt;time.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;time_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;time_cnt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;//秒计数器&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tm&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;time_date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;//日期时间数据类型&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;time_str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;//字符串数据类型&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;time_cnt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;//这里的time_cnt实际上就是一个长整秒，int64类型的&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nf&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;time_cnt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;//和上面的代码作用一样&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;time_date&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;gmtime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;time_cnt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;//加上*就可以取结构体的内容，将长整秒转换为伦敦时间，也就是格林尼治时间&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;time_date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tm_year&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1900&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;//由于时间的基准是1900年，所以需要加上1900&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;time_date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tm_mon&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;time_date&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;localtime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;time_cnt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;//转换长整秒为当地时间，该函数会将时间转换为当地时间&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;time_cnt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;mktime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;time_date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;//是转换的逆过程，也就是将日期时间转换为长整秒&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;time_str&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;ctime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;time_cnt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;//将长整秒转换为字符串&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;time_str&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;asctime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;time_date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;//将数据类型转换为字符串类型&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;strftime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%H-%M-%S&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;time_date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;//类似于printf函数，将数据类型字符串化，可以自定义输出&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;rtc&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#rtc&#34;&gt;&lt;/a&gt;&#xA;RTC&#xA;&lt;/h1&gt;&lt;p&gt;实时时钟(Real Time Clock,RTC),本质是一个计数器，计数频率常为秒，专门用来记录时间。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Rust</title>
      <link>http://localhost:1313/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/rust/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/rust/</guid>
      <description>&lt;h1 id=&#34;参考链接&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%8f%82%e8%80%83%e9%93%be%e6%8e%a5&#34;&gt;&lt;/a&gt;&#xA;参考链接&#xA;&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://course.rs/into-rust.html&#34;&gt;进入 Rust 编程世界 - Rust语言圣经(Rust Course)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;编程环境：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Vscode&lt;/li&gt;&#xA;&lt;li&gt;rust（vscode插件）&lt;/li&gt;&#xA;&lt;li&gt;rust-analyzer（vscode插件，用于rust）&lt;/li&gt;&#xA;&lt;li&gt;Even Better TOML（vscode插件，用于toml文件）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;cargo&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#cargo&#34;&gt;&lt;/a&gt;&#xA;Cargo&#xA;&lt;/h1&gt;&lt;p&gt;&lt;code&gt;cargo&lt;/code&gt; 提供了一系列的工具，从项目的建立、构建到测试、运行直至部署，为 Rust 项目的管理提供尽可能完整的手段。同时，与 Rust 语言及其编译器 &lt;code&gt;rustc&lt;/code&gt; 紧密结合，可以说用了后就忘不掉，如同初恋般的感觉。&lt;/p&gt;&#xA;&lt;p&gt;使用cargo创建一个项目&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cargo new world_hello&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; world_hello&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上述命令创建了一个cargo项目，该项目由cargo管理，创建好的项目结构如下&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ tree&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── .git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── .gitignore&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── Cargo.toml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;└── src&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    └── main.rs&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;运行&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e8%bf%90%e8%a1%8c&#34;&gt;&lt;/a&gt;&#xA;运行&#xA;&lt;/h2&gt;&lt;p&gt;运行cargo程序有两种方法&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;cargo run&lt;/li&gt;&#xA;&lt;li&gt;手动运行&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;code&gt;cargo run&lt;/code&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cargo run&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   Compiling world_hello v0.1.0 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;/Users/sunfei/development/rust/world_hello&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Finished dev &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;unoptimized + debuginfo&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; target&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; in 0.43s&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     Running &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;target/debug/world_hello&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Hello, world!&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;手动运行&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Shell</title>
      <link>http://localhost:1313/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/shell/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/shell/</guid>
      <description>&lt;h1 id=&#34;参考链接&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%8f%82%e8%80%83%e9%93%be%e6%8e%a5&#34;&gt;&lt;/a&gt;&#xA;参考链接&#xA;&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://wizardforcel.gitbooks.io/vbird-linux-basic-4e/content/86.html&#34;&gt;第十章、认识与学习BASH | 鸟哥的 Linux 私房菜：基础学习篇 第四版 (gitbooks.io)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://missing-semester-cn.github.io/2020/course-shell/&#34;&gt;课程概览与 shell · the missing semester of your cs education (missing-semester-cn.github.io)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://wizardforcel.gitbooks.io/vbird-linux-basic-4e/content/104.html&#34;&gt;第十二章、学习 Shell Scripts | 鸟哥的 Linux 私房菜：基础学习篇 第四版 (gitbooks.io)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;bash&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#bash&#34;&gt;&lt;/a&gt;&#xA;BASH&#xA;&lt;/h1&gt;</description>
    </item>
    <item>
      <title>Simulink</title>
      <link>http://localhost:1313/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/simulink/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/simulink/</guid>
      <description>&lt;h1 id=&#34;参考链接&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%8f%82%e8%80%83%e9%93%be%e6%8e%a5&#34;&gt;&lt;/a&gt;&#xA;参考链接&#xA;&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/simulink/getting-started-with-simulink.html?s_tid=CRUX_lftnav&#34;&gt;Simulink 快速入门 - MathWorks 中国&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;simulink&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#simulink&#34;&gt;&lt;/a&gt;&#xA;Simulink&#xA;&lt;/h1&gt;&lt;p&gt;Simulink 是 MATLAB 环境中的一个扩展工具，用于多领域动态系统的建模、仿真和分析。它提供了一个图形化的用户界面，使用户能够通过拖放各种模块和连接它们来构建模型。Simulink 特别适用于以下几个领域：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;控制系统设计&lt;/strong&gt;：用户可以设计和仿真复杂的控制系统，包括 PID 控制、模糊控制、鲁棒控制等。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;信号处理&lt;/strong&gt;：Simulink 提供了广泛的信号处理工具箱，可以用于滤波、调制、解调等操作。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;通信系统&lt;/strong&gt;：可以建模和仿真通信系统，包括发射机、接收机、调制解调器等。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;物理系统建模&lt;/strong&gt;：可以建模机械、电气、热力、液压等物理系统，通过物理建模工具箱（如 Simscape）进行仿真。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;嵌入式系统&lt;/strong&gt;：可以设计嵌入式控制器，生成 C/C++ 代码，并将其部署到嵌入式硬件上。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Simulink 的主要功能包括：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;图形化建模&lt;/strong&gt;：通过图形化界面，用户可以拖放和连接各种模块来构建系统模型。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;仿真&lt;/strong&gt;：可以对构建的模型进行仿真，分析系统的动态行为。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;模块化设计&lt;/strong&gt;：支持模块化设计，可以将复杂系统分解为多个子系统，进行分层次建模。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;自动代码生成&lt;/strong&gt;：可以自动生成 C、C++ 或 HDL 代码，方便在嵌入式系统中实现和部署。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;与 MATLAB 的集成&lt;/strong&gt;：Simulink 和 MATLAB 无缝集成，可以使用 MATLAB 脚本控制 Simulink 仿真，或者在 Simulink 模型中调用 MATLAB 函数。。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h1 id=&#34;simulink-模块图&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#simulink-%e6%a8%a1%e5%9d%97%e5%9b%be&#34;&gt;&lt;/a&gt;&#xA;Simulink 模块图&#xA;&lt;/h1&gt;&lt;p&gt;Simulink® 是动态系统的图形建模和仿真环境。可以创建模块图，用模块表示系统的各个组成部分。模块可以表示物理组件、小型系统或函数。输入/输出关系则完整描述了模块特征。请思考下面这些示例：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;一个水龙头往一个水桶里注入水 - 水以一定的流速进入水桶，水桶变重。模块可以表示水桶，水的流速为输入，水桶的重量为输出。&lt;/li&gt;&#xA;&lt;li&gt;您用扩音器传递声音 - 扩音器一端产生的声音在另一端被放大。扩音器是模块，输入是声源的声波，输出是您听到的声波。&lt;/li&gt;&#xA;&lt;li&gt;您推动购物车使它移动 - 购物车是模块，您施加的力是输入，购物车的位置是输出。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;只有定义了输入和输出，模块的定义才算完成，并且此模型定义任务需与建模目的相关。例如，如果建模目的不涉及购物车的位置，则会自然选择购物车的速度作为输出。&lt;/p&gt;&#xA;&lt;p&gt;Simulink 提供了一些模块库，它们是按功能分组的模块集合。例如，要对以常量倍数放大输入的扩音器进行建模，可以使用 Math Operations 库中的 Gain 模块。&lt;/p&gt;</description>
    </item>
    <item>
      <title>SPI</title>
      <link>http://localhost:1313/post/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/spi/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/spi/</guid>
      <description>&lt;h1 id=&#34;参考链接&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%8f%82%e8%80%83%e9%93%be%e6%8e%a5&#34;&gt;&lt;/a&gt;&#xA;参考链接&#xA;&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/290620901&#34;&gt;SPI协议详解（图文并茂+超详细） - 知乎 (zhihu.com)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;串口&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e4%b8%b2%e5%8f%a3&#34;&gt;&lt;/a&gt;&#xA;串口&#xA;&lt;/h1&gt;&lt;p&gt;因为UART没有时钟信号，无法控制何时发送数据，也无法保证双方按照完全相同的速度接收数据。因此，双方以不同的速度进行数据接收和发送，就会出现问题。&lt;/p&gt;&#xA;&lt;p&gt;如果要解决这个问题，UART为每个字节添加额外的起始位和停止位，以帮助接收器在数据到达时进行同步；&lt;/p&gt;&#xA;&lt;p&gt;双方还必须事先就传输速度达成共识（设置相同的波特率，例如每秒9600位）。&lt;/p&gt;&#xA;&lt;p&gt;传输速率如果有微小差异不是问题，因为接收器会在每个字节的开头重新同步。相应的协议如下图所示：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://pic4.zhimg.com/80/v2-39dd6c1224d0e3fa0144e90519f4745d_720w.webp&#34; alt=&#34;串口传输&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!NOTE]&lt;/p&gt;&#xA;&lt;p&gt;图中的11001010不等于0x53。这是因为串口协议通常会首先发送最低有效位，因此最小位在最左边LSB。低四位字节实际上是0011 = 0x3，高四位字节是0101 = 0x5。&lt;/p&gt;&#xA;&lt;p&gt;串口先发送低位，后发送高位&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;异步串行工作得很好，但是在每个字节发送的时候都需要额外的起始位和停止位以及在发送和接收数据所需的复杂硬件方面都有很多开销。&lt;/p&gt;&#xA;&lt;p&gt;不难发现，如果接收端和发送端设置的速度都不一致，那么接收到的数据将是垃圾（乱码）。&lt;/p&gt;&#xA;&lt;p&gt;因为UART没有时钟信号，无法控制何时发送数据，也无法保证双方按照完全相同的速度接收数据。因此，双方以不同的速度进行数据接收和发送，就会出现问题。&lt;/p&gt;&#xA;&lt;p&gt;于是我们想有没有更好一点的串行通讯方式；相比较于UART，SPI的工作方式略有不同。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;SPI是一个同步的数据总线，也就是说它是用单独的数据线和一个单独的时钟信号来保证发送端和接收端的完美同步。&lt;/li&gt;&#xA;&lt;li&gt;时钟是一个振荡信号，它告诉接收端在确切的时机对数据线上的信号进行采样。&lt;/li&gt;&#xA;&lt;li&gt;产生时钟的一侧称为主机，另一侧称为从机。总是只有一个主机（一般来说可以是微控制器/MCU），但是可以有多个从机（后面详细介绍）；&lt;/li&gt;&#xA;&lt;li&gt;数据的采集时机可能是时钟信号的上升沿（从低到高）或下降沿（从高到低）。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h1 id=&#34;介绍&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e4%bb%8b%e7%bb%8d&#34;&gt;&lt;/a&gt;&#xA;介绍&#xA;&lt;/h1&gt;&lt;p&gt;SPI:串行外设设备接口(Serial Peripheral Interface),是一种高速的、全双工、同步的通信总线。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;功能说明&lt;/th&gt;&#xA;          &lt;th&gt;SPI总线&lt;/th&gt;&#xA;          &lt;th&gt;IIC总线&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;通信方式&lt;/td&gt;&#xA;          &lt;td&gt;同步串行全双工&lt;/td&gt;&#xA;          &lt;td&gt;同步串行半双工&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;总线接口&lt;/td&gt;&#xA;          &lt;td&gt;MOSI、MISO、SCL、CS&lt;/td&gt;&#xA;          &lt;td&gt;SDA、SCL&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;拓扑结构&lt;/td&gt;&#xA;          &lt;td&gt;一主多从/一主一从&lt;/td&gt;&#xA;          &lt;td&gt;多主从&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;从机选择&lt;/td&gt;&#xA;          &lt;td&gt;片选引脚选择&lt;/td&gt;&#xA;          &lt;td&gt;SDA上设备地址片选&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;通信速率&lt;/td&gt;&#xA;          &lt;td&gt;般50MHz以下&lt;/td&gt;&#xA;          &lt;td&gt;100kHz、400kHz、3.4MHz&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;数据格式&lt;/td&gt;&#xA;          &lt;td&gt;8位/16位&lt;/td&gt;&#xA;          &lt;td&gt;8位&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;传输顺序&lt;/td&gt;&#xA;          &lt;td&gt;MSB/LSB&lt;/td&gt;&#xA;          &lt;td&gt;MSB&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;SP接口主要应用在存储芯片、AD转换器以及LCD中。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/09/14_13_46_56_202409141346019.png&#34; alt=&#34;SPI组成结构&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!IMPORTANT]&lt;/p&gt;&#xA;&lt;p&gt;输出引脚配置为推挽输出，输入引脚配置为浮空或者上拉输入，推挽输出高低电平都有着很强的驱动能力，和i2c不同，i2c电平下降快，上升缓慢，而SPI电平不仅上升快，下降也快&lt;/p&gt;&#xA;&lt;p&gt;主机一个输入引脚，这个引脚将会接收来自多个从机传输的数据，这势必会产生冲突，所以SPI规定，当从机未被选中时，MISO引脚必须切换为高阻态（相当于引脚断开，不输出任何电平）&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;原理&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%8e%9f%e7%90%86&#34;&gt;&lt;/a&gt;&#xA;原理&#xA;&lt;/h2&gt;&lt;p&gt;基本收发电路就是一个==移位模型==&lt;/p&gt;&#xA;&lt;p&gt;SPI主机中有一个8位移位寄存器，SPI从机中也有一个8位的移位寄存器，移位寄存器有一个时钟输入端，SPI一般都是==高位==先行的，每来一个时钟，移位寄存器都会向左进行移位，从机中的移位寄存器也是同理。移位寄存器的时钟源由主机提供（波特率发生器），它产生的时钟驱动主机的移位寄存器进行移位，同时，这个时钟也通过SCK引脚进行输出给到从机的移位寄存器中，主机移位寄存器左边移出去的数据，通过MOSI输入到从机移位寄存器的右边，从机移位寄存器左边移出去的数据，通过MISO输入到主机移位寄存器的右边&lt;/p&gt;&#xA;&lt;p&gt;如果是主机只是发送（只是接收），那么还是和上面同时收发一样，只是从机会随便发送一串数据（一般会给0xff或0x00），只要将数据置换出来即可，主机不会关注接收到的数据&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/09/14_13_52_58_202409141352788.png&#34; alt=&#34;SPI移位的工作原理&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Stateflow</title>
      <link>http://localhost:1313/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/stateflow/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/stateflow/</guid>
      <description>&lt;h1 id=&#34;参考链接&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%8f%82%e8%80%83%e9%93%be%e6%8e%a5&#34;&gt;&lt;/a&gt;&#xA;参考链接&#xA;&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://ww2.mathworks.cn/help/stateflow/getting-started.html&#34;&gt;Stateflow 快速入门 - MathWorks 中国&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;stateflow简介&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#stateflow%e7%ae%80%e4%bb%8b&#34;&gt;&lt;/a&gt;&#xA;Stateflow简介&#xA;&lt;/h1&gt;&lt;p&gt;Stateflow是MATLAB和Simulink中的一个工具，用于设计和实现状态机和流程图。它非常适合用于建模逻辑系统，如控制逻辑、任务调度和事件驱动系统。Stateflow通过图形化的方式使复杂的逻辑系统更容易理解和实现。以下是一些关于Stateflow的基本概念和操作指南：&lt;/p&gt;&#xA;&lt;h1 id=&#34;stateflow基本概念&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#stateflow%e5%9f%ba%e6%9c%ac%e6%a6%82%e5%bf%b5&#34;&gt;&lt;/a&gt;&#xA;Stateflow基本概念&#xA;&lt;/h1&gt;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;状态（State）&lt;/strong&gt;：&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;表示系统在某一特定时间的情况或条件。每个状态可以包含子状态、图表和动作（如进入和退出动作）。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;转换（Transition）&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;用箭头表示，描述从一个状态到另一个状态的条件。转换可以包含条件、动作和事件。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;事件（Event）&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;触发状态转换的信号。事件可以是外部事件（来自Simulink模型）或内部事件（在Stateflow图表中定义）。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;条件（Condition）&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在方括号内定义的逻辑表达式，用于决定状态转换是否发生。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;动作（Action）&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在状态或转换中定义的操作，可以在进入、退出状态时或在转换时执行。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h1 id=&#34;基本命令&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%9f%ba%e6%9c%ac%e5%91%bd%e4%bb%a4&#34;&gt;&lt;/a&gt;&#xA;基本命令&#xA;&lt;/h1&gt;&lt;p&gt;Stateflow是MATLAB和Simulink中的一个工具，用于设计和模拟状态机和逻辑系统。以下是一些基本的Stateflow命令和操作：&lt;/p&gt;&#xA;&lt;h2 id=&#34;创建和编辑图表&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%88%9b%e5%bb%ba%e5%92%8c%e7%bc%96%e8%be%91%e5%9b%be%e8%a1%a8&#34;&gt;&lt;/a&gt;&#xA;创建和编辑图表&#xA;&lt;/h2&gt;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;创建Stateflow图表&lt;/strong&gt;:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-matlab&#34; data-lang=&#34;matlab&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;sfnew&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;打开现有图表&lt;/strong&gt;:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-matlab&#34; data-lang=&#34;matlab&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;sfopen&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;保存图表&lt;/strong&gt;:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-matlab&#34; data-lang=&#34;matlab&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;sfsave&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;添加状态和转换&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%b7%bb%e5%8a%a0%e7%8a%b6%e6%80%81%e5%92%8c%e8%bd%ac%e6%8d%a2&#34;&gt;&lt;/a&gt;&#xA;添加状态和转换&#xA;&lt;/h2&gt;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;添加状态&lt;/strong&gt;:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在图表中右键点击并选择“Add State”，或者使用工具栏中的“Add State”按钮。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;添加转换&lt;/strong&gt;:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在两个状态之间绘制一条线，或者右键点击一个状态并选择“Add Transition”。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;设置状态属性&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e8%ae%be%e7%bd%ae%e7%8a%b6%e6%80%81%e5%b1%9e%e6%80%a7&#34;&gt;&lt;/a&gt;&#xA;设置状态属性&#xA;&lt;/h2&gt;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;设置状态名称&lt;/strong&gt;:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;双击状态，并在对话框中输入名称。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;设置进入动作（Entry）&lt;/strong&gt;:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;双击状态，选择“Actions”选项卡，并在“Entry”框中输入代码。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;设置退出动作（Exit）&lt;/strong&gt;:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;双击状态，选择“Actions”选项卡，并在“Exit”框中输入代码。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;设置转换条件&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e8%ae%be%e7%bd%ae%e8%bd%ac%e6%8d%a2%e6%9d%a1%e4%bb%b6&#34;&gt;&lt;/a&gt;&#xA;设置转换条件&#xA;&lt;/h2&gt;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;添加条件&lt;/strong&gt;:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;双击转换线，并在对话框中输入条件，如 &lt;code&gt;[condition]&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;添加动作&lt;/strong&gt;:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在条件后面添加动作，如 &lt;code&gt;[condition]{action}&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;仿真和调试&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e4%bb%bf%e7%9c%9f%e5%92%8c%e8%b0%83%e8%af%95&#34;&gt;&lt;/a&gt;&#xA;仿真和调试&#xA;&lt;/h2&gt;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;运行仿真&lt;/strong&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tessy</title>
      <link>http://localhost:1313/post/%E8%BD%AF%E4%BB%B6%E5%8F%8A%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/tessy/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E8%BD%AF%E4%BB%B6%E5%8F%8A%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/tessy/</guid>
      <description>&lt;h1 id=&#34;如何评判&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%a6%82%e4%bd%95%e8%af%84%e5%88%a4&#34;&gt;&lt;/a&gt;&#xA;如何评判&#xA;&lt;/h1&gt;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;代码覆盖率&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;语句覆盖率（Statement Coverage）&lt;/strong&gt;：检查是否每个代码语句都被执行过。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;分支覆盖率（Branch Coverage）&lt;/strong&gt;：测试代码中每个条件的所有分支是否都被执行。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;路径覆盖率（Path Coverage）&lt;/strong&gt;：所有可能的执行路径是否都被测试。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;边界值分析&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;测试输入参数和输出值的边界，确保程序在极端条件下（如最大值、最小值、空值）能够正常运行。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;缺陷率（Defect Rate）&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;代码中的缺陷数量与代码总行数或模块的比例。通过动态测试发现的缺陷越少，代码质量通常越高。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;执行时间与性能（Execution Time and Performance）&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;测试代码在不同输入情况下的运行时间，确保其满足性能要求，特别是在嵌入式系统中。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;内存使用率（Memory Usage）&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;测试代码的内存使用情况，确保在不同输入条件下不会发生内存溢出或过度使用内存。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;代码复杂度（Cyclomatic Complexity）&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;动态测试可以帮助你识别高复杂度的代码部分，复杂度越高的代码更容易出错，因此测试应重点关注这些区域。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;错误检测与修复率（Defect Detection and Fix Rate）&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;通过动态测试发现并修复的错误数量与整体代码中发现错误的比率，修复率越高，代码质量越好。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;功能正确性（Functional Correctness）&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;确保代码的功能行为与预期一致，动态测试会运行各种输入并验证输出结果是否正确。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h1 id=&#34;术语表&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%9c%af%e8%af%ad%e8%a1%a8&#34;&gt;&lt;/a&gt;&#xA;术语表&#xA;&lt;/h1&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;strong&gt;缩写&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;全称&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;具体含义&lt;/strong&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;TO&lt;/td&gt;&#xA;          &lt;td&gt;Test Object&lt;/td&gt;&#xA;          &lt;td&gt;被测试的代码单元，通常是函数或模块，TESSY 对其进行测试。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;TC&lt;/td&gt;&#xA;          &lt;td&gt;Test Case&lt;/td&gt;&#xA;          &lt;td&gt;测试用例，指在特定条件下对某个测试对象执行的具体测试，包含输入、预期输出和结果判定。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;TF&lt;/td&gt;&#xA;          &lt;td&gt;Test Frame&lt;/td&gt;&#xA;          &lt;td&gt;测试执行环境，包含测试所需的输入数据、预期结果及其他资源和配置。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;TS&lt;/td&gt;&#xA;          &lt;td&gt;Test Step&lt;/td&gt;&#xA;          &lt;td&gt;测试过程中执行的小步骤或操作，用于分步完成复杂的测试任务。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;TR&lt;/td&gt;&#xA;          &lt;td&gt;Test Report&lt;/td&gt;&#xA;          &lt;td&gt;测试结果报告，包含执行情况、测试结果和代码覆盖率等详细信息。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;TD&lt;/td&gt;&#xA;          &lt;td&gt;Test Data&lt;/td&gt;&#xA;          &lt;td&gt;输入到测试对象中的数据集，用于验证功能是否符合预期。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;TSP&lt;/td&gt;&#xA;          &lt;td&gt;Test Specification&lt;/td&gt;&#xA;          &lt;td&gt;测试说明文件，描述测试对象、测试条件、输入输出数据和预期结果等。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Stub&lt;/td&gt;&#xA;          &lt;td&gt;Stub&lt;/td&gt;&#xA;          &lt;td&gt;用于替代未实现或不适合在测试中执行的功能，模拟系统中某部分的行为。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Driver&lt;/td&gt;&#xA;          &lt;td&gt;Driver&lt;/td&gt;&#xA;          &lt;td&gt;测试驱动程序，调用测试对象并提供必要的输入，常用于嵌入式系统测试。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Cov&lt;/td&gt;&#xA;          &lt;td&gt;Test Coverage&lt;/td&gt;&#xA;          &lt;td&gt;测试覆盖率，指测试执行过程中涉及的代码行数或分支数。常见指标有语句覆盖率和分支覆盖率。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;TH&lt;/td&gt;&#xA;          &lt;td&gt;Test Harness&lt;/td&gt;&#xA;          &lt;td&gt;测试框架或工具，用于自动化测试，包括驱动、桩和测试数据。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;RT&lt;/td&gt;&#xA;          &lt;td&gt;Regression Test&lt;/td&gt;&#xA;          &lt;td&gt;回归测试，针对修改后的代码进行，确保改动未引入新错误。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;CA&lt;/td&gt;&#xA;          &lt;td&gt;Code Access&lt;/td&gt;&#xA;          &lt;td&gt;代码通过&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;CR&lt;/td&gt;&#xA;          &lt;td&gt;Coverage Review&lt;/td&gt;&#xA;          &lt;td&gt;覆盖评审&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;CV&lt;/td&gt;&#xA;          &lt;td&gt;Coverage Viewer&lt;/td&gt;&#xA;          &lt;td&gt;覆盖视图&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;CC&lt;/td&gt;&#xA;          &lt;td&gt;Code Complexity&lt;/td&gt;&#xA;          &lt;td&gt;代码复杂度&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;单元测试&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%8d%95%e5%85%83%e6%b5%8b%e8%af%95&#34;&gt;&lt;/a&gt;&#xA;单元测试&#xA;&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;单元测试&lt;/strong&gt;（Unit Testing）是软件测试中的一种方法，用来验证代码中的&lt;strong&gt;最小可测试单元&lt;/strong&gt;（通常是一个函数、方法或类）的&lt;strong&gt;功能正确性&lt;/strong&gt;。每个单元测试通常只测试代码中的一个小部分，确保其在特定的输入下产生预期的输出。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Timer</title>
      <link>http://localhost:1313/post/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E5%A4%96%E8%AE%BE%E7%BB%84%E4%BB%B6/timer/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E5%A4%96%E8%AE%BE%E7%BB%84%E4%BB%B6/timer/</guid>
      <description>&lt;h1 id=&#34;定时器概述&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%ae%9a%e6%97%b6%e5%99%a8%e6%a6%82%e8%bf%b0&#34;&gt;&lt;/a&gt;&#xA;定时器概述&#xA;&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/07/5_17_26_23_202407051726672.png&#34; alt=&#34;image-20240705172623623&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;定时器分类&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%ae%9a%e6%97%b6%e5%99%a8%e5%88%86%e7%b1%bb&#34;&gt;&lt;/a&gt;&#xA;定时器分类&#xA;&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/07/5_17_26_54_202407051726085.png&#34; alt=&#34;image-20240705172654037&#34;&gt;&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;定时器类型&lt;/th&gt;&#xA;          &lt;th&gt;主要功能&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;基本定时器&lt;/td&gt;&#xA;          &lt;td&gt;没有输入输出通道，常用作时基，即定时功能&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;通用定时器&lt;/td&gt;&#xA;          &lt;td&gt;具有多路独立通道，可用于输入捕获/输出比较，也可用作时基&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;高级定时器&lt;/td&gt;&#xA;          &lt;td&gt;除具备通用定时器所有功能外，还具备带死区控制的互补信号输出、刹车输入等功能（可用于电机控制、数字电源设计等）&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;特性表&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%89%b9%e6%80%a7%e8%a1%a8&#34;&gt;&lt;/a&gt;&#xA;特性表&#xA;&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/07/5_17_28_5_202407051728257.png&#34; alt=&#34;image-20240705172805200&#34;&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;滴答定时器&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%bb%b4%e7%ad%94%e5%ae%9a%e6%97%b6%e5%99%a8&#34;&gt;&lt;/a&gt;&#xA;滴答定时器&#xA;&lt;/h1&gt;&lt;p&gt;&lt;code&gt;SystemCoreClock / 1000&lt;/code&gt; 表示配置 SysTick 定时器以 1ms 的间隔触发中断。具体来说，SysTick 定时器是一个递减计数器，当计数器递减到零时会触发中断，然后自动重新加载初始值继续计数。通过设置初始值为 &lt;code&gt;SystemCoreClock / 1000&lt;/code&gt;，我们可以使 SysTick 定时器每经过 1ms 触发一次中断。&lt;/p&gt;&#xA;&lt;h3 id=&#34;解释&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e8%a7%a3%e9%87%8a&#34;&gt;&lt;/a&gt;&#xA;解释&#xA;&lt;/h3&gt;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;SystemCoreClock&lt;/strong&gt; 是系统核心时钟频率，单位是 Hz。它表示每秒钟内系统时钟的震荡次数。例如，如果 &lt;code&gt;SystemCoreClock&lt;/code&gt; 是 84MHz（84,000,000 Hz），则表示每秒钟系统时钟震荡 84,000,000 次。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;SysTick_Config(SystemCoreClock / 1000)&lt;/strong&gt; 将 SysTick 定时器的重装载值（reload value）设置为 &lt;code&gt;SystemCoreClock / 1000&lt;/code&gt;。重装载值是 SysTick 计数器从这个值开始递减的初始值。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;为什么是 1ms&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;假设 &lt;code&gt;SystemCoreClock&lt;/code&gt; 是 84MHz。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;SystemCoreClock / 1000&lt;/code&gt; 等于 84,000,000 / 1000 = 84,000。&lt;/li&gt;&#xA;&lt;li&gt;这意味着 SysTick 计数器从 84,000 开始递减，每个时钟周期递减一次。&lt;/li&gt;&#xA;&lt;li&gt;因为系统时钟频率是 84MHz，即每秒钟有 84,000,000 个时钟周期，所以每 1,000 个时钟周期表示 1ms（1,000,000 / 1,000 = 1ms）。&lt;/li&gt;&#xA;&lt;li&gt;当 SysTick 计数器从 84,000 递减到 0 时，刚好经过了 1ms，然后触发中断，并重新加载为 84,000 继续递减。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;systick_config-函数&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#systick_config-%e5%87%bd%e6%95%b0&#34;&gt;&lt;/a&gt;&#xA;SysTick_Config 函数&#xA;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;SysTick_Config&lt;/code&gt; 是一个方便的函数，用于配置 SysTick 定时器并启用中断。其原型通常如下：&lt;/p&gt;</description>
    </item>
    <item>
      <title>UDS</title>
      <link>http://localhost:1313/post/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/uds/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/uds/</guid>
      <description>&lt;h1 id=&#34;参考链接&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%8f%82%e8%80%83%e9%93%be%e6%8e%a5&#34;&gt;&lt;/a&gt;&#xA;参考链接&#xA;&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/qq_40309666/article/details/130831416&#34;&gt;《UDS协议从入门到精通（UDS速查手册）》（完结撒花版）_obdonuds-CSDN博客&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;简介&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%ae%80%e4%bb%8b&#34;&gt;&lt;/a&gt;&#xA;简介&#xA;&lt;/h1&gt;&lt;p&gt;UDS (Unified Diagnostic Services) 是一种标准化的==车辆诊断协议==，广泛应用于汽车电子控制单元（ECU）的诊断和维修。它是ISO 14229标准的一部分，主要用于车辆诊断、故障排除、软件更新和其他与车辆维护相关的服务。&lt;/p&gt;&#xA;&lt;h1 id=&#34;uds协议栈&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#uds%e5%8d%8f%e8%ae%ae%e6%a0%88&#34;&gt;&lt;/a&gt;&#xA;UDS协议栈&#xA;&lt;/h1&gt;&lt;p&gt;UDS（Unified Diagnostic Services）协议栈是实现UDS协议功能的分层架构，确保汽车电子控制单元（ECU）与诊断工具之间的通信。UDS协议栈通常包括以下几层：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;应用层（Application Layer）：应用层是UDS协议栈的最高层，负责实现具体的诊断服务。它定义了各种诊断服务，如读取数据、清除故障码、重置ECU等。这一层的功能由==ISO 14229标准==规定。&lt;/li&gt;&#xA;&lt;li&gt;传输层（Transport Layer）：传输层负责数据的分段、重组和流量控制。UDS协议通常使用ISO 15765-2（CAN TP）作为其传输层协议。传输层处理较大的诊断消息，通过将它们分成较小的帧进行传输，然后在接收端重组这些帧。&lt;/li&gt;&#xA;&lt;li&gt;网络层（Network Layer）：网络层管理数据包的寻址和路由。在UDS协议中，网络层通常依赖于ISO 15765-3标准，这一标准定义了如何在CAN网络上传输诊断信息。网络层确保诊断消息能够正确到达目标ECU。&lt;/li&gt;&#xA;&lt;li&gt;数据链路层（Data Link Layer）：数据链路层负责物理网络上的数据帧传输和错误检测。在UDS协议中，数据链路层通常基于CAN（Controller Area Network）协议，由ISO 11898标准定义。数据链路层处理数据帧的发送和接收，并提供基本的错误检测和恢复机制。&lt;/li&gt;&#xA;&lt;li&gt;物理层（Physical Layer）：物理层定义了实际的硬件接口和信号传输特性。在UDS协议中，物理层通常是基于CAN总线的物理层，由ISO 11898标准定义。这一层包括信号的电气特性、连接器和传输介质（如电缆）的规范。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;不同层的数据格式&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e4%b8%8d%e5%90%8c%e5%b1%82%e7%9a%84%e6%95%b0%e6%8d%ae%e6%a0%bc%e5%bc%8f&#34;&gt;&lt;/a&gt;&#xA;不同层的数据格式&#xA;&lt;/h2&gt;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;物理层&lt;/strong&gt;：比特（Bit）：物理层传输的是原始的二进制数据，即 0 和 1 的比特流。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;数据链路层&lt;/strong&gt;：帧（Frame）：数据链路层的 PDU 是帧，它包括数据包的开始和结束标志、帧同步信息、地址信息、控制信息以及实际的数据负载。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;网络层&lt;/strong&gt;：包（Packet）：网络层的 PDU 是包，它包括源和目的地址、生存时间（TTL）、协议类型等信息，以及数据负载。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;传输层&lt;/strong&gt;：段（Segment）：传输层的 PDU 是段，它包括端口号、序列号、确认号、控制位和其他传输控制信息，以及数据负载。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;会话层&lt;/strong&gt;：会话（Session）：会话层的 PDU 通常指的是会话，它负责建立、管理和终止应用程序之间的会话。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;表示层&lt;/strong&gt;：消息（Message）：表示层的 PDU 是消息，它负责数据的表示、安全和压缩。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;应用层&lt;/strong&gt;：数据（Data）：应用层的 PDU 通常指的是数据，它直接与应用程序交互，包括各种 API 调用和协议特定的数据格式。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!TIP]&lt;/p&gt;&#xA;&lt;p&gt;PDU 是 &amp;ldquo;Protocol Data Unit&amp;rdquo; 的缩写，意为协议数据单元。在计算机网络和通信系统中，PDU 是在不同层次之间传输的数据单位。PDU 的概念在 OSI（Open Systems Interconnection）模型中尤为重要，每个层次都会定义自己的 PDU 格式和用途。&lt;/p&gt;</description>
    </item>
    <item>
      <title>USART</title>
      <link>http://localhost:1313/post/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E5%A4%96%E8%AE%BE%E7%BB%84%E4%BB%B6/usart/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E5%A4%96%E8%AE%BE%E7%BB%84%E4%BB%B6/usart/</guid>
      <description>&lt;h1 id=&#34;数据通信基础&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%95%b0%e6%8d%ae%e9%80%9a%e4%bf%a1%e5%9f%ba%e7%a1%80&#34;&gt;&lt;/a&gt;&#xA;数据通信基础&#xA;&lt;/h1&gt;&lt;h2 id=&#34;串行并行通信&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e4%b8%b2%e8%a1%8c%e5%b9%b6%e8%a1%8c%e9%80%9a%e4%bf%a1&#34;&gt;&lt;/a&gt;&#xA;串行/并行通信&#xA;&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/07/9_11_49_45_202407091149342.png&#34; alt=&#34;image-20240709114945281&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;单工半双工全双工通信&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%8d%95%e5%b7%a5%e5%8d%8a%e5%8f%8c%e5%b7%a5%e5%85%a8%e5%8f%8c%e5%b7%a5%e9%80%9a%e4%bf%a1&#34;&gt;&lt;/a&gt;&#xA;单工/半双工/全双工通信&#xA;&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/07/9_11_50_29_202407091150652.png&#34; alt=&#34;image-20240709115029566&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;同步异步通信&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%90%8c%e6%ad%a5%e5%bc%82%e6%ad%a5%e9%80%9a%e4%bf%a1&#34;&gt;&lt;/a&gt;&#xA;同步/异步通信&#xA;&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/07/9_11_50_47_202407091150120.png&#34; alt=&#34;image-20240709115047069&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;波特率&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%b3%a2%e7%89%b9%e7%8e%87&#34;&gt;&lt;/a&gt;&#xA;波特率&#xA;&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/07/9_11_51_1_202407091151890.png&#34; alt=&#34;image-20240709115101824&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;常见通信接口&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%b8%b8%e8%a7%81%e9%80%9a%e4%bf%a1%e6%8e%a5%e5%8f%a3&#34;&gt;&lt;/a&gt;&#xA;常见通信接口&#xA;&lt;/h2&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;strong&gt;名称&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;引脚&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;双工&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;时钟&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;电平&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;设备&lt;/strong&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;USART&lt;/td&gt;&#xA;          &lt;td&gt;TX、RX&lt;/td&gt;&#xA;          &lt;td&gt;全双工&lt;/td&gt;&#xA;          &lt;td&gt;异步&lt;/td&gt;&#xA;          &lt;td&gt;单端&lt;/td&gt;&#xA;          &lt;td&gt;点对点&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;I2C&lt;/td&gt;&#xA;          &lt;td&gt;SCL、SDA&lt;/td&gt;&#xA;          &lt;td&gt;半双工&lt;/td&gt;&#xA;          &lt;td&gt;同步&lt;/td&gt;&#xA;          &lt;td&gt;单端&lt;/td&gt;&#xA;          &lt;td&gt;多设备&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;SPI&lt;/td&gt;&#xA;          &lt;td&gt;SCLK、MOSI、MISO、CS&lt;/td&gt;&#xA;          &lt;td&gt;全双工&lt;/td&gt;&#xA;          &lt;td&gt;同步&lt;/td&gt;&#xA;          &lt;td&gt;单端&lt;/td&gt;&#xA;          &lt;td&gt;多设备&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;CAN&lt;/td&gt;&#xA;          &lt;td&gt;CAN_H、CAN_L&lt;/td&gt;&#xA;          &lt;td&gt;半双工&lt;/td&gt;&#xA;          &lt;td&gt;异步&lt;/td&gt;&#xA;          &lt;td&gt;差分&lt;/td&gt;&#xA;          &lt;td&gt;多设备&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;USB&lt;/td&gt;&#xA;          &lt;td&gt;DP、DM&lt;/td&gt;&#xA;          &lt;td&gt;半双工&lt;/td&gt;&#xA;          &lt;td&gt;异步&lt;/td&gt;&#xA;          &lt;td&gt;差分&lt;/td&gt;&#xA;          &lt;td&gt;点对点&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;串口&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e4%b8%b2%e5%8f%a3&#34;&gt;&lt;/a&gt;&#xA;串口&#xA;&lt;/h1&gt;&lt;h2 id=&#34;概念&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%a6%82%e5%bf%b5&#34;&gt;&lt;/a&gt;&#xA;概念&#xA;&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/07/9_11_51_52_202407091151823.png&#34; alt=&#34;image-20240709115152751&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;rs232-vs-cmosttl&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#rs232-vs-cmosttl&#34;&gt;&lt;/a&gt;&#xA;RS232 VS CMOS/TTL&#xA;&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/07/9_11_52_20_202407091152830.png&#34; alt=&#34;image-20240709115220783&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;串口参数及时序&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e4%b8%b2%e5%8f%a3%e5%8f%82%e6%95%b0%e5%8f%8a%e6%97%b6%e5%ba%8f&#34;&gt;&lt;/a&gt;&#xA;串口参数及时序&#xA;&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/07/9_11_53_13_202407091153363.png&#34; alt=&#34;image-20240709115313290&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;rs232通信&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#rs232%e9%80%9a%e4%bf%a1&#34;&gt;&lt;/a&gt;&#xA;RS232通信&#xA;&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/07/9_11_53_35_202407091153213.png&#34; alt=&#34;image-20240709115335144&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/07/9_11_53_41_202407091153702.png&#34; alt=&#34;image-20240709115341646&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vim</title>
      <link>http://localhost:1313/post/%E8%BD%AF%E4%BB%B6%E5%8F%8A%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/vim/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E8%BD%AF%E4%BB%B6%E5%8F%8A%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/vim/</guid>
      <description>&lt;h1 id=&#34;启动-vim&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%90%af%e5%8a%a8-vim&#34;&gt;&lt;/a&gt;&#xA;启动 Vim&#xA;&lt;/h1&gt;&lt;p&gt;在终端中输入 &lt;code&gt;vim&lt;/code&gt; 启动 Vim，或者输入 &lt;code&gt;vim filename&lt;/code&gt; 打开特定文件。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vim&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vim filename&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;基本模式&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%9f%ba%e6%9c%ac%e6%a8%a1%e5%bc%8f&#34;&gt;&lt;/a&gt;&#xA;基本模式&#xA;&lt;/h1&gt;&lt;p&gt;Vim 有三种主要模式：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Normal 模式&lt;/strong&gt;：默认模式，用于执行命令。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Insert 模式&lt;/strong&gt;：用于编辑文本。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Visual 模式&lt;/strong&gt;：用于选择文本。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;切换模式&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Normal 模式&lt;/strong&gt;：启动 Vim 后默认进入 Normal 模式。按 &lt;code&gt;Esc&lt;/code&gt; 可以从其他模式切换到 Normal 模式。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Insert 模式&lt;/strong&gt;：在 Normal 模式下，按 &lt;code&gt;i&lt;/code&gt; 进入 Insert 模式，按 &lt;code&gt;Esc&lt;/code&gt; 退出到 Normal 模式。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Visual 模式&lt;/strong&gt;：在 Normal 模式下，按 &lt;code&gt;v&lt;/code&gt; 进入 Visual 模式，按 &lt;code&gt;Esc&lt;/code&gt; 退出到 Normal 模式。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;常用命令&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%b8%b8%e7%94%a8%e5%91%bd%e4%bb%a4&#34;&gt;&lt;/a&gt;&#xA;常用命令&#xA;&lt;/h1&gt;&lt;h2 id=&#34;normal-模式命令&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#normal-%e6%a8%a1%e5%bc%8f%e5%91%bd%e4%bb%a4&#34;&gt;&lt;/a&gt;&#xA;Normal 模式命令&#xA;&lt;/h2&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;移动光标&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;h&lt;/code&gt;：左移&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;j&lt;/code&gt;：下移&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;k&lt;/code&gt;：上移&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;l&lt;/code&gt;：右移&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;w&lt;/code&gt;：移动到下一个单词的开头&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;b&lt;/code&gt;：移动到前一个单词的开头&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;0&lt;/code&gt;：移动到行首&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;$&lt;/code&gt;：移动到行尾&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;编辑文本&lt;/strong&gt;：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vscode</title>
      <link>http://localhost:1313/post/%E8%BD%AF%E4%BB%B6%E5%8F%8A%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/vscode/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E8%BD%AF%E4%BB%B6%E5%8F%8A%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/vscode/</guid>
      <description>&lt;h1 id=&#34;快捷键&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%bf%ab%e6%8d%b7%e9%94%ae&#34;&gt;&lt;/a&gt;&#xA;快捷键&#xA;&lt;/h1&gt;&lt;h2 id=&#34;常用快捷键&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%b8%b8%e7%94%a8%e5%bf%ab%e6%8d%b7%e9%94%ae&#34;&gt;&lt;/a&gt;&#xA;常用快捷键&#xA;&lt;/h2&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;打开命令面板&lt;/strong&gt;：&lt;code&gt;Ctrl+Shift+P&lt;/code&gt; 或 &lt;code&gt;F1&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;快速打开文件&lt;/strong&gt;：&lt;code&gt;Ctrl+P&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;打开设置&lt;/strong&gt;：&lt;code&gt;Ctrl+,&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;编辑快捷键&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%bc%96%e8%be%91%e5%bf%ab%e6%8d%b7%e9%94%ae&#34;&gt;&lt;/a&gt;&#xA;编辑快捷键&#xA;&lt;/h2&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;剪切行&lt;/strong&gt;：&lt;code&gt;Ctrl+X&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;复制行&lt;/strong&gt;：&lt;code&gt;Ctrl+C&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;粘贴&lt;/strong&gt;：&lt;code&gt;Ctrl+V&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;撤销&lt;/strong&gt;：&lt;code&gt;Ctrl+Z&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;重做&lt;/strong&gt;：&lt;code&gt;Ctrl+Y&lt;/code&gt; 或 &lt;code&gt;Ctrl+Shift+Z&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;查找&lt;/strong&gt;：&lt;code&gt;Ctrl+F&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;替换&lt;/strong&gt;：&lt;code&gt;Ctrl+H&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;全选&lt;/strong&gt;：&lt;code&gt;Ctrl+A&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;导航快捷键&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%af%bc%e8%88%aa%e5%bf%ab%e6%8d%b7%e9%94%ae&#34;&gt;&lt;/a&gt;&#xA;导航快捷键&#xA;&lt;/h2&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;跳转到行&lt;/strong&gt;：&lt;code&gt;Ctrl+G&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;跳转到定义&lt;/strong&gt;：&lt;code&gt;F12&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;查找所有引用&lt;/strong&gt;：&lt;code&gt;Shift+F12&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;打开最近使用的文件&lt;/strong&gt;：&lt;code&gt;Ctrl+R&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;下一个光标位置&lt;/strong&gt;：&lt;code&gt;Ctrl+U&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;多光标和选择快捷键&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%a4%9a%e5%85%89%e6%a0%87%e5%92%8c%e9%80%89%e6%8b%a9%e5%bf%ab%e6%8d%b7%e9%94%ae&#34;&gt;&lt;/a&gt;&#xA;多光标和选择快捷键&#xA;&lt;/h2&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;插入光标&lt;/strong&gt;：&lt;code&gt;Alt+Click&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;添加下一个匹配项到选择&lt;/strong&gt;：&lt;code&gt;Ctrl+D&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;跳过下一个匹配项&lt;/strong&gt;：&lt;code&gt;Ctrl+K Ctrl+D&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;全部选中匹配项&lt;/strong&gt;：&lt;code&gt;Ctrl+Shift+L&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;移除当前光标位置&lt;/strong&gt;：&lt;code&gt;Ctrl+U&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;调试快捷键&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e8%b0%83%e8%af%95%e5%bf%ab%e6%8d%b7%e9%94%ae&#34;&gt;&lt;/a&gt;&#xA;调试快捷键&#xA;&lt;/h2&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;开始/继续调试&lt;/strong&gt;：&lt;code&gt;F5&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;停止调试&lt;/strong&gt;：&lt;code&gt;Shift+F5&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;单步跳过&lt;/strong&gt;：&lt;code&gt;F10&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;单步跳入&lt;/strong&gt;：&lt;code&gt;F11&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;单步跳出&lt;/strong&gt;：&lt;code&gt;Shift+F11&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;窗口管理快捷键&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%aa%97%e5%8f%a3%e7%ae%a1%e7%90%86%e5%bf%ab%e6%8d%b7%e9%94%ae&#34;&gt;&lt;/a&gt;&#xA;窗口管理快捷键&#xA;&lt;/h2&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;新建窗口&lt;/strong&gt;：&lt;code&gt;Ctrl+Shift+N&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;关闭窗口&lt;/strong&gt;：&lt;code&gt;Ctrl+Shift+W&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;拆分编辑器&lt;/strong&gt;：&lt;code&gt;Ctrl+\&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;切换编辑器组&lt;/strong&gt;：&lt;code&gt;Ctrl+1&lt;/code&gt;，&lt;code&gt;Ctrl+2&lt;/code&gt;，&lt;code&gt;Ctrl+3&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;终端快捷键&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%bb%88%e7%ab%af%e5%bf%ab%e6%8d%b7%e9%94%ae&#34;&gt;&lt;/a&gt;&#xA;终端快捷键&#xA;&lt;/h2&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;新建终端&lt;/strong&gt;：`Ctrl+Shift+``&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;切换终端面板&lt;/strong&gt;：&lt;code&gt;Ctrl+Shift+5&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;关闭终端&lt;/strong&gt;：&lt;code&gt;Ctrl+Shift+W&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;插件&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%8f%92%e4%bb%b6&#34;&gt;&lt;/a&gt;&#xA;插件&#xA;&lt;/h1&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;插件名称&lt;/th&gt;&#xA;          &lt;th&gt;功能描述&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Better Align&lt;/td&gt;&#xA;          &lt;td&gt;用于对齐变量名和参数&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Better Comments&lt;/td&gt;&#xA;          &lt;td&gt;实时显示错误&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Code Spell Checker&lt;/td&gt;&#xA;          &lt;td&gt;用于检查代码的拼写错误&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Code Translate&lt;/td&gt;&#xA;          &lt;td&gt;鼠标悬停可以查看相关翻译&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Error Lens&lt;/td&gt;&#xA;          &lt;td&gt;高亮显示错误&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Fitten Code&lt;/td&gt;&#xA;          &lt;td&gt;超强AI编程&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Git Graph&lt;/td&gt;&#xA;          &lt;td&gt;用于Git的可视化&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;GitLens&lt;/td&gt;&#xA;          &lt;td&gt;Git的拓展&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Hex Editor&lt;/td&gt;&#xA;          &lt;td&gt;十六进制文件查看器&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;LeetCode&lt;/td&gt;&#xA;          &lt;td&gt;力扣的练习&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;MarkMap&lt;/td&gt;&#xA;          &lt;td&gt;用于将markdown文件转化为思维导图&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;offic viewer&lt;/td&gt;&#xA;          &lt;td&gt;用于实时渲染markdown文件&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Project Manager&lt;/td&gt;&#xA;          &lt;td&gt;用于保存常用项目&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Todo Tree&lt;/td&gt;&#xA;          &lt;td&gt;可用于标记代码中的代办项&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Vim&lt;/td&gt;&#xA;          &lt;td&gt;vscode中的vim插件&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;VSCode Animations&lt;/td&gt;&#xA;          &lt;td&gt;实现丝滑动画效果&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Apc Customize UI++&lt;/td&gt;&#xA;          &lt;td&gt;配合VSCode Animations使用实现丝滑动画&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;C/C++ snippets&lt;/td&gt;&#xA;          &lt;td&gt;用于生成代码分割符&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;IAR linker Configuration File Syntax&lt;/td&gt;&#xA;          &lt;td&gt;用于显示IAR的icf文件&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Arm Assembly&lt;/td&gt;&#xA;          &lt;td&gt;汇编代码&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;iar build&lt;/td&gt;&#xA;          &lt;td&gt;iar官方插件&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;iar&lt;/td&gt;&#xA;          &lt;td&gt;：&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Platform IO&lt;/td&gt;&#xA;          &lt;td&gt;嵌入式替代开发插件&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;wakatime&lt;/td&gt;&#xA;          &lt;td&gt;编程时间及行为跟踪统计&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;codeTour&lt;/td&gt;&#xA;          &lt;td&gt;回放代码演示思路&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;koroFileHeader&lt;/td&gt;&#xA;          &lt;td&gt;生成文件头注释&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!tip]&lt;/p&gt;</description>
    </item>
    <item>
      <title>WDG</title>
      <link>http://localhost:1313/post/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E5%A4%96%E8%AE%BE%E7%BB%84%E4%BB%B6/wdg/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E5%A4%96%E8%AE%BE%E7%BB%84%E4%BB%B6/wdg/</guid>
      <description>&lt;h1 id=&#34;wdg&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#wdg&#34;&gt;&lt;/a&gt;&#xA;WDG&#xA;&lt;/h1&gt;&lt;h2 id=&#34;简介&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%ae%80%e4%bb%8b&#34;&gt;&lt;/a&gt;&#xA;简介&#xA;&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/07/9_15_19_57_202407091519564.png&#34; alt=&#34;image-20240709151957478&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;iwdg-vs-wwdg&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#iwdg-vs-wwdg&#34;&gt;&lt;/a&gt;&#xA;IWDG VS WWDG&#xA;&lt;/h2&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;IWDG独立看门狗&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;WWDG窗口看门狗&lt;/strong&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;复位&lt;/td&gt;&#xA;          &lt;td&gt;计数器减到0后&lt;/td&gt;&#xA;          &lt;td&gt;计数器T[5:0]减到0后、过早重装计数器&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;中断&lt;/td&gt;&#xA;          &lt;td&gt;无&lt;/td&gt;&#xA;          &lt;td&gt;早期唤醒中断&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;时钟源&lt;/td&gt;&#xA;          &lt;td&gt;LSI（40KHz）&lt;/td&gt;&#xA;          &lt;td&gt;PCLK1（36MHz）&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;预分频系数&lt;/td&gt;&#xA;          &lt;td&gt;4、8、32、64、128、256&lt;/td&gt;&#xA;          &lt;td&gt;1、2、4、8&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;计数器&lt;/td&gt;&#xA;          &lt;td&gt;12位&lt;/td&gt;&#xA;          &lt;td&gt;6位（有效计数）&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;超时时间&lt;/td&gt;&#xA;          &lt;td&gt;0.1ms~26214.4ms&lt;/td&gt;&#xA;          &lt;td&gt;113us~58.25ms&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;喂狗方式&lt;/td&gt;&#xA;          &lt;td&gt;写入键寄存器，重装固定值RLR&lt;/td&gt;&#xA;          &lt;td&gt;直接写入计数器，写多少重装多少&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;防误操作&lt;/td&gt;&#xA;          &lt;td&gt;键寄存器和写保护&lt;/td&gt;&#xA;          &lt;td&gt;无&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;用途&lt;/td&gt;&#xA;          &lt;td&gt;独立工作，对时间精度要求较低&lt;/td&gt;&#xA;          &lt;td&gt;要求看门狗在精确计时窗口起作用&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;溢出时间计算原理&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%ba%a2%e5%87%ba%e6%97%b6%e9%97%b4%e8%ae%a1%e7%ae%97%e5%8e%9f%e7%90%86&#34;&gt;&lt;/a&gt;&#xA;溢出时间计算原理&#xA;&lt;/h2&gt;&lt;p&gt;计算步骤如下&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;首先需要知道看门狗的时钟频率，假设是60kHz&lt;/li&gt;&#xA;&lt;li&gt;设置分频系数，现在设置为8分频，那么分完频之后的时钟就是60_000Hz / 8=75_00Hz,也就是1s跳动7500次&lt;/li&gt;&#xA;&lt;li&gt;如果想要设置溢出时间为0.5s的话，那么就是用0.5*7500=3750，就是设置为3750&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h1 id=&#34;iwdg&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#iwdg&#34;&gt;&lt;/a&gt;&#xA;IWDG&#xA;&lt;/h1&gt;&lt;h2 id=&#34;概述&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%a6%82%e8%bf%b0&#34;&gt;&lt;/a&gt;&#xA;概述&#xA;&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/07/9_15_22_29_202407091522425.png&#34; alt=&#34;image-20240709152229375&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;作用&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e4%bd%9c%e7%94%a8&#34;&gt;&lt;/a&gt;&#xA;作用&#xA;&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/07/9_15_22_40_202407091522912.png&#34; alt=&#34;image-20240709152240863&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;工作原理&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%b7%a5%e4%bd%9c%e5%8e%9f%e7%90%86&#34;&gt;&lt;/a&gt;&#xA;工作原理&#xA;&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/07/9_15_22_40_202407091522912.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;框图&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%a1%86%e5%9b%be&#34;&gt;&lt;/a&gt;&#xA;框图&#xA;&lt;/h2&gt;&lt;p&gt;实际上就是一个递减计数器，在程序运行期间，适当的提高计数值就可以避免出现复位，手动重装重装载寄存器的操作就是喂狗,递减计数器是12位的，所以最大的计数是 $2 ^ {12}-1 = 4095$。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;当递减计数器自减到0时，会产生一个IWDG的复位信号&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;当我们在重装载寄存器中写好值之后，在键寄存器里写一个特定的数据，控制电路进行喂狗，这个时候重装值就会将数值赋给当前计数器&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;下图分为上下两部分，上面部分工作在1.8v电压下，下面部分工作在VDD电压下&lt;/p&gt;</description>
    </item>
    <item>
      <title>WireShark</title>
      <link>http://localhost:1313/post/%E8%BD%AF%E4%BB%B6%E5%8F%8A%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/wireshark/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E8%BD%AF%E4%BB%B6%E5%8F%8A%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/wireshark/</guid>
      <description>&lt;h1 id=&#34;蓝牙抓包&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e8%93%9d%e7%89%99%e6%8a%93%e5%8c%85&#34;&gt;&lt;/a&gt;&#xA;蓝牙抓包&#xA;&lt;/h1&gt;&lt;h2 id=&#34;参考链接&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%8f%82%e8%80%83%e9%93%be%e6%8e%a5&#34;&gt;&lt;/a&gt;&#xA;参考链接&#xA;&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/RF_star/article/details/106054980&#34;&gt;实测对比Wireshark利用nRF52832 Sniffer和Packet Sniffer 利用CC2540 Dongle 抓包使用体验_usb nrf sniffer 指定 mac-CSDN博客&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/qq_43306777/article/details/139235300&#34;&gt;蓝牙&amp;mdash;-wireshark抓包查看蓝牙通信过程_蓝牙抓包-CSDN博客&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://balancetwk.github.io/2022/04/16/hexo_blog/Bluetooth/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E6%A0%88%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/&#34;&gt;低功耗蓝牙协议栈入门（四）空中抓包 （WireShark + nRF Sniffer） | BalanceTWK的博客&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.nordicsemi.com/bundle/nrfutil_ble_sniffer_pdf/resource/nRF_Sniffer_BLE_UG_v4.0.0.pdf&#34;&gt;nRF Sniffer for Bluetooth LE User Guide v4.0.0 (nordicsemi.com)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;安装&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%ae%89%e8%a3%85&#34;&gt;&lt;/a&gt;&#xA;安装&#xA;&lt;/h2&gt;&lt;p&gt;使用wireShark抓包，需要使用专用硬件nRF来抓，首先先到&lt;a href=&#34;https://www.wireshark.org/&#34;&gt;Wireshark · Go Deep&lt;/a&gt;网站下载wireShark，然后再去&lt;a href=&#34;https://www.nordicsemi.com/Products/Development-tools/nRF-Sniffer-for-Bluetooth-LE&#34;&gt;nRF Sniffer for Bluetooth LE - nordicsemi.com&lt;/a&gt;下载nRF sniffer插件。在&lt;a href=&#34;https://docs.nordicsemi.com/bundle/nrfutil/page/nrfutil-ble-sniffer/guides/overview.html&#34;&gt;ble-sniffer command overview (nordicsemi.com)&lt;/a&gt;上有软件使用手册。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!tip]&lt;/p&gt;&#xA;&lt;p&gt;nRF sniffer是wireShark的一个插件，相当于是安装了nRF sniffer插件，就可以使用wireshark抓蓝牙包了&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;安装wireshark的时候，一直下一步就行，下面介绍nRF sniffer的安装：&lt;/p&gt;&#xA;&lt;p&gt;在安装之前需要确保安装了wireshark v3.41及以上版本和python v3.6及以上版本&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!note]&lt;/p&gt;&#xA;&lt;p&gt;一般来说，商家都会烧录好固件，一些支持二次开发的设备可以自己烧录hex程序以支持nRF connect或Wireshark&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;打开下载好sniffer插件文件夹，打开&lt;code&gt;nrf_sniffer_for_bluetooth_le_4.1.1\extcap&lt;/code&gt;文件夹，打开cmd，可以在地址栏中输入cmd用来直接启动&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2025/02/5_13_20_36_202502051320275.gif&#34; alt=&#34;安装必要包&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;在cmd中输入以下命令安装依赖包（注意，这必须在安装了python的前提下）：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip3 install -r requirements.txt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;安装完成之后，打开wireshark，在菜单的tab中依次打开*==帮助&amp;gt;关于wireshark&amp;gt;文件夹&amp;gt;personal Extcap==&lt;em&gt;,将 &lt;code&gt;Sniffer_Software/extcap/&lt;/code&gt; 文件夹的内容复制到此文件夹中。之后开始配置wireshark，在菜单的tab中依次打开&lt;/em&gt;==帮助&amp;gt;关于wireshark&amp;gt;文件夹&amp;gt;personal configuration==*，将 profile 文件夹 Sniffer_Software/Profile_nRF_Sniffer_Bluetooth_LE 复制到此文件夹的 profiles 子文件夹中。&lt;/p&gt;</description>
    </item>
    <item>
      <title>编程规范</title>
      <link>http://localhost:1313/post/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BC%96%E7%A8%8B%E8%A7%84%E8%8C%83/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BC%96%E7%A8%8B%E8%A7%84%E8%8C%83/</guid>
      <description>&lt;h1 id=&#34;参考链接&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%8f%82%e8%80%83%e9%93%be%e6%8e%a5&#34;&gt;&lt;/a&gt;&#xA;参考链接&#xA;&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/zhengnianli/article/details/100061633&#34;&gt;C语言 | 嵌入式C语言编程规范_函数名开头加uc-CSDN博客&lt;/a&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!tip]&lt;/p&gt;&#xA;&lt;p&gt;以下文件排版将会按照自顶向下的方式进行编排，&lt;em&gt;==文件夹 &amp;gt; 文件名 &amp;gt; 排版 &amp;gt; 函数 &amp;gt; 变量==&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h1 id=&#34;文件架构&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%96%87%e4%bb%b6%e6%9e%b6%e6%9e%84&#34;&gt;&lt;/a&gt;&#xA;文件架构&#xA;&lt;/h1&gt;&lt;h2 id=&#34;缩写&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%bc%a9%e5%86%99&#34;&gt;&lt;/a&gt;&#xA;缩写&#xA;&lt;/h2&gt;&lt;p&gt;该项目文件树参考AUTOSAR结构，为了便于理解，此处展示部分缩写的全称：&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;缩写&lt;/th&gt;&#xA;          &lt;th&gt;全称&lt;/th&gt;&#xA;          &lt;th&gt;描述&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;AUTOSAR&lt;/td&gt;&#xA;          &lt;td&gt;AUTomotive Open System ARchitecture&lt;/td&gt;&#xA;          &lt;td&gt;汽车开放系统架构，是汽车软件开发的标准框架。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ASW&lt;/td&gt;&#xA;          &lt;td&gt;Application Software&lt;/td&gt;&#xA;          &lt;td&gt;应用软件，主要负责实现特定功能的业务逻辑。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;BSW&lt;/td&gt;&#xA;          &lt;td&gt;Basic Software&lt;/td&gt;&#xA;          &lt;td&gt;基础软件，负责底层硬件控制和通用服务的实现。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;BSP&lt;/td&gt;&#xA;          &lt;td&gt;Board Support Package&lt;/td&gt;&#xA;          &lt;td&gt;板级支持包，包含硬件初始化、驱动和相关工具。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;HAL&lt;/td&gt;&#xA;          &lt;td&gt;Hardware Abstraction Layer&lt;/td&gt;&#xA;          &lt;td&gt;硬件抽象层，提供对硬件的抽象访问接口。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;MCAL&lt;/td&gt;&#xA;          &lt;td&gt;Microcontroller Abstraction Layer&lt;/td&gt;&#xA;          &lt;td&gt;微控制器抽象层，提供对芯片外设的直接访问接口。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;RTE&lt;/td&gt;&#xA;          &lt;td&gt;Run-Time Environment&lt;/td&gt;&#xA;          &lt;td&gt;运行时环境，负责 ASW 与 BSW 的通信管理。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;UDS&lt;/td&gt;&#xA;          &lt;td&gt;Unified Diagnostic Services&lt;/td&gt;&#xA;          &lt;td&gt;统一诊断服务协议（ISO 14229），用于 ECU 的诊断通信。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Dcm&lt;/td&gt;&#xA;          &lt;td&gt;Diagnostic Communication Manager&lt;/td&gt;&#xA;          &lt;td&gt;诊断通信管理模块，实现 UDS 服务的解析和处理。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Dem&lt;/td&gt;&#xA;          &lt;td&gt;Diagnostic Event Manager&lt;/td&gt;&#xA;          &lt;td&gt;诊断事件管理模块，负责故障码存储和管理。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;PduR&lt;/td&gt;&#xA;          &lt;td&gt;Protocol Data Unit Router&lt;/td&gt;&#xA;          &lt;td&gt;协议数据单元路由模块，负责数据路由。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;CanTp&lt;/td&gt;&#xA;          &lt;td&gt;CAN Transport Protocol&lt;/td&gt;&#xA;          &lt;td&gt;CAN 传输协议模块，用于实现 UDS 消息的传输。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;NvM&lt;/td&gt;&#xA;          &lt;td&gt;Non-Volatile Memory Manager&lt;/td&gt;&#xA;          &lt;td&gt;非易失性内存管理模块，负责数据的持久化存储。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;SoAd&lt;/td&gt;&#xA;          &lt;td&gt;Socket Adapter&lt;/td&gt;&#xA;          &lt;td&gt;套接字适配器，用于实现基于 TCP/IP 的通信协议（如 DoIP）。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ECU&lt;/td&gt;&#xA;          &lt;td&gt;Electronic Control Unit&lt;/td&gt;&#xA;          &lt;td&gt;电子控制单元，是汽车的嵌入式控制器。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;GPIO&lt;/td&gt;&#xA;          &lt;td&gt;General Purpose Input/Output&lt;/td&gt;&#xA;          &lt;td&gt;通用输入输出，硬件外设的一种。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;UART&lt;/td&gt;&#xA;          &lt;td&gt;Universal Asynchronous Receiver-Transmitter&lt;/td&gt;&#xA;          &lt;td&gt;通用异步收发器，用于串行通信。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;SPI&lt;/td&gt;&#xA;          &lt;td&gt;Serial Peripheral Interface&lt;/td&gt;&#xA;          &lt;td&gt;串行外设接口，用于高性能串行通信。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;I2C&lt;/td&gt;&#xA;          &lt;td&gt;Inter-Integrated Circuit&lt;/td&gt;&#xA;          &lt;td&gt;一种常用的两线串行通信协议。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;CAN&lt;/td&gt;&#xA;          &lt;td&gt;Controller Area Network&lt;/td&gt;&#xA;          &lt;td&gt;控制器局域网，是汽车通信总线的一种。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;FlexRay&lt;/td&gt;&#xA;          &lt;td&gt;Flexible Ray&lt;/td&gt;&#xA;          &lt;td&gt;一种高速汽车通信协议，用于安全关键应用。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;LIN&lt;/td&gt;&#xA;          &lt;td&gt;Local Interconnect Network&lt;/td&gt;&#xA;          &lt;td&gt;局域互连网络，低成本汽车通信协议。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;DoIP&lt;/td&gt;&#xA;          &lt;td&gt;Diagnostics over Internet Protocol&lt;/td&gt;&#xA;          &lt;td&gt;基于 IP 协议的诊断通信。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;OS&lt;/td&gt;&#xA;          &lt;td&gt;Operating System&lt;/td&gt;&#xA;          &lt;td&gt;操作系统，提供任务调度和资源管理功能。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;SWC&lt;/td&gt;&#xA;          &lt;td&gt;Software Component&lt;/td&gt;&#xA;          &lt;td&gt;软件组件，用于实现应用逻辑，是 ASW 层的核心构成模块。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;概览&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%a6%82%e8%a7%88&#34;&gt;&lt;/a&gt;&#xA;概览&#xA;&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├─.vscode&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├─ASW&#x9;&#x9;&#x9;&#x9;此处存放与硬件平台无关代码&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├─BSW&#x9;&#x9;&#x9;&#x9;存放与硬件相关代码，所以子文件夹需要区分不同芯片型号&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├─BOOT&#x9;&#x9;&#x9;&#x9;存放BOOT相关代码&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├─Documents&#x9;&#x9;&#x9;存放项目相关的文档，为了方便使用，最好将使用的芯片的手册放于此处&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├─OS&#x9;&#x9;&#x9;&#x9;存放和系统相关的，如文件系统、操作系统、调度系统等等&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├─Output&#x9;&#x9;&#x9;存放输出文件，请在设置Keil和IAR等软件时，选用输出到此文件夹，方便管理，并且增强Project中的整洁性&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;└─Project&#x9;&#x9;&#x9;存放和工程相关的文件树，如KEIL、IAR、SOURCEINSIGHT、TSMATSER、CANoe、JFLASH，与项目相关的工程请放置此处&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;[!important]&lt;/p&gt;</description>
    </item>
    <item>
      <title>便捷工具</title>
      <link>http://localhost:1313/post/%E8%BD%AF%E4%BB%B6%E5%8F%8A%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/%E4%BE%BF%E6%8D%B7%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E8%BD%AF%E4%BB%B6%E5%8F%8A%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/%E4%BE%BF%E6%8D%B7%E5%B7%A5%E5%85%B7/</guid>
      <description>&lt;h1 id=&#34;系统类工具&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%b3%bb%e7%bb%9f%e7%b1%bb%e5%b7%a5%e5%85%b7&#34;&gt;&lt;/a&gt;&#xA;系统类工具&#xA;&lt;/h1&gt;&lt;h2 id=&#34;windows软件&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#windows%e8%bd%af%e4%bb%b6&#34;&gt;&lt;/a&gt;&#xA;windows软件&#xA;&lt;/h2&gt;&lt;h3 id=&#34;美化工具&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%be%8e%e5%8c%96%e5%b7%a5%e5%85%b7&#34;&gt;&lt;/a&gt;&#xA;美化工具&#xA;&lt;/h3&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;软件名称&lt;/th&gt;&#xA;          &lt;th&gt;软件功能&lt;/th&gt;&#xA;          &lt;th&gt;相关链接&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;oh-my- posh&lt;/td&gt;&#xA;          &lt;td&gt;cmd终端美化神器&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://blog.csdn.net/qq_21689457/article/details/129345662&#34;&gt;oh-my-posh - 终端个性化工具 - 美化PowerShell / cmd - 好物分享，真香~-CSDN博客&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;TranslucentTB&lt;/td&gt;&#xA;          &lt;td&gt;Dock栏透明&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://apps.microsoft.com/detail/9pf4kz2vn4w9?hl=en-us&amp;amp;gl=US&#34;&gt;TranslucentTB - Free download and install on Windows&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Rocketdock&lt;/td&gt;&#xA;          &lt;td&gt;Dock栏美化&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://post.smzdm.com/p/a7dv8m0l/#:~:text=%E9%A6%96%E5%85%88%E6%88%91%E4%BB%AC%E5%AF%B9%E7%94%B5%E8%84%91%E4%BB%BB%E5%8A%A1%E6%A0%8F&#34;&gt;Win10极简风最全美化指南！(桌面文件+任务栏透明+dock栏+磁贴_游戏软件_什么值得买 (smzdm.com)&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;xPlorer&lt;/td&gt;&#xA;          &lt;td&gt;文件夹管理&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://github.com/kimlimjustin/xplorer/releases&#34;&gt;Releases · kimlimjustin/xplorer (github.com)&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;sigma&lt;/td&gt;&#xA;          &lt;td&gt;文件夹管理&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://github.com/aleksey-hoffman/sigma-file-manager&#34;&gt;aleksey-hoffman/sigma-file-manager: &amp;ldquo;Sigma File Manager&amp;rdquo; is a free, open-source, quickly evolving, modern file manager (explorer / browser) app for Windows and Linux. (github.com)&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Sapphire&lt;/td&gt;&#xA;          &lt;td&gt;桌面增强工具&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://github.com/hymnly133/Sapphire-EnhancedDesktop/tree/main&#34;&gt;hymnly133/Sapphire-EnhancedDesktop: Windows桌面取代软件 (github.com)&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Fence&lt;/td&gt;&#xA;          &lt;td&gt;桌面分类&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://www.gndown.com/11307.html&#34;&gt;Stardock Fences(桌面图标管理工具) v5.88 中文破解版-绿软小站&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;DeskGo&lt;/td&gt;&#xA;          &lt;td&gt;桌面整理工具（注意要点击下载独立版）&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://guanjia.qq.com/product/zmzl/&#34;&gt;桌面整理_桌面整理软件_一键桌面整理工具-腾讯电脑管家官网 (qq.com)&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;桌面时钟&lt;/td&gt;&#xA;          &lt;td&gt;桌面时钟&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://axainy.lanzouj.com/iPom313wmxuh&#34;&gt;桌面时钟 更多软件在公众号：吾优.exe - 蓝奏云 (lanzouj.com)&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;glazewm&lt;/td&gt;&#xA;          &lt;td&gt;window版平铺式桌面&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://github.com/glzr-io/glazewm&#34;&gt;glzr-io/glazewm: GlazeWM is a tiling window manager for Windows inspired by i3wm. (github.com)&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Clover&lt;/td&gt;&#xA;          &lt;td&gt;资源管理器的tab拓展&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;http://cn.ejie.me/&#34;&gt;Clover给资源管理器加上类似Chrome的标签  易捷科技 EJIE Technology&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;便捷工具&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e4%be%bf%e6%8d%b7%e5%b7%a5%e5%85%b7&#34;&gt;&lt;/a&gt;&#xA;便捷工具&#xA;&lt;/h3&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;软件名称&lt;/th&gt;&#xA;          &lt;th&gt;软件功能&lt;/th&gt;&#xA;          &lt;th&gt;相关链接&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;listary&lt;/td&gt;&#xA;          &lt;td&gt;window文件查找工具&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://www.listary.com/&#34;&gt;Listary – Free File Search Tool &amp;amp; App Launcher&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;anyTxt&lt;/td&gt;&#xA;          &lt;td&gt;根据文件内容搜索&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://anytxt.net/download/&#34;&gt;下载最佳免费桌面全文搜索工具&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;snipaste&lt;/td&gt;&#xA;          &lt;td&gt;截图工具&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://zh.snipaste.com/&#34;&gt;Snipaste - 截图 + 贴图&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;PicGO&lt;/td&gt;&#xA;          &lt;td&gt;图片上传工具&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://picgo.github.io/PicGo-Doc/zh/&#34;&gt;PicGo&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;screentogif&lt;/td&gt;&#xA;          &lt;td&gt;屏幕录制转gif&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://www.screentogif.com/&#34;&gt;ScreenToGif - Record your screen, edit and save as a gif, video or other formats&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;BandView&lt;/td&gt;&#xA;          &lt;td&gt;图片查看神器&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://www.bandisoft.com/honeyview/&#34;&gt;Honeyview · 免费图像查看器 · 下载和功能说明 (bandisoft.com)&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Pointfix&lt;/td&gt;&#xA;          &lt;td&gt;屏幕虚拟荧光笔&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://www.pointofix.de/download.php&#34;&gt;Pointofix - Herunterladen - 下载&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;utools&lt;/td&gt;&#xA;          &lt;td&gt;window小工具&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://u.tools/&#34;&gt;uTools官网 - 新一代效率工具平台&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;PowerToys&lt;/td&gt;&#xA;          &lt;td&gt;微软工具箱&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://learn.microsoft.com/zh-cn/windows/powertoys/&#34;&gt;Microsoft PowerToys&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Ditto&lt;/td&gt;&#xA;          &lt;td&gt;高级粘贴工具&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ditto-cp.sourceforge.io/&#34;&gt;Ditto clipboard manager (sourceforge.io)&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;tinyTask&lt;/td&gt;&#xA;          &lt;td&gt;PC自动化应用程序&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://www.tinytask.net/download.html&#34;&gt;TinyTask - Download&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;QuickLook&lt;/td&gt;&#xA;          &lt;td&gt;快速预览&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://github.com/QL-Win/QuickLook/releases&#34;&gt;Releases · QL-Win/QuickLook (github.com)&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;f.lux&lt;/td&gt;&#xA;          &lt;td&gt;护眼神器&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://justgetflux.com/&#34;&gt;f.lux: software to make your life better (justgetflux.com)&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;deskFlow&lt;/td&gt;&#xA;          &lt;td&gt;一个键鼠控制多台设备&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://github.com/deskflow/deskflow&#34;&gt;deskflow/deskflow: Deskflow lets you share one mouse and keyboard between multiple computers on Windows, macOS and Linux. It&amp;rsquo;s like a software KVM (but without video). (github.com)&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Quicker&lt;/td&gt;&#xA;          &lt;td&gt;鼠标右键工具&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://getquicker.net/&#34;&gt;Quicker软件 您的指尖工具箱 - Quicker (getquicker.net)&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Ditto&lt;/td&gt;&#xA;          &lt;td&gt;复制粘贴用&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://ditto-cp.sourceforge.io/&#34;&gt;Ditto clipboard manager (sourceforge.io)&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Gopeed&lt;/td&gt;&#xA;          &lt;td&gt;现代化的下载器&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://www.gopeed.com/zh-CN&#34;&gt;Gopeed - 一款现代化的下载器&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;NDM&lt;/td&gt;&#xA;          &lt;td&gt;IDM平替&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://www.neatdownloadmanager.com/index.php/en/&#34;&gt;Neat Download Manager for Mac and Windows (Free Internet Download Manager Mac &amp;amp; Windows )&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;wechatDownload&lt;/td&gt;&#xA;          &lt;td&gt;公众号文章下载工具&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://github.com/qiye45/wechatDownload&#34;&gt;qiye45/wechatDownload: 微信公众号文章批量下载工具，支持图片、评论下载，支持保存html/mhtml/md/pdf/docx文件 (github.com)&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Geek&lt;/td&gt;&#xA;          &lt;td&gt;彻底卸载软件神器&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://geekuninstaller.com/&#34;&gt;Geek Uninstaller - the best FREE uninstaller&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;SpaceSniffer&lt;/td&gt;&#xA;          &lt;td&gt;查看磁盘组成&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://soft.3dmgame.com/down/200352.html&#34;&gt;SpaceSniffer(磁盘空间分析工具)官方下载_SpaceSniffer(磁盘空间分析工具)最新版免费下载_3DM软件 (3dmgame.com)&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Dropshelf&lt;/td&gt;&#xA;          &lt;td&gt;文件中转站&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://apps.microsoft.com/detail/9mzpc6p14l7n?hl=en-us&amp;amp;gl=us&#34;&gt;Dropshelf - Free download and install on Windows &lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;DropPoint&lt;/td&gt;&#xA;          &lt;td&gt;文件中转站&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://github.com/GameGodS3/DropPoint/releases&#34;&gt;Releases · GameGodS3/DropPoint (github.com)&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;localsend&lt;/td&gt;&#xA;          &lt;td&gt;跨平台发送&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://github.com/localsend/localsend&#34;&gt;localsend/localsend: An open-source cross-platform alternative to AirDrop (github.com)&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Audio sharre&lt;/td&gt;&#xA;          &lt;td&gt;音频流分享&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://github.com/mkckr0/audio-share&#34;&gt;mkckr0/audio-share: Audio Share can share Windows/Linux computer&amp;rsquo;s audio to Android phone over network, so your phone becomes the speaker of computer. (You needn&amp;rsquo;t buy a new speaker😄.) (github.com)&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;spaceDesk&lt;/td&gt;&#xA;          &lt;td&gt;将平板成为拓展屏&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://apps.microsoft.com/detail/9nblggh4trm4?launch=true&amp;amp;mode=full&amp;amp;hl=zh-cn&amp;amp;gl=cn&amp;amp;ocid=bingwebsearch&#34;&gt;spacedesk &lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;clash&lt;/td&gt;&#xA;          &lt;td&gt;翻墙软件&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://github.com/clashdownload&#34;&gt;clashdownload (github.com)&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/2852384493&#34;&gt;Linux Clash 最速安装使用 - 知乎 (zhihu.com)&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;office tool plus&lt;/td&gt;&#xA;          &lt;td&gt;office安装软件&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://otp.landian.vip/zh-cn/&#34;&gt;Office Tool Plus  一键部署 Office&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;笔记类软件&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%ac%94%e8%ae%b0%e7%b1%bb%e8%bd%af%e4%bb%b6&#34;&gt;&lt;/a&gt;&#xA;笔记类软件&#xA;&lt;/h3&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;软件名称&lt;/th&gt;&#xA;          &lt;th&gt;软件功能&lt;/th&gt;&#xA;          &lt;th&gt;相关链接&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;obsidian&lt;/td&gt;&#xA;          &lt;td&gt;markdown笔记软件&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://obsidian.md/&#34;&gt;Obsidian - Sharpen your thinking&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Typora&lt;/td&gt;&#xA;          &lt;td&gt;markdown笔记软件&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://www.bilibili.com/read/cv27657150/&#34;&gt;Typora 1.7.6最新破解、激活！亲测有效！ - 哔哩哔哩 (bilibili.com)&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Vlook&lt;/td&gt;&#xA;          &lt;td&gt;typora炫酷主题&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://github.com/MadMaxChow/VLOOK&#34;&gt;MadMaxChow/VLOOK: VLOOK™ 是优雅好用的 Typora/Markdown 主题包和增强插件。 VLOOK™ is an elegant and practical theme package × enhancement plugin for Typora/Markdown. (github.com)&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;WaveDrom&lt;/td&gt;&#xA;          &lt;td&gt;绘制时序图&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://wavedrom.com/&#34;&gt;WaveDrom - Digital timing diagram everywhere&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;NotePad&amp;ndash;&lt;/td&gt;&#xA;          &lt;td&gt;NotePad++国产版&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://gitee.com/cxasm/notepad--/releases&#34;&gt;ndd 发行版 - Gitee.com&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;其他&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%85%b6%e4%bb%96&#34;&gt;&lt;/a&gt;&#xA;其他&#xA;&lt;/h3&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;软件名称&lt;/th&gt;&#xA;          &lt;th&gt;软件功能&lt;/th&gt;&#xA;          &lt;th&gt;相关链接&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;memoryStory&lt;/td&gt;&#xA;          &lt;td&gt;软件商店&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://cnxiaobai.com/&#34;&gt;MemoryStory (cnxiaobai.com)&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;绿软小站&lt;/td&gt;&#xA;          &lt;td&gt;盗版软件免费下载网站&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://www.gndown.com/&#34;&gt;绿软小站 - 分享绿色软件、免费软件、最新资讯！&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ChatGpt&lt;/td&gt;&#xA;          &lt;td&gt;gtp注册流程&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://blog.csdn.net/w846736896/article/details/128998038&#34;&gt;AI人工智能gpt注册流程-CSDN博客&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;无限邮箱&lt;/td&gt;&#xA;          &lt;td&gt;使用一个邮箱号可以申请多个邮箱&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://2925.com/login/&#34;&gt;2925邮箱-无限邮&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Pake&lt;/td&gt;&#xA;          &lt;td&gt;将网页打包为app&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://github.com/tw93/Pake&#34;&gt;tw93/Pake: 🤱🏻 Turn any webpage into a desktop app with Rust. 🤱🏻 利用 Rust 轻松构建轻量级多端桌面应用 (github.com)&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;浏览器工具&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%b5%8f%e8%a7%88%e5%99%a8%e5%b7%a5%e5%85%b7&#34;&gt;&lt;/a&gt;&#xA;浏览器工具&#xA;&lt;/h1&gt;&lt;h2 id=&#34;edge拓展&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#edge%e6%8b%93%e5%b1%95&#34;&gt;&lt;/a&gt;&#xA;Edge拓展&#xA;&lt;/h2&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;拓展名称&lt;/th&gt;&#xA;          &lt;th&gt;功能&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;AdGuard&lt;/td&gt;&#xA;          &lt;td&gt;广告拦截器&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Bookmark cleaner&lt;/td&gt;&#xA;          &lt;td&gt;无效书签检测&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Dualsub&lt;/td&gt;&#xA;          &lt;td&gt;生成字幕&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;gobal speed&lt;/td&gt;&#xA;          &lt;td&gt;控制视频速度&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;simple allow copy&lt;/td&gt;&#xA;          &lt;td&gt;任意复制文字&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;沉浸式翻译&lt;/td&gt;&#xA;          &lt;td&gt;英语翻译&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;浮图秀&lt;/td&gt;&#xA;          &lt;td&gt;用于展示大图&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;简悦&lt;/td&gt;&#xA;          &lt;td&gt;沉浸式看博客&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Sweezy Cursors&lt;/td&gt;&#xA;          &lt;td&gt;鼠标样式改变&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;油猴脚本&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%b2%b9%e7%8c%b4%e8%84%9a%e6%9c%ac&#34;&gt;&lt;/a&gt;&#xA;油猴脚本&#xA;&lt;/h2&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;脚本名称&lt;/th&gt;&#xA;          &lt;th&gt;功能&lt;/th&gt;&#xA;          &lt;th&gt;相关链接&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;User script+&lt;/td&gt;&#xA;          &lt;td&gt;推荐当前站点可用的油猴脚本&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://greasyfork.org/zh-CN/scripts/421603-magic-userscript-show-site-all-userjs&#34;&gt;Magic Userscript+ ：显示站点所有 UserJS (greasyfork.org)&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;知乎美化&lt;/td&gt;&#xA;          &lt;td&gt;美化知乎页面&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://greasyfork.org/zh-CN/scripts/402808-%E7%9F%A5%E4%B9%8E%E7%BE%8E%E5%8C%96&#34;&gt;知乎美化 (greasyfork.org)&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;东方永页机&lt;/td&gt;&#xA;          &lt;td&gt;搜索结果自动翻页拼合&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://greasyfork.org/zh-CN/scripts/438684-pagetual&#34;&gt;东方永页机 (greasyfork.org)&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;计时器掌控者&lt;/td&gt;&#xA;          &lt;td&gt;可以跳过视频的广告&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://greasyfork.org/zh-CN/scripts/372673-%E8%AE%A1%E6%97%B6%E5%99%A8%E6%8E%8C%E6%8E%A7%E8%80%85-%E8%A7%86%E9%A2%91%E5%B9%BF%E5%91%8A%E8%B7%B3%E8%BF%87-%E8%A7%86%E9%A2%91%E5%B9%BF%E5%91%8A%E5%8A%A0%E9%80%9F%E5%99%A8&#34;&gt;计时器掌控者&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;编程类工具&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%bc%96%e7%a8%8b%e7%b1%bb%e5%b7%a5%e5%85%b7&#34;&gt;&lt;/a&gt;&#xA;编程类工具&#xA;&lt;/h1&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;软件名称&lt;/th&gt;&#xA;          &lt;th&gt;软件功能&lt;/th&gt;&#xA;          &lt;th&gt;相关链接&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;cursor&lt;/td&gt;&#xA;          &lt;td&gt;交互式编程&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://www.cursor.com/&#34;&gt;Cursor&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ImHex&lt;/td&gt;&#xA;          &lt;td&gt;十六进制数据查看器&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://github.com/WerWolv/ImHex&#34;&gt;WerWolv/ImHex: 🔍 A Hex Editor for Reverse Engineers, Programmers and people who value their retinas when working at 3 AM. (github.com)&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;vscode&lt;/td&gt;&#xA;          &lt;td&gt;地表最强编辑器&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;Visual Studio Code - Code Editing. Redefined&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Vim&lt;/td&gt;&#xA;          &lt;td&gt;文字类效率开发神器&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://www.vim.org/&#34;&gt;welcome home : vim online&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Amap&lt;/td&gt;&#xA;          &lt;td&gt;用于解析Gcc生成的Map文件&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://www.sikorskiy.net/info/prj/amap/&#34;&gt;Amap - Sergey Sikorskiy&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Multsim&lt;/td&gt;&#xA;          &lt;td&gt;电路仿真&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://www.ddooo.com/softdown/147749.htm&#34;&gt;multisim14.2汉化破解版下载-ni multisim 14.2中文破解版下载 - 多多软件站 (ddooo.com)&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;WireShark&lt;/td&gt;&#xA;          &lt;td&gt;网络抓包工具&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://www.wireshark.org/download.html&#34;&gt;Wireshark · Download&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>操作系统基础</title>
      <link>http://localhost:1313/post/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80/</guid>
      <description>&lt;h1 id=&#34;参考链接&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%8f%82%e8%80%83%e9%93%be%e6%8e%a5&#34;&gt;&lt;/a&gt;&#xA;参考链接&#xA;&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://jyywiki.cn/OS/2024/&#34;&gt;操作系统：设计与实现 (2024 春季学期) (jyywiki.cn)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;应用视角下的操作系统&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%ba%94%e7%94%a8%e8%a7%86%e8%a7%92%e4%b8%8b%e7%9a%84%e6%93%8d%e4%bd%9c%e7%b3%bb%e7%bb%9f&#34;&gt;&lt;/a&gt;&#xA;应用视角下的操作系统&#xA;&lt;/h1&gt;&lt;h2 id=&#34;构造一个最小程序&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%9e%84%e9%80%a0%e4%b8%80%e4%b8%aa%e6%9c%80%e5%b0%8f%e7%a8%8b%e5%ba%8f&#34;&gt;&lt;/a&gt;&#xA;构造一个最小程序&#xA;&lt;/h2&gt;&lt;p&gt;要理解操作系统首先要理解程序,下面是一个最简单的程序：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Hello world!&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当生成输出文件之后，可以使用以下的命令来查看生成的可执行文件&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;objdump 工具可以查看对应的汇编代码&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gcc --verbose 可以查看所有编译选项 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;真不少&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;printf&lt;/span&gt; 变成了 puts@plt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gcc -Wl,--verbose 可以查看所有链接选项 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;真不少&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;原来链接了那么多东西还解释了 end 符号的由来&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gcc -static 会链接 libc &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;大量的代码&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当使用以上工具查看生成的main的可执行文件时，发现可执行文件内容较多。编译链接的过程会链接库文件导致可执行文件变大。&lt;/p&gt;&#xA;&lt;p&gt;那么我们可以尝试着手动的去链接可定位文件，可以先生成一个main.o文件，然后将这个mian.o试着手动链接编译的文件&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;直接用 ld 链接失败：因为ld 不知道怎么链接 printf&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;所以只能不调用 printf ，将程序改为以下内容&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;运行时出现 Segmentation Fault ，调试时发现在return时出现错误&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;如果改成以下代码&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;运行时会卡在死循环中，说明我们的程序时可以运行的&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!NOTE]&lt;/p&gt;&#xA;&lt;p&gt;为什么会出现&lt;code&gt;Segmention falut&lt;/code&gt;？&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;当函数在&lt;code&gt;renturn&lt;/code&gt;时，程序会从内存的&lt;code&gt;rsp&lt;/code&gt;寄存器中取出地址给&lt;code&gt;PC&lt;/code&gt;，作为下一条执行指令的地址，然后&lt;code&gt;rsp&lt;/code&gt;+8,栈（&lt;code&gt;rsp&lt;/code&gt;存在栈中）是向下生长的&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;当执行完错误的&lt;code&gt;return&lt;/code&gt;语句之后，PC&lt;code&gt;的地址变为了&lt;/code&gt;1&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;这意味着在执行&lt;code&gt;return&lt;/code&gt;之前，内存中的&lt;code&gt;rsp&lt;/code&gt;指向运行代码的地址，也就是上面的1，所以出现了问题&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;程序&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%a8%8b%e5%ba%8f&#34;&gt;&lt;/a&gt;&#xA;程序&#xA;&lt;/h2&gt;&lt;p&gt;程序实际上是一个状态机：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CPUState&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;uint32_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;regs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;csrs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CSR_COUNT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;uint8_t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;uint32_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mem_offset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mem_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;处理器：无情的、执行指令的&lt;strong&gt;状态机&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>测试基础</title>
      <link>http://localhost:1313/post/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80/</guid>
      <description>&lt;h1 id=&#34;测试指标&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%b5%8b%e8%af%95%e6%8c%87%e6%a0%87&#34;&gt;&lt;/a&gt;&#xA;测试指标&#xA;&lt;/h1&gt;&lt;h2 id=&#34;测试覆盖率&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%b5%8b%e8%af%95%e8%a6%86%e7%9b%96%e7%8e%87&#34;&gt;&lt;/a&gt;&#xA;测试覆盖率&#xA;&lt;/h2&gt;&lt;p&gt;测试覆盖率(（Test Coverage)是测试用例执行时，系统或代码的覆盖程度。它反映了测试是否覆盖了系统的各个方面，包括功能、代码、路径等。&lt;/p&gt;&#xA;&lt;p&gt;不同的测试覆盖率指标提供了对测试的不同层面的检查。一般来说：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;语句覆盖率&lt;/strong&gt;和&lt;strong&gt;分支覆盖率&lt;/strong&gt;是最常用的基础覆盖率，适用于大多数场景。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;路径覆盖率&lt;/strong&gt;和&lt;strong&gt;多条件覆盖率&lt;/strong&gt;适用于复杂的系统，特别是那些有大量分支和复杂条件的系统。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;函数覆盖率&lt;/strong&gt;、&lt;strong&gt;调用路径覆盖率&lt;/strong&gt;等适用于验证系统中的函数调用和路径的完整性。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;功能覆盖率&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%8a%9f%e8%83%bd%e8%a6%86%e7%9b%96%e7%8e%87&#34;&gt;&lt;/a&gt;&#xA;功能覆盖率&#xA;&lt;/h3&gt;$$&#xD;&#xA;功能覆盖率 = （已执行的功能点数量 / 总功能点数量）× 100\%&#xD;&#xA;$$&lt;p&gt;&#xA;&lt;strong&gt;应用场景&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;适用于验证系统是否实现了所有设计或需求文档中的功能。&lt;/li&gt;&#xA;&lt;li&gt;适合功能测试，确保所有业务流程、用例和需求都已测试。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;语句覆盖率&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e8%af%ad%e5%8f%a5%e8%a6%86%e7%9b%96%e7%8e%87&#34;&gt;&lt;/a&gt;&#xA;语句覆盖率&#xA;&lt;/h3&gt;$$&#xD;&#xA;语句覆盖率 = （已执行的语句数量 / 总语句数量）× 100\%&#xD;&#xA;$$&lt;p&gt;&#xA;&lt;strong&gt;应用场景&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;适用于测试代码是否执行过每一行，特别是代码逻辑简单且不复杂时。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;分支覆盖率&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%88%86%e6%94%af%e8%a6%86%e7%9b%96%e7%8e%87&#34;&gt;&lt;/a&gt;&#xA;分支覆盖率&#xA;&lt;/h3&gt;$$&#xD;&#xA;分支覆盖率 = （已执行的分支数量 / 总分支数量）× 100\%&#xD;&#xA;$$&lt;p&gt;&#xA;&lt;strong&gt;应用场景&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;适用于检查条件语句（如&lt;code&gt;if&lt;/code&gt;、&lt;code&gt;else&lt;/code&gt;）的所有可能结果是否都被覆盖。&lt;/li&gt;&#xA;&lt;li&gt;比语句覆盖率更精细，因为它考虑了条件的所有可能分支。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;条件覆盖率&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%9d%a1%e4%bb%b6%e8%a6%86%e7%9b%96%e7%8e%87&#34;&gt;&lt;/a&gt;&#xA;条件覆盖率&#xA;&lt;/h3&gt;$$&#xD;&#xA;条件覆盖率 = （已执行的条件数量 / 总条件数量）× 100\%&#xD;&#xA;$$&lt;p&gt;&#xA;&lt;strong&gt;应用场景&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;适用于对单个条件进行验证，特别是在复合条件语句中，确保每个条件都独立地进行了验证。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;路径覆盖率&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e8%b7%af%e5%be%84%e8%a6%86%e7%9b%96%e7%8e%87&#34;&gt;&lt;/a&gt;&#xA;路径覆盖率&#xA;&lt;/h3&gt;$$&#xD;&#xA;路径覆盖率 = （已执行的路径数量 / 总路径数量）× 100\%&#xD;&#xA;$$&lt;p&gt;&#xA;&lt;strong&gt;应用场景&lt;/strong&gt;：&lt;/p&gt;</description>
    </item>
    <item>
      <title>单片机的启动过程</title>
      <link>http://localhost:1313/post/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E5%A4%96%E8%AE%BE%E7%BB%84%E4%BB%B6/%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E5%A4%96%E8%AE%BE%E7%BB%84%E4%BB%B6/%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B/</guid>
      <description>&lt;h1 id=&#34;参考链接&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%8f%82%e8%80%83%e9%93%be%e6%8e%a5&#34;&gt;&lt;/a&gt;&#xA;参考链接&#xA;&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/weixin_42734533/article/details/131812546&#34;&gt;mcu 启动流程_mcu启动过程-CSDN博客&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.jianshu.com/p/57c6006e637a&#34;&gt;嵌入式开发系列教程（二） MCU启动过程 - 简书 (jianshu.com)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;启动流程&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%90%af%e5%8a%a8%e6%b5%81%e7%a8%8b&#34;&gt;&lt;/a&gt;&#xA;启动流程&#xA;&lt;/h1&gt;&lt;h2 id=&#34;mcu启动方式&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#mcu%e5%90%af%e5%8a%a8%e6%96%b9%e5%bc%8f&#34;&gt;&lt;/a&gt;&#xA;MCU启动方式&#xA;&lt;/h2&gt;&lt;p&gt;MCU有三种启动方式：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;flash启动（最常用）：stm32的flash能够擦写数十万次，用户通过JTAG或SWD模式，将程序下载至此，重新启动从此处启动&lt;/li&gt;&#xA;&lt;li&gt;sytem memory （系统存储器启动）：系统存储器是芯片内的一块特定的区域，系统存储器中预置了一段bootloader,bootloder将程序下载到flash区，通过flash启动&lt;/li&gt;&#xA;&lt;li&gt;内嵌SRAM启动：从内存中直接启动代码，避免因小修改反复擦写flash内存，一般用于高速调试&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;mcu程序启动执行过程&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#mcu%e7%a8%8b%e5%ba%8f%e5%90%af%e5%8a%a8%e6%89%a7%e8%a1%8c%e8%bf%87%e7%a8%8b&#34;&gt;&lt;/a&gt;&#xA;MCU程序启动执行过程&#xA;&lt;/h2&gt;&lt;p&gt;对于CortexM3来说，启动过程如下：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;从&lt;code&gt;0x0000 0000&lt;/code&gt;地址处取出MSP的初始值&lt;/li&gt;&#xA;&lt;li&gt;从&lt;code&gt;0x0000 0004&lt;/code&gt;地址处取得PC指针初始值，然后执行用户代码。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Vector Table&lt;/code&gt;指的是中断向量表，&lt;code&gt;Reset Handler&lt;/code&gt;指的是复位向量。从图中我们看出&lt;code&gt;Reset Handler&lt;/code&gt;不过是&lt;code&gt;0x0000 0004&lt;/code&gt;地址的一个别名，他其中放置的便是==CPU上电后要执行的第一条用户代码指令的地址。将这个值加载到PC指针上，cpu跳转执行用户代码。==&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/11/6_10_21_2_202411061021360.png&#34; alt=&#34;M3启动过程&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/08/19_8_25_45_202408190825723.png&#34; alt=&#34;堆栈&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!important]&lt;/p&gt;&#xA;&lt;p&gt;程序运行的第一条地址放在了Reset Handler中&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;以下是stm32f103的启动方式调用：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/11/6_10_28_41_202411061028065.png&#34; alt=&#34;不同的启动方式的地址映射&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;Boot Space&lt;/code&gt;是对一段内存空间的别名，根据不同的启动条件，映射到不同的存储设备上，但是访问地址一定是&lt;code&gt;0x0000 0000 - 0x0005 FFFF&lt;/code&gt;这个区间&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;当从SRAM启动时，&lt;code&gt;Boot Space&lt;/code&gt;映射到SRAM上，即&lt;code&gt;0x0000 0000&lt;/code&gt;和&lt;code&gt;0x2000 0000&lt;/code&gt;两个地址是指的同一块空间&lt;/li&gt;&#xA;&lt;li&gt;当从Flash启动时，&lt;code&gt;Boot Space&lt;/code&gt;映射到Flash上&lt;/li&gt;&#xA;&lt;li&gt;当从System Memory启动（即bootloader）时，&lt;code&gt;Boot Space&lt;/code&gt;映射到st公司保留的System Memory上，这是一段ROM，烧写有st的bootloader代码&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;以上，假设单片机从flash启动，则&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;从&lt;code&gt;0x0000 0000 -&amp;gt; 0x08000 0000&lt;/code&gt;地址处取出MSP的初始值&lt;/li&gt;&#xA;&lt;li&gt;从&lt;code&gt;0x0000 0004 -&amp;gt; 0x08000 0004&lt;/code&gt;地址处取出PC指针初始值，然后执行用户代码&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;中断向量&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e4%b8%ad%e6%96%ad%e5%90%91%e9%87%8f&#34;&gt;&lt;/a&gt;&#xA;中断向量&#xA;&lt;/h2&gt;&lt;p&gt;中断执行过程如下：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/11/6_10_40_38_202411061040712.png&#34; alt=&#34;中断&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>二进制文件</title>
      <link>http://localhost:1313/post/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6/</guid>
      <description>&lt;h1 id=&#34;bin&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#bin&#34;&gt;&lt;/a&gt;&#xA;Bin&#xA;&lt;/h1&gt;&lt;p&gt;BIN文件是纯二进制文件，没有固定的结构或元数据。==当想要将二进制文件烧录进单片机时，不需要再对数据进行处理==，也就是说，我们使用&lt;a href=&#34;https://github.com/WerWolv/ImHex&#34;&gt;&lt;!-- raw HTML omitted --&gt;ImHex&lt;!-- raw HTML omitted --&gt;&lt;/a&gt;打开的原始数据是什么样的，那么我们查看Flash中的内容就是什么样的。&lt;/p&gt;&#xA;&lt;h1 id=&#34;hex&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#hex&#34;&gt;&lt;/a&gt;&#xA;Hex&#xA;&lt;/h1&gt;&lt;p&gt;&lt;code&gt;Hex&lt;/code&gt; 全称 (&lt;code&gt;Intel HEX&lt;/code&gt;)文件是由一行行符合&lt;code&gt;Intel HEX&lt;/code&gt;文件格式的文本所构成的&lt;code&gt;ASCII&lt;/code&gt;文本文件。&lt;/p&gt;&#xA;&lt;p&gt;在&lt;code&gt;Intel HEX&lt;/code&gt;文件中，每一行包含一个&lt;code&gt;HEX&lt;/code&gt;记录。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2025/02/14_9_27_30_202502140927183.png&#34; alt=&#34;ASCII表示&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!note]&lt;/p&gt;&#xA;&lt;p&gt;注意：我们使用txt文件打开的时候显示的是ASCII表示，也就是一个字符串。实际上一行数据的原始数据如下图左侧所示，使用txt打开的如右图所示。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2025/02/14_9_28_45_202502140928978.png&#34; alt=&#34;Imhex打开&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;下面会用源数据表示左侧的数据，用ASCII表示右侧数据。&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;参考链接&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%8f%82%e8%80%83%e9%93%be%e6%8e%a5&#34;&gt;&lt;/a&gt;&#xA;参考链接&#xA;&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/Bruce_Qee/article/details/119089365&#34;&gt;单片机烧录用的hex文件，文件格式解析（转载）_.hex用什么软件打开-CSDN博客&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://www.interlog.com/~speff/usefulinfo/Hexfrmt.pdf&#34;&gt;Intel Hex Format&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;行结构&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e8%a1%8c%e7%bb%93%e6%9e%84&#34;&gt;&lt;/a&gt;&#xA;行结构&#xA;&lt;/h2&gt;&lt;p&gt;一行Hex数据由以下结构组成：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[Start code][Byte count][Address][Record type][Data][Checksum]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;参数&lt;/th&gt;&#xA;          &lt;th&gt;长度&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Start code&lt;/td&gt;&#xA;          &lt;td&gt;-&lt;/td&gt;&#xA;          &lt;td&gt;每行都由冒号开头，这是固定的&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Byte count&lt;/td&gt;&#xA;          &lt;td&gt;1 字节&lt;/td&gt;&#xA;          &lt;td&gt;本行数据的长度,最大值是&lt;code&gt;255 (0xFF)&lt;/code&gt;.&lt;code&gt; 16 (0x10)&lt;/code&gt; 和&lt;code&gt;32 (0x20)&lt;/code&gt;是最常用的&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Address&lt;/td&gt;&#xA;          &lt;td&gt;2字节&lt;/td&gt;&#xA;          &lt;td&gt;Memory数据开始16-bit地址偏移。物理地址通常是有这个偏移加上基地址&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Record type&lt;/td&gt;&#xA;          &lt;td&gt;1 字节&lt;/td&gt;&#xA;          &lt;td&gt;表示不同数据段的含义&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Data&lt;/td&gt;&#xA;          &lt;td&gt;可变长度&lt;/td&gt;&#xA;          &lt;td&gt;具体数据 N Byte ，表示本行中数据字节的数量&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Checksum&lt;/td&gt;&#xA;          &lt;td&gt;1 字节&lt;/td&gt;&#xA;          &lt;td&gt;校验值&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!tip]&lt;/p&gt;</description>
    </item>
    <item>
      <title>链接文件</title>
      <link>http://localhost:1313/post/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E9%93%BE%E6%8E%A5%E6%96%87%E4%BB%B6/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E9%93%BE%E6%8E%A5%E6%96%87%E4%BB%B6/</guid>
      <description>&lt;h1 id=&#34;ld&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#ld&#34;&gt;&lt;/a&gt;&#xA;LD&#xA;&lt;/h1&gt;&lt;p&gt;&lt;code&gt;LD&lt;/code&gt; 文件是 GNU 工具链（如 GCC）使用的链接器脚本，用于指定如何将程序的各个部分（如代码段、数据段等）放置到目标设备的内存中。LD 脚本的语法非常灵活，支持详细的内存区域分配、段定义以及符号管理。&lt;/p&gt;&#xA;&lt;h2 id=&#34;基本结构&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%9f%ba%e6%9c%ac%e7%bb%93%e6%9e%84&#34;&gt;&lt;/a&gt;&#xA;基本结构&#xA;&lt;/h2&gt;&lt;p&gt;LD 链接脚本主要由以下几部分组成：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;全局声明和变量&lt;/strong&gt;：设置内存区域和段的分配。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;段定义（SECTIONS）&lt;/strong&gt;：定义程序的各个段（如 &lt;code&gt;.text&lt;/code&gt;, &lt;code&gt;.data&lt;/code&gt;, &lt;code&gt;.bss&lt;/code&gt; 等）在内存中的位置。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;符号管理&lt;/strong&gt;：可以设置一些符号（如 &lt;code&gt;__start&lt;/code&gt;、&lt;code&gt;__end&lt;/code&gt;）的地址。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;内存区域定义&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%86%85%e5%ad%98%e5%8c%ba%e5%9f%9f%e5%ae%9a%e4%b9%89&#34;&gt;&lt;/a&gt;&#xA;内存区域定义&#xA;&lt;/h3&gt;&lt;p&gt;使用 &lt;code&gt;MEMORY&lt;/code&gt; 关键字来定义目标设备的内存区域。每个内存区域指定起始地址（&lt;code&gt;ORIGIN&lt;/code&gt;）和长度（&lt;code&gt;LENGTH&lt;/code&gt;）。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;MEMORY&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    FLASH (rx) : ORIGIN = 0x08000000, LENGTH = 1M&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    RAM (rw) : ORIGIN = 0x20000000, LENGTH = 128K&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;FLASH&lt;/code&gt; 区域指定为可读 (&lt;code&gt;r&lt;/code&gt;) 和可执行 (&lt;code&gt;x&lt;/code&gt;)。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;RAM&lt;/code&gt; 区域指定为可读 (&lt;code&gt;r&lt;/code&gt;) 和可写 (&lt;code&gt;w&lt;/code&gt;)。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;段定义&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%ae%b5%e5%ae%9a%e4%b9%89&#34;&gt;&lt;/a&gt;&#xA;段定义&#xA;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;SECTIONS&lt;/code&gt; 用来定义程序的各个段及其如何映射到内存中。每个段由其名称（如 &lt;code&gt;.text&lt;/code&gt;、&lt;code&gt;.data&lt;/code&gt; 等）定义，并可以指定要放置的内存区域。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;SECTIONS&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    .text :&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        *(.text)         // 所有 .text 段的内容&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    } &amp;gt; FLASH              // 放置到 FLASH 区域&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    .data :&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        *(.data)         // 所有 .data 段的内容&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    } &amp;gt; RAM               // 放置到 RAM 区域&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    .bss :&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        *(.bss)          // 所有 .bss 段的内容&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    } &amp;gt; RAM               // 放置到 RAM 区域&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    .stack :&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        *(.stack)        // 堆栈区域&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    } &amp;gt; RAM               // 放置到 RAM 区域&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;*()&lt;/code&gt; 用于包含所有具有相应段名的输入部分。例如，&lt;code&gt;*(.text)&lt;/code&gt; 包含所有 &lt;code&gt;.text&lt;/code&gt; 段的内容。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;&amp;gt; MEMORY_REGION&lt;/code&gt; 用于将段放置到指定的内存区域。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;特殊符号定义&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%89%b9%e6%ae%8a%e7%ac%a6%e5%8f%b7%e5%ae%9a%e4%b9%89&#34;&gt;&lt;/a&gt;&#xA;特殊符号定义&#xA;&lt;/h3&gt;&lt;p&gt;可以在链接器脚本中定义特殊符号，来标记某些特定的位置（如段的开始和结束）。&lt;/p&gt;</description>
    </item>
    <item>
      <title>软件ji&#39;chu</title>
      <link>http://localhost:1313/post/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E8%BD%AF%E4%BB%B6%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E8%BD%AF%E4%BB%B6%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
      <description>&lt;h1 id=&#34;参考链接&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%8f%82%e8%80%83%e9%93%be%e6%8e%a5&#34;&gt;&lt;/a&gt;&#xA;参考链接&#xA;&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/reQv2l8EBYWu1P0nDd73QA&#34;&gt;这些嵌入式知识助 你秋招，也助你进阶 (qq.com)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;autosar架构&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#autosar%e6%9e%b6%e6%9e%84&#34;&gt;&lt;/a&gt;&#xA;AUTOSAR架构&#xA;&lt;/h1&gt;&lt;p&gt;AUTOSAR（Automotive Open System Architecture）是一个用于开发汽车电子系统的软件架构标准。它通过标准化的架构提高了软件的可重用性和可移植性，减少了开发时间和成本。以下是AUTOSAR架构的详细描述：&lt;/p&gt;&#xA;&lt;h3 id=&#34;autosar架构概述&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#autosar%e6%9e%b6%e6%9e%84%e6%a6%82%e8%bf%b0&#34;&gt;&lt;/a&gt;&#xA;AUTOSAR架构概述&#xA;&lt;/h3&gt;&lt;p&gt;AUTOSAR架构由多个层次组成，包括应用软件层（Application Layer）、运行时环境（Runtime Environment, RTE）和基础软件层（Basic Software, BSW）。这些层次共同工作，提供完整的汽车电子系统解决方案。&lt;/p&gt;&#xA;&lt;h3 id=&#34;autosar层次结构&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#autosar%e5%b1%82%e6%ac%a1%e7%bb%93%e6%9e%84&#34;&gt;&lt;/a&gt;&#xA;AUTOSAR层次结构&#xA;&lt;/h3&gt;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Application Layer（应用层，ASW）&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;包含所有的应用程序组件，这些组件定义了具体的功能，如传感器数据处理、控制算法等。&lt;/li&gt;&#xA;&lt;li&gt;应用组件通过接口与RTE进行通信，而不是直接与硬件交互。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Runtime Environment (RTE)（运行时环境）&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;作为应用层和基础软件层之间的抽象层，提供标准化的接口。&lt;/li&gt;&#xA;&lt;li&gt;管理应用组件之间以及应用组件与基础软件之间的通信。&lt;/li&gt;&#xA;&lt;li&gt;确保组件的独立性，使得应用软件能够在不同的硬件平台上运行。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Basic Software (BSW)（基础软件层）&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;包含所有的基础服务和驱动程序，为应用软件提供硬件无关的标准化服务。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;BSW&lt;/strong&gt;进一步划分为四个主要部分：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Microcontroller Abstraction Layer (MCAL)（微控制器抽象层）&lt;/strong&gt;：提供对微控制器和外设的抽象接口。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;ECU Abstraction Layer（ECU抽象层）&lt;/strong&gt;：实现ECU级别的硬件抽象，提供对外围设备的访问。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Service Layer（服务层）&lt;/strong&gt;：提供系统服务，如操作系统、存储管理、诊断服务等。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Complex Device Drivers（复杂设备驱动）&lt;/strong&gt;：处理复杂的硬件设备，不适合通过MCAL和ECU抽象层实现。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;autosar架构图示&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#autosar%e6%9e%b6%e6%9e%84%e5%9b%be%e7%a4%ba&#34;&gt;&lt;/a&gt;&#xA;AUTOSAR架构图示&#xA;&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;---------------------------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;|        Application Layer      |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;|          (ASW)                |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;---------------------------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;|     Runtime Environment (RTE)  |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;---------------------------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;|          Basic Software        |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;|             (BSW)              |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;|  - Microcontroller Abstraction |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;|    Layer (MCAL)                |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;|  - ECU Abstraction Layer       |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;|  - Services Layer              |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;|  - Complex Device Drivers      |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;---------------------------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;|        Hardware Layer          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;---------------------------------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;主要特点和优势&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e4%b8%bb%e8%a6%81%e7%89%b9%e7%82%b9%e5%92%8c%e4%bc%98%e5%8a%bf&#34;&gt;&lt;/a&gt;&#xA;主要特点和优势&#xA;&lt;/h3&gt;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;模块化&lt;/strong&gt;：AUTOSAR架构将系统分成多个独立的模块，允许并行开发和测试。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;可重用性&lt;/strong&gt;：标准化的接口和组件设计提高了代码的可重用性，减少了重复开发的工作量。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;可移植性&lt;/strong&gt;：应用层组件通过RTE与硬件层交互，使得应用软件可以在不同的硬件平台上运行。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;可扩展性&lt;/strong&gt;：灵活的架构设计允许添加新功能和扩展现有功能，而不需要对整个系统进行重大修改。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;标准化&lt;/strong&gt;：提供了统一的标准和规范，简化了不同供应商和开发团队之间的协作。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;应用案例&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%ba%94%e7%94%a8%e6%a1%88%e4%be%8b&#34;&gt;&lt;/a&gt;&#xA;应用案例&#xA;&lt;/h3&gt;&lt;p&gt;AUTOSAR广泛应用于现代汽车电子系统的开发，如发动机控制单元（ECU）、车身控制模块（BCM）、高级驾驶辅助系统（ADAS）等。通过采用AUTOSAR架构，汽车制造商和供应商能够更高效地开发高质量的软件系统，并应对不断变化的市场需求和技术挑战。&lt;/p&gt;</description>
    </item>
    <item>
      <title>时钟</title>
      <link>http://localhost:1313/post/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E5%A4%96%E8%AE%BE%E7%BB%84%E4%BB%B6/%E6%97%B6%E9%92%9F/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E5%A4%96%E8%AE%BE%E7%BB%84%E4%BB%B6/%E6%97%B6%E9%92%9F/</guid>
      <description>&lt;h1 id=&#34;参考链接&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%8f%82%e8%80%83%e9%93%be%e6%8e%a5&#34;&gt;&lt;/a&gt;&#xA;参考链接&#xA;&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/dengjin20104042056/article/details/108291692&#34;&gt;【STM32】时钟_stm32f405 定时器时钟-CSDN博客&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;时钟相关缩写&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%97%b6%e9%92%9f%e7%9b%b8%e5%85%b3%e7%bc%a9%e5%86%99&#34;&gt;&lt;/a&gt;&#xA;时钟相关缩写&#xA;&lt;/h1&gt;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;RCC&lt;/strong&gt; - Reset and Clock Control（复位与时钟控制）&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;RTC&lt;/strong&gt; - Real-Time Clock（实时时钟）&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;BKP&lt;/strong&gt; - Backup Registers（备份寄存器）&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;PWR&lt;/strong&gt; - Power Control（电源控制）&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;HCLK&lt;/strong&gt; - AHB Clock（AHB总线时钟）&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;USBCLK&lt;/strong&gt; - USB Clock（USB时钟）&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;LSCO&lt;/strong&gt; - Low Speed Clock Output（低速时钟输出）&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;MSI&lt;/strong&gt; - Multi-Speed Internal Clock（多速内部时钟）&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;CSS&lt;/strong&gt; - Clock Security System（时钟安全系统）&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;LPTIM&lt;/strong&gt; - Low Power Timer（低功耗定时器）&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;WDG&lt;/strong&gt; - Watchdog Timer（看门狗定时器）&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;HSE&lt;/strong&gt; - High-Speed External Clock（高速外部时钟）&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;HSI&lt;/strong&gt; - High-Speed Internal Clock（高速内部时钟）&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;LSE&lt;/strong&gt; - Low-Speed External Clock（低速外部时钟）&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;LSI&lt;/strong&gt; - Low-Speed Internal Clock（低速内部时钟）&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;PLL&lt;/strong&gt; - Phase-Locked Loop（锁相环）&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;SYSCLK&lt;/strong&gt; - System Clock（系统时钟）&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;PCLK&lt;/strong&gt; - Peripheral Clock（外设时钟）&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;APB&lt;/strong&gt; - Advanced Peripheral Bus（高级外设总线）&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;AHB&lt;/strong&gt; - Advanced High-performance Bus（高级高性能总线）&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h1 id=&#34;概念&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%a6%82%e5%bf%b5&#34;&gt;&lt;/a&gt;&#xA;概念&#xA;&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/09/5_15_26_11_202409051526329.png&#34; alt=&#34;时钟信号&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>算法</title>
      <link>http://localhost:1313/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/%E7%AE%97%E6%B3%95/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/%E7%AE%97%E6%B3%95/</guid>
      <description>&lt;h1 id=&#34;参考链接&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%8f%82%e8%80%83%e9%93%be%e6%8e%a5&#34;&gt;&lt;/a&gt;&#xA;参考链接&#xA;&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://www.hello-algo.com/&#34;&gt;Hello 算法 (hello-algo.com)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;复杂度分析&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%a4%8d%e6%9d%82%e5%ba%a6%e5%88%86%e6%9e%90&#34;&gt;&lt;/a&gt;&#xA;复杂度分析&#xA;&lt;/h1&gt;&lt;h2 id=&#34;迭代&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e8%bf%ad%e4%bb%a3&#34;&gt;&lt;/a&gt;&#xA;迭代&#xA;&lt;/h2&gt;&lt;p&gt;迭代（iteration）是一种重复执行某个任务的控制结构。在迭代中，程序会在满足一定的条件下重复执行某段代码，直到这个条件不再满足。&lt;/p&gt;&#xA;&lt;h3 id=&#34;for循环&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#for%e5%be%aa%e7%8e%af&#34;&gt;&lt;/a&gt;&#xA;for循环&#xA;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;for&lt;/code&gt; 循环是最常见的迭代形式之一，&lt;strong&gt;适合在预先知道迭代次数时使用&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;p&gt;以下函数基于 &lt;code&gt;for&lt;/code&gt; 循环实现了求和 1+2+⋯+𝑛 ，求和结果使用变量 &lt;code&gt;res&lt;/code&gt; 记录。需要注意的是，Python 中 &lt;code&gt;range(a, b)&lt;/code&gt; 对应的区间是“左闭右开”的，对应的遍历范围为 𝑎,𝑎+1,…,𝑏−1 ：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/* for 循环 */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;forLoop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 循环求和 1, 2, ..., n-1, n&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/11/18_8_16_26_202411180816252.png&#34; alt=&#34;求和流程图&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;此求和函数的操作数量与输入数据大小 𝑛 成正比，或者说成“线性关系”。实际上，&lt;strong&gt;时间复杂度描述的就是这个“线性关系”&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;h3 id=&#34;while循环&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#while%e5%be%aa%e7%8e%af&#34;&gt;&lt;/a&gt;&#xA;while循环&#xA;&lt;/h3&gt;&lt;p&gt;与 &lt;code&gt;for&lt;/code&gt; 循环类似，&lt;code&gt;while&lt;/code&gt; 循环也是一种实现迭代的方法。在 &lt;code&gt;while&lt;/code&gt; 循环中，程序每轮都会先检查条件，如果条件为真，则继续执行，否则就结束循环。&lt;/p&gt;&#xA;&lt;p&gt;下面我们用 &lt;code&gt;while&lt;/code&gt; 循环来实现求和 1+2+⋯+𝑛 ：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/* while 循环 */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;whileLoop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 初始化条件变量&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// 循环求和 1, 2, ..., n-1, n&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 更新条件变量&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;while&lt;/code&gt; 循环比 &lt;code&gt;for&lt;/code&gt; 循环的自由度更高&lt;/strong&gt;。在 &lt;code&gt;while&lt;/code&gt; 循环中，我们可以自由地设计条件变量的初始化和更新步骤。&lt;/p&gt;</description>
    </item>
    <item>
      <title>项目文件树</title>
      <link>http://localhost:1313/post/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E9%A1%B9%E7%9B%AE%E6%96%87%E4%BB%B6%E6%A0%91%E7%BB%93%E6%9E%84/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E9%A1%B9%E7%9B%AE%E6%96%87%E4%BB%B6%E6%A0%91%E7%BB%93%E6%9E%84/</guid>
      <description>&lt;h1 id=&#34;缩写&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%bc%a9%e5%86%99&#34;&gt;&lt;/a&gt;&#xA;缩写&#xA;&lt;/h1&gt;&lt;p&gt;该项目文件树参考AUTOSAR结构，所以为了便于理解，此处展示部分缩写的全称：&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;缩写&lt;/th&gt;&#xA;          &lt;th&gt;全称&lt;/th&gt;&#xA;          &lt;th&gt;描述&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;AUTOSAR&lt;/td&gt;&#xA;          &lt;td&gt;AUTomotive Open System ARchitecture&lt;/td&gt;&#xA;          &lt;td&gt;汽车开放系统架构，是汽车软件开发的标准框架。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ASW&lt;/td&gt;&#xA;          &lt;td&gt;Application Software&lt;/td&gt;&#xA;          &lt;td&gt;应用软件，主要负责实现特定功能的业务逻辑。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;BSW&lt;/td&gt;&#xA;          &lt;td&gt;Basic Software&lt;/td&gt;&#xA;          &lt;td&gt;基础软件，负责底层硬件控制和通用服务的实现。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;BSP&lt;/td&gt;&#xA;          &lt;td&gt;Board Support Package&lt;/td&gt;&#xA;          &lt;td&gt;板级支持包，包含硬件初始化、驱动和相关工具。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;HAL&lt;/td&gt;&#xA;          &lt;td&gt;Hardware Abstraction Layer&lt;/td&gt;&#xA;          &lt;td&gt;硬件抽象层，提供对硬件的抽象访问接口。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;MCAL&lt;/td&gt;&#xA;          &lt;td&gt;Microcontroller Abstraction Layer&lt;/td&gt;&#xA;          &lt;td&gt;微控制器抽象层，提供对芯片外设的直接访问接口。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;RTE&lt;/td&gt;&#xA;          &lt;td&gt;Run-Time Environment&lt;/td&gt;&#xA;          &lt;td&gt;运行时环境，负责 ASW 与 BSW 的通信管理。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;UDS&lt;/td&gt;&#xA;          &lt;td&gt;Unified Diagnostic Services&lt;/td&gt;&#xA;          &lt;td&gt;统一诊断服务协议（ISO 14229），用于 ECU 的诊断通信。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Dcm&lt;/td&gt;&#xA;          &lt;td&gt;Diagnostic Communication Manager&lt;/td&gt;&#xA;          &lt;td&gt;诊断通信管理模块，实现 UDS 服务的解析和处理。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Dem&lt;/td&gt;&#xA;          &lt;td&gt;Diagnostic Event Manager&lt;/td&gt;&#xA;          &lt;td&gt;诊断事件管理模块，负责故障码存储和管理。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;PduR&lt;/td&gt;&#xA;          &lt;td&gt;Protocol Data Unit Router&lt;/td&gt;&#xA;          &lt;td&gt;协议数据单元路由模块，负责数据路由。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;CanTp&lt;/td&gt;&#xA;          &lt;td&gt;CAN Transport Protocol&lt;/td&gt;&#xA;          &lt;td&gt;CAN 传输协议模块，用于实现 UDS 消息的传输。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;NvM&lt;/td&gt;&#xA;          &lt;td&gt;Non-Volatile Memory Manager&lt;/td&gt;&#xA;          &lt;td&gt;非易失性内存管理模块，负责数据的持久化存储。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;SoAd&lt;/td&gt;&#xA;          &lt;td&gt;Socket Adapter&lt;/td&gt;&#xA;          &lt;td&gt;套接字适配器，用于实现基于 TCP/IP 的通信协议（如 DoIP）。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ECU&lt;/td&gt;&#xA;          &lt;td&gt;Electronic Control Unit&lt;/td&gt;&#xA;          &lt;td&gt;电子控制单元，是汽车的嵌入式控制器。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;GPIO&lt;/td&gt;&#xA;          &lt;td&gt;General Purpose Input/Output&lt;/td&gt;&#xA;          &lt;td&gt;通用输入输出，硬件外设的一种。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;UART&lt;/td&gt;&#xA;          &lt;td&gt;Universal Asynchronous Receiver-Transmitter&lt;/td&gt;&#xA;          &lt;td&gt;通用异步收发器，用于串行通信。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;SPI&lt;/td&gt;&#xA;          &lt;td&gt;Serial Peripheral Interface&lt;/td&gt;&#xA;          &lt;td&gt;串行外设接口，用于高性能串行通信。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;I2C&lt;/td&gt;&#xA;          &lt;td&gt;Inter-Integrated Circuit&lt;/td&gt;&#xA;          &lt;td&gt;一种常用的两线串行通信协议。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;CAN&lt;/td&gt;&#xA;          &lt;td&gt;Controller Area Network&lt;/td&gt;&#xA;          &lt;td&gt;控制器局域网，是汽车通信总线的一种。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;FlexRay&lt;/td&gt;&#xA;          &lt;td&gt;Flexible Ray&lt;/td&gt;&#xA;          &lt;td&gt;一种高速汽车通信协议，用于安全关键应用。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;LIN&lt;/td&gt;&#xA;          &lt;td&gt;Local Interconnect Network&lt;/td&gt;&#xA;          &lt;td&gt;局域互连网络，低成本汽车通信协议。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;DoIP&lt;/td&gt;&#xA;          &lt;td&gt;Diagnostics over Internet Protocol&lt;/td&gt;&#xA;          &lt;td&gt;基于 IP 协议的诊断通信。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;OS&lt;/td&gt;&#xA;          &lt;td&gt;Operating System&lt;/td&gt;&#xA;          &lt;td&gt;操作系统，提供任务调度和资源管理功能。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;SWC&lt;/td&gt;&#xA;          &lt;td&gt;Software Component&lt;/td&gt;&#xA;          &lt;td&gt;软件组件，用于实现应用逻辑，是 ASW 层的核心构成模块。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;概览&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%a6%82%e8%a7%88&#34;&gt;&lt;/a&gt;&#xA;概览&#xA;&lt;/h1&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├─.vscode&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├─ASW&#x9;&#x9;&#x9;&#x9;此处存放与硬件平台无关代码&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├─BSW&#x9;&#x9;&#x9;&#x9;存放与硬件相关代码，所以子文件夹需要区分不同芯片型号&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├─BOOT&#x9;&#x9;&#x9;&#x9;存放BOOT相关代码&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├─Documents&#x9;&#x9;&#x9;存放项目相关的文档，为了方便使用，最好将使用的芯片的手册放于此处&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├─OS&#x9;&#x9;&#x9;&#x9;存放和系统相关的，如文件系统、操作系统、调度系统等等&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├─Output&#x9;&#x9;&#x9;存放输出文件，请在设置Keil和IAR等软件时，选用输出到此文件夹，方便管理，并且增强Project中的整洁性&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;└─Project&#x9;&#x9;&#x9;存放和工程相关的文件树，如KEIL、IAR、SOURCEINSIGHT、TSMATSER、CANoe、JFLASH，与项目相关的工程请放置此处&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;[!important]&lt;/p&gt;</description>
    </item>
    <item>
      <title>校验</title>
      <link>http://localhost:1313/post/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%A0%A1%E9%AA%8C/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%A0%A1%E9%AA%8C/</guid>
      <description>&lt;h1 id=&#34;校验和-checksum&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%a0%a1%e9%aa%8c%e5%92%8c-checksum&#34;&gt;&lt;/a&gt;&#xA;校验和 (Checksum)&#xA;&lt;/h1&gt;&lt;h2 id=&#34;参考链接&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%8f%82%e8%80%83%e9%93%be%e6%8e%a5&#34;&gt;&lt;/a&gt;&#xA;参考链接&#xA;&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/pikacq/p/18408076&#34;&gt;CheckSum算法&amp;ndash;又名累加和校验算法 - 皮卡成球 - 博客园&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;原理及步骤&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%8e%9f%e7%90%86%e5%8f%8a%e6%ad%a5%e9%aa%a4&#34;&gt;&lt;/a&gt;&#xA;原理及步骤&#xA;&lt;/h2&gt;&lt;p&gt;**校验和（Checksum）**是网络协议使用的数据错误检测方法，并且被认为比LRC（纵向冗余校验，Longitudinal Redundancy Check，LRC），VRC和CRC（循环冗余校验（Cyclic Redundancy Codes，CRC））更可靠。此方法在发送方使用校验和生成器，在接收方使用校验和校验器。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;累加和校验算法的实现&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;code&gt;发送&lt;/code&gt;方&lt;/em&gt;：对要数据累加，得到一个数据和，对和求反，即得到我们的校验值。然后把要发的数据和这个校验值一起发送给接收方。&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;code&gt;接受&lt;/code&gt;方&lt;/em&gt;：对接收的数据（包括校验和）进行累加，然后加1，如果得到0，那么说明数据没有出现传输错误。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;注意，此处发送方和接收方用于保存累加结果的类型一定要一致，否则加1就无法实现溢出从而无法得到0，校验就会无效。&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;步骤&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;校验数据以16bit为单位进行累加求和，校验数据需为偶字节数（不然无法以16bit为累加单位），奇字节数末尾填充0变为偶字节数；&lt;/li&gt;&#xA;&lt;li&gt;累加和超过16bit，产生进位，将进位当作高16bit，其他数为低16bit，进行相加；&lt;/li&gt;&#xA;&lt;li&gt;循环步骤2，直到没有进位产生为止，得到sum值&lt;/li&gt;&#xA;&lt;li&gt;累加和取反得到校验和，即checksum值，存入数据的checksum字段即可。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!important]&lt;/p&gt;&#xA;&lt;p&gt;CheckSum取反主要原理是：&lt;/p&gt;&#xA;&lt;p&gt;==原码+反码+1 = 0==&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;栗子&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%a0%97%e5%ad%90&#34;&gt;&lt;/a&gt;&#xA;栗子&#xA;&lt;/h2&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;八位保存累加和：&lt;/p&gt;&#xA;&lt;p&gt;需要发送数据(8bit 2进制)： 10101001 00111001 00001010&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;code&gt;奇字节补0:10101001 00111001 00001010 00000000&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;10101001 + 00111001 + 00001010 + 00000000 = 11101100(sum值)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;~11101100 = 00010011(checksum值)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;所以发送的数据就是： 10101001 00111001 00001010 00010011&lt;/li&gt;&#xA;&lt;li&gt;接收方接收到的数据是： 10101001 00111001 00001010 00010011&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;10101001 + 00111001 + 00001010 + 00010011 = 11111111(sum值)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;~11111111 = 00000000(结果是0，校验完成，没有错误)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;十六位保存累加和：&lt;/p&gt;</description>
    </item>
    <item>
      <title>中断</title>
      <link>http://localhost:1313/post/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E5%A4%96%E8%AE%BE%E7%BB%84%E4%BB%B6/%E4%B8%AD%E6%96%AD/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E5%A4%96%E8%AE%BE%E7%BB%84%E4%BB%B6/%E4%B8%AD%E6%96%AD/</guid>
      <description>&lt;h1 id=&#34;概述&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%a6%82%e8%bf%b0&#34;&gt;&lt;/a&gt;&#xA;概述&#xA;&lt;/h1&gt;&lt;p&gt;打断CPU执行正常的程序，转而处理紧急程序，然后返回原暂停的程序继续运行，就叫中断&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/08/28_10_46_28_202408281046891.png&#34; alt=&#34;中断举例&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;中断的作用和意义&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e4%b8%ad%e6%96%ad%e7%9a%84%e4%bd%9c%e7%94%a8%e5%92%8c%e6%84%8f%e4%b9%89&#34;&gt;&lt;/a&gt;&#xA;中断的作用和意义&#xA;&lt;/h2&gt;&lt;ol&gt;&#xA;&lt;li&gt;实时控制:在确定时间内对相应事件作出响应，如：温度监控&lt;/li&gt;&#xA;&lt;li&gt;故障处理:检测到故障，需要第一时间处理，如：电梯门夹人了&lt;/li&gt;&#xA;&lt;li&gt;数据传输:不确定数据何时会来，如：串口数据接收&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!IMPORTANT]&lt;/p&gt;&#xA;&lt;p&gt;中断的意义：高效处理紧急程序，不会一直占用CPU资源&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;中断的外部简图&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e4%b8%ad%e6%96%ad%e7%9a%84%e5%a4%96%e9%83%a8%e7%ae%80%e5%9b%be&#34;&gt;&lt;/a&gt;&#xA;中断的外部简图&#xA;&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/08/28_10_49_5_202408281049800.png&#34; alt=&#34;中断的外部简图&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;执行流程&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%89%a7%e8%a1%8c%e6%b5%81%e7%a8%8b&#34;&gt;&lt;/a&gt;&#xA;执行流程&#xA;&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/08/28_10_49_40_202408281049592.png&#34; alt=&#34;中断的执行流程&#34;&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;nvic&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#nvic&#34;&gt;&lt;/a&gt;&#xA;NVIC&#xA;&lt;/h1&gt;&lt;h2 id=&#34;基本概念&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%9f%ba%e6%9c%ac%e6%a6%82%e5%bf%b5&#34;&gt;&lt;/a&gt;&#xA;基本概念&#xA;&lt;/h2&gt;&lt;p&gt;用于统一分配中断优先级和管理中断的&lt;/p&gt;&#xA;&lt;p&gt;==Nested vectored interrupt controller==,嵌套向量中断控制器，属于内核(M3/4/7)&lt;/p&gt;&#xA;&lt;p&gt;NVIC支持：256个中断(16内核+240外部)，支持：256个优先级，允许裁剪！&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;STM32型号&lt;/th&gt;&#xA;          &lt;th&gt;内核中断&lt;/th&gt;&#xA;          &lt;th&gt;外部中断&lt;/th&gt;&#xA;          &lt;th&gt;中断优先级&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;STM32F103xx&lt;/td&gt;&#xA;          &lt;td&gt;10&lt;/td&gt;&#xA;          &lt;td&gt;60&lt;/td&gt;&#xA;          &lt;td&gt;16&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;STM32F407xx&lt;/td&gt;&#xA;          &lt;td&gt;10&lt;/td&gt;&#xA;          &lt;td&gt;82&lt;/td&gt;&#xA;          &lt;td&gt;16&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;STM32F429xx&lt;/td&gt;&#xA;          &lt;td&gt;10&lt;/td&gt;&#xA;          &lt;td&gt;91&lt;/td&gt;&#xA;          &lt;td&gt;16&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;STM32F750xx&lt;/td&gt;&#xA;          &lt;td&gt;10&lt;/td&gt;&#xA;          &lt;td&gt;98&lt;/td&gt;&#xA;          &lt;td&gt;16&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;STM32F767xx&lt;/td&gt;&#xA;          &lt;td&gt;10&lt;/td&gt;&#xA;          &lt;td&gt;110&lt;/td&gt;&#xA;          &lt;td&gt;16&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;STM32H743xx&lt;/td&gt;&#xA;          &lt;td&gt;10&lt;/td&gt;&#xA;          &lt;td&gt;150&lt;/td&gt;&#xA;          &lt;td&gt;16&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;STM32H750xx&lt;/td&gt;&#xA;          &lt;td&gt;10&lt;/td&gt;&#xA;          &lt;td&gt;150&lt;/td&gt;&#xA;          &lt;td&gt;16&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;中断向量表&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e4%b8%ad%e6%96%ad%e5%90%91%e9%87%8f%e8%a1%a8&#34;&gt;&lt;/a&gt;&#xA;中断向量表&#xA;&lt;/h2&gt;&lt;p&gt;定义一块固定的内存，以字节对齐，存放各个==中断服务函数程序的首地址==。&lt;/p&gt;&#xA;&lt;p&gt;中断向量表定义在==启动文件中==，当发生中断，CPU会自动执行对应的中断服务函数&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/08/28_10_54_8_202408281054382.png&#34; alt=&#34;image-20240828105408328&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;相关寄存器&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%9b%b8%e5%85%b3%e5%af%84%e5%ad%98%e5%99%a8&#34;&gt;&lt;/a&gt;&#xA;相关寄存器&#xA;&lt;/h2&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;NVIC相关寄存器&lt;/th&gt;&#xA;          &lt;th&gt;位数&lt;/th&gt;&#xA;          &lt;th&gt;寄存器个数&lt;/th&gt;&#xA;          &lt;th&gt;备注&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;中断使能寄存器（ISER)&lt;/td&gt;&#xA;          &lt;td&gt;32&lt;/td&gt;&#xA;          &lt;td&gt;8&lt;/td&gt;&#xA;          &lt;td&gt;每个位控制一个中断&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;中断除能寄存器（ICER)&lt;/td&gt;&#xA;          &lt;td&gt;32&lt;/td&gt;&#xA;          &lt;td&gt;8&lt;/td&gt;&#xA;          &lt;td&gt;每个位控制一个中断&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;应用程序中断及复位控制寄存器（AIRCR)&lt;/td&gt;&#xA;          &lt;td&gt;32&lt;/td&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;位[10:8]控制优先级分组&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;中断优先级寄存器 （IPR)&lt;/td&gt;&#xA;          &lt;td&gt;8&lt;/td&gt;&#xA;          &lt;td&gt;240&lt;/td&gt;&#xA;          &lt;td&gt;8个位对应一个中断，而 STM32只使用高4位&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;NVIC还有：中断挂起，解挂，激活标志等非常用功能。&lt;/p&gt;</description>
    </item>
    <item>
      <title>最小系统</title>
      <link>http://localhost:1313/post/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E5%A4%96%E8%AE%BE%E7%BB%84%E4%BB%B6/%E6%9C%80%E5%B0%8F%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E5%A4%96%E8%AE%BE%E7%BB%84%E4%BB%B6/%E6%9C%80%E5%B0%8F%E7%B3%BB%E7%BB%9F/</guid>
      <description>&lt;h1 id=&#34;是什么&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%98%af%e4%bb%80%e4%b9%88&#34;&gt;&lt;/a&gt;&#xA;是什么&#xA;&lt;/h1&gt;&lt;p&gt;最小系统是保障MCU正常工作的最小电路的组成单元&lt;/p&gt;&#xA;&lt;pre class=&#34;mermaid&#34;&gt;block-beta&#xD;&#xA;&#x9;columns 3&#xD;&#xA;&#x9;MCU:2&#xD;&#xA;&#x9;block&#xD;&#xA;&#x9;&#x9;columns 1&#xD;&#xA;&#x9;&#x9;电源电路&#xD;&#xA;&#x9;&#x9;晶振电路&#xD;&#xA;&#x9;end&#xD;&#xA;&#x9;下载调试电路&#xD;&#xA;&#x9;BOOT启动电路&#xD;&#xA;&#x9;复位电路&#xD;&#xA;&#x9;其他电路:3&#xD;&#xA;&#x9;&#xA;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;管脚定义&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%ae%a1%e8%84%9a%e5%ae%9a%e4%b9%89&#34;&gt;&lt;/a&gt;&#xA;管脚定义&#xA;&lt;/h1&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;类型&lt;/th&gt;&#xA;          &lt;th&gt;引脚名称&lt;/th&gt;&#xA;          &lt;th&gt;说明&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;电源&lt;/td&gt;&#xA;          &lt;td&gt;VDD/VSS&lt;/td&gt;&#xA;          &lt;td&gt;电源正（VDD）/负（VSS）引脚，给STM32供电&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;VDDA/VSSA&lt;/td&gt;&#xA;          &lt;td&gt;模拟部分电源正/负引脚，给STM32内部模拟部分供电 参考电压正/负引脚，给STM32内部ADC/DAC提供参考电压&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;VREF+/VREF-&lt;/td&gt;&#xA;          &lt;td&gt;100脚及以上的STM32F103型号才有这两个脚&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;VBAT&lt;/td&gt;&#xA;          &lt;td&gt;RTC&amp;amp;后备区域供电引脚，给RTC和后备区域供电。一般VBAT 接电池，用于断电维持RTC工作，如不需要，直接将VBAT 接VDD即可&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;复位&lt;/td&gt;&#xA;          &lt;td&gt;NRST&lt;/td&gt;&#xA;          &lt;td&gt;复位引脚，用于复位STM32，低电平复位 启动选择引脚，一般这两个脚各接一个下拉电阻即可&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;启动&lt;/td&gt;&#xA;          &lt;td&gt;BOOT0/BOOT1&lt;/td&gt;&#xA;          &lt;td&gt;其他启动配置说明详见后续分析&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;晶振&lt;/td&gt;&#xA;          &lt;td&gt;OSC_IN/ OSC_OUT&lt;/td&gt;&#xA;          &lt;td&gt;外部HSE晶振引脚，用于给STM32提供高精度系统时钟 如果使用内部HSI能满足使用需求，这两个脚可以不接晶振&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;OSC32_IN / OSC32_OUT&lt;/td&gt;&#xA;          &lt;td&gt;外部LSE晶振引脚，用于给STM32内部RTC提供时钟 如果使用内部LSI能满足使用需求，这两个脚可以不接晶振&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;调试&lt;/td&gt;&#xA;          &lt;td&gt;SWCLK/SWDIO&lt;/td&gt;&#xA;          &lt;td&gt;SWD调试引脚，用于调试STM32程序，同时STM32还支持 JTAG调试，不过我们不推荐使用！因为SWD省IO！&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;电源电路&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%94%b5%e6%ba%90%e7%94%b5%e8%b7%af&#34;&gt;&lt;/a&gt;&#xA;电源电路&#xA;&lt;/h1&gt;&lt;p&gt;在&lt;code&gt;GND&lt;/code&gt;和&lt;code&gt;POWER&lt;/code&gt;之间一般会连接一个滤波电容，该电容==保证供电电压的稳定性==，一般遇到供电都会加上滤波电容&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;BAT&lt;/code&gt;一般使用纽扣电池，备用电池是给&lt;code&gt;RTC&lt;/code&gt;和备份寄存器服务的，如果不需要这些则可以不使用纽扣电池，&lt;code&gt;VBAT&lt;/code&gt;可以直接接&lt;code&gt;POWER&lt;/code&gt;或者直接悬空&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://gitlab.com/18355291538/picture/-/raw/main/pictures/2024/09/5_14_29_41_202409051429525.png&#34; alt=&#34;电源电路&#34;&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;复位电路&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%a4%8d%e4%bd%8d%e7%94%b5%e8%b7%af&#34;&gt;&lt;/a&gt;&#xA;复位电路&#xA;&lt;/h1&gt;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;手动复位：当按下复位按键，&lt;code&gt;NRST&lt;/code&gt;直接接地，变成低电平开始复位，反之，则为高电平&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;上电复位：当芯片开始上电的时候，&lt;code&gt;vcc&lt;/code&gt;将会给电容充电，电容相当于短路，这时&lt;code&gt;NRST&lt;/code&gt;与地直接相连，变成低电平开始复位，当电容充满电时，将会变成高电平，实现了上电复位的功能&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;电容==充电==过程：当电容开始充电时，它的两极板之间存在电势差，电路中的电流开始流动，电容逐渐储存电荷。刚充电时，电容像是==导线==。&lt;/p&gt;</description>
    </item>
    <item>
      <title>关于</title>
      <link>http://localhost:1313/about/</link>
      <pubDate>Thu, 09 Jun 2022 20:12:52 +0800</pubDate>
      <guid>http://localhost:1313/about/</guid>
      <description>&lt;p&gt;ceshi&lt;/p&gt;</description>
    </item>
    <item>
      <title>友情链接</title>
      <link>http://localhost:1313/friend/</link>
      <pubDate>Thu, 09 Jun 2022 20:12:52 +0800</pubDate>
      <guid>http://localhost:1313/friend/</guid>
      <description>&lt;h2 id=&#34;本站信息&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%9c%ac%e7%ab%99%e4%bf%a1%e6%81%af&#34;&gt;&lt;/a&gt;&#xA;本站信息&#xA;&lt;/h2&gt;&lt;ul&gt;&#xA;&lt;li&gt;站名： 拔剑Sketon&lt;/li&gt;&#xA;&lt;li&gt;站长： 拔剑Sketon&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;申请方法&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e7%94%b3%e8%af%b7%e6%96%b9%e6%b3%95&#34;&gt;&lt;/a&gt;&#xA;申请方法&#xA;&lt;/h2&gt;&lt;ul&gt;&#xA;&lt;li&gt;添加本站后，在本页留言，格式如下&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;l&#34;&gt;```yml&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#您的名字&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#您的网址&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;desc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#简短描述&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#一张图片&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;l&#34;&gt;```&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;小伙伴们&#34;&gt;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%b0%8f%e4%bc%99%e4%bc%b4%e4%bb%ac&#34;&gt;&lt;/a&gt;&#xA;小伙伴们&#xA;&lt;/h2&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;friend-wrap&#34; data-aos=&#34;zoom-in&#34;&gt;&#xA;  &#xA;    &lt;div class=&#34;friend-item-wrap&#34;&gt;&#xA;      &lt;a href=&#34;https://d-sketon.github.io/&#34; rel=&#34;noopener external nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;/a&gt;&#xA;      &lt;div class=&#34;friend-icon-wrap&#34;&gt;&#xA;        &lt;div class=&#34;friend-icon&#34;&gt;&#xA;          &lt;img&#xA;            data-src=&#34;https://d-sketon.github.io/avatar/avatar.webp&#34;&#xA;            data-sizes=&#34;auto&#34;&#xA;            alt=&#34;D-Sketon&#34;&#xA;            class=&#34;lazyload&#34;&#xA;          /&gt;&#xA;        &lt;/div&gt;&#xA;      &lt;/div&gt;&#xA;      &lt;div class=&#34;friend-info-wrap&#34;&gt;&#xA;        &lt;div class=&#34;friend-name&#34;&gt;&#xA;          D-Sketon&#xA;        &lt;/div&gt;&#xA;        &lt;div class=&#34;friend-desc&#34;&gt;&#xA;          Hexo 建站&#xA;        &lt;/div&gt;&#xA;      &lt;/div&gt;&#xA;    &lt;/div&gt;&#xA;  &#xA;    &lt;div class=&#34;friend-item-wrap&#34;&gt;&#xA;      &lt;a href=&#34;https://d-sketon.github.io/astro-theme-reimu/&#34; rel=&#34;noopener external nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;/a&gt;&#xA;      &lt;div class=&#34;friend-icon-wrap&#34;&gt;&#xA;        &lt;div class=&#34;friend-icon&#34;&gt;&#xA;          &lt;img&#xA;            data-src=&#34;https://d-sketon.github.io/avatar/avatar.webp&#34;&#xA;            data-sizes=&#34;auto&#34;&#xA;            alt=&#34;D-Sketon&#34;&#xA;            class=&#34;lazyload&#34;&#xA;          /&gt;&#xA;        &lt;/div&gt;&#xA;      &lt;/div&gt;&#xA;      &lt;div class=&#34;friend-info-wrap&#34;&gt;&#xA;        &lt;div class=&#34;friend-name&#34;&gt;&#xA;          D-Sketon&#xA;        &lt;/div&gt;&#xA;        &lt;div class=&#34;friend-desc&#34;&gt;&#xA;          Astro 建站&#xA;        &lt;/div&gt;&#xA;      &lt;/div&gt;&#xA;    &lt;/div&gt;&#xA;  &#xA;&lt;/div&gt;</description>
    </item>
  </channel>
</rss>
